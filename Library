--[[

obfuscated @ discord.gg/25ms

--]]
local w=cloneref or clonereference or function(w)return w end local t=w(game:GetService("HttpService"))local K,l,Z=isfolder,isfile,listfiles if typeof(copyfunction)=="function"then local w,t,a=copyfunction(K),copyfunction(l),copyfunction(Z)local P,C=pcall(function()return w("test"..tostring(math.random(1000000,9999999)))end)if P==false or typeof(C)~="boolean"then K=function(t)local K,l=pcall(w,t)return((K and{l}or{false}))[1]end l=function(w)local K,l=pcall(t,w)return((K and{l}or{false}))[1]end Z=function(w)local t,K=pcall(a,w)return((t and{K}or{{}}))[1]end end local B,e=copyfunction(makefolder),copyfunction(delfile)local J,y=pcall(function()B("test"..tostring(math.random(1000000,9999999)))end)if J==false then makefolder=function(w)local t,K=pcall(B,w)return((t and{K}or{false}))[1]end end local u,m=pcall(function()e("test"..tostring(math.random(1000000,9999999)))end)if u==false then delfile=function(w)local t,K=pcall(e,w)return((t and{K}or{false}))[1]end end end local a={}do a.Folder="ObsidianLibSettings"a.SubFolder=""a.Ignore={}a.Library=nil a.Initialized=false a.Parser={Toggle={Save=function(w,t)return{type="Toggle";idx=w,value=t.Value}end,Load=function(w,t)local K=(a.Library.Toggles)[w]if K and K.Value~=t.value then K:SetValue(t.value,true)end end},Slider={Save=function(w,t)return{type="Slider",idx=w;value=tostring(t.Value)}end,Load=function(w,t)local K=(a.Library.Options)[w]if K and K.Value~=t.value then K:SetValue(t.value,true)end end};Dropdown={Save=function(w,t)return{type="Dropdown",idx=w;value=t.Value,mutli=t.Multi}end;Load=function(w,t)local K=(a.Library.Options)[w]if K and K.Value~=t.value then K:SetValue(t.value,true)end end};ColorPicker={Save=function(w,t)return{type="ColorPicker";idx=w;value=t.Value:ToHex();transparency=t.Transparency}end;Load=function(w,t)if(a.Library.Options)[w]then(a.Library.Options)[w]:SetValueRGB(Color3.fromHex(t.value),t.transparency,true)end end},KeyPicker={Save=function(w,t)return{type="KeyPicker",idx=w,mode=t.Mode,key=t.Value,modifiers=t.Modifiers}end;Load=function(w,t)if(a.Library.Options)[w]then(a.Library.Options)[w]:SetValue({t.key,t.mode,t.modifiers},true)end end},Input={Save=function(w,t)return{type="Input",idx=w;text=t.Value}end,Load=function(w,t)local K=(a.Library.Options)[w]if K and(K.Value~=t.text and type(t.text)=="string")then(a.Library.Options)[w]:SetValue(t.text,true)end end}}function a.SetLibrary(t,w)t.Library=w end function a.IgnoreThemeSettings(w)w:SetIgnoreIndexes({"BackgroundColor";"MainColor";"AccentColor","OutlineColor";"FontColor";"FontFace";"ThemeManager_ThemeList","ThemeManager_CustomThemeList";"ThemeManager_CustomThemeName"})end function a.CheckSubFolder(t,w)if typeof(t.SubFolder)~="string"or t.SubFolder==""then return false end if w==true then if not K(t.Folder..("/settings/"..t.SubFolder))then makefolder(t.Folder..("/settings/"..t.SubFolder))end end return true end function a.GetPaths(w)local t={}local K=w.Folder:split("/")for w=1,#K,1 do local l=table.concat(K,"/",1,w)if not table.find(t,l)then(t)[#t+1]=l end end;(t)[#t+1]=w.Folder.."/themes";(t)[#t+1]=w.Folder.."/settings"if w:CheckSubFolder(false)then local l=w.Folder..("/settings/"..w.SubFolder)K=l:split("/")for w=1,#K,1 do local l=table.concat(K,"/",1,w)if not table.find(t,l)then(t)[#t+1]=l end end end return t end function a.BuildFolderTree(w)local t=w:GetPaths()for w=1,#t,1 do local l=false repeat local Z=(t)[w]if K(Z)then l=true break end makefolder(Z)l=true until true if not l then break end end end function a.CheckFolderTree(w)if K(w.Folder)then return end a:BuildFolderTree()task.wait(.1)end function a.SetIgnoreIndexes(t,w)for w,K in pairs(w)do(t.Ignore)[K]=true end end function a.SetFolder(t,w)t.Folder=w t:BuildFolderTree()end function a.SetSubFolder(t,w)t.SubFolder=w t:BuildFolderTree()end function a.Save(l,w,K)if l.Loading then return false,"loading"end if not l.Initialized then return false,"not initialized"end if not w then if l.Library then l.Library:Notify("Failed to save config: no config file is selected")end return false,"no config file is selected"end a:CheckFolderTree()local Z=l.Folder..("/settings/"..(w..".json"))if a:CheckSubFolder(true)then Z=l.Folder..("/settings/"..(l.SubFolder..("/"..(w..".json"))))end local P={objects={}}for w,t in pairs(l.Library.Toggles)do local K=false repeat if not t.Type then K=true break end if not(l.Parser)[t.Type]then K=true break end if(l.Ignore)[w]then K=true break end table.insert(P.objects,(l.Parser)[t.Type].Save(w,t))K=true until true if not K then break end end for w,t in pairs(l.Library.Options)do local K=false repeat if not t.Type then K=true break end if not(l.Parser)[t.Type]then K=true break end if(l.Ignore)[w]then K=true break end table.insert(P.objects,(l.Parser)[t.Type].Save(w,t))K=true until true if not K then break end end local C,B=pcall(t.JSONEncode,t,P)if not C then if l.Library then l.Library:Notify("Failed to save config: failed to encode data")end return false,"failed to encode data"end writefile(Z,B)return true end function a.Load(K,w)if not w then return false,"no config file is selected"end a:CheckFolderTree()local Z=K.Folder..("/settings/"..(w..".json"))if a:CheckSubFolder(true)then Z=K.Folder..("/settings/"..(K.SubFolder..("/"..(w..".json"))))end if not l(Z)then return false,"invalid file"end local P,C=pcall(t.JSONDecode,t,readfile(Z))if not P then return false,"decode error"end for w,t in pairs(C.objects)do local l=false repeat if not t.type then l=true break end if not(K.Parser)[t.type]then l=true break end pcall((K.Parser)[t.type].Load,t.idx,t)l=true until true if not l then break end end return true end function a.Delete(t,w)if not w then return false,"no config file is selected"end local K=t.Folder..("/settings/"..(w..".json"))if a:CheckSubFolder(true)then K=t.Folder..("/settings/"..(t.SubFolder..("/"..(w..".json"))))end if not l(K)then return false,"invalid file"end local Z=pcall(delfile,K)if not Z then return false,"delete file error"end return true end function a.RefreshConfigList(w)local t,K=pcall(function()a:CheckFolderTree()local t={}local K={}if a:CheckSubFolder(true)then t=Z(w.Folder..("/settings/"..w.SubFolder))else t=Z(w.Folder.."/settings")end if typeof(t)~="table"then t={}end for w=1,#t,1 do local l=(t)[w]if l:sub(-5)==".json"then local w=l:find(".json",1,true)local t=w local Z=l:sub(w,w)while Z~="/"and(Z~="\092"and Z~="")do w=w-1 Z=l:sub(w,w)end if Z=="/"or Z=="\092"then table.insert(K,l:sub(w+1,t-1))end end end return K end)if not t then if w.Library then w.Library:Notify("Failed to load config list: "..tostring(K))else warn("Failed to load config list: "..tostring(K))end return{}end return K end function a.GetAutoloadConfig(w)a:CheckFolderTree()local t=w.Folder.."/settings/autoload.txt"if a:CheckSubFolder(true)then t=w.Folder..("/settings/"..(w.SubFolder.."/autoload.txt"))end if l(t)then local w,K=pcall(readfile,t)if not w then return"none"end K=tostring(K)return K==""and"none"or K end return"none"end function a.LoadAutoloadConfig(w)a:CheckFolderTree()local t=w.Folder.."/settings/autoload.txt"if a:CheckSubFolder(true)then t=w.Folder..("/settings/"..(w.SubFolder.."/autoload.txt"))end local K="default"if not l(t)then local w=pcall(writefile,t,"default")if not w then return false,"write file error"end else local l,Z=pcall(readfile,t)if not l then return w.Library:Notify("Failed to read autoload config: read file error")end Z=(tostring(Z)):gsub("\n","")K=Z==""and"default"or Z end w.Loading=true local Z,P=w:Load(K)w.Loading=false if Z then w.Initialized=true else if P=="invalid file"or P=="decode error"then w:Save(K,true)local t=w:Load(K)else w.Library:Notify("Failed to load autoload config: "..P)end w.Initialized=true end end function a.SaveAutoloadConfig(t,w)a:CheckFolderTree()local K=t.Folder.."/settings/autoload.txt"if a:CheckSubFolder(true)then K=t.Folder..("/settings/"..(t.SubFolder.."/autoload.txt"))end local l=pcall(writefile,K,w)if not l then return false,"write file error"end return true,""end function a.DeleteAutoLoadConfig(w)a:CheckFolderTree()local t=w.Folder.."/settings/autoload.txt"if a:CheckSubFolder(true)then t=w.Folder..("/settings/"..(w.SubFolder.."/autoload.txt"))end local K=pcall(delfile,t)if not K then return false,"delete file error"end return true,""end a:BuildFolderTree()a.AutoloadDelay=.1 end local P=w(game:GetService("CoreGui"))local C=w(game:GetService("Players"))local B=w(game:GetService("RunService"))local e=w(game:GetService("SoundService"))local J=w(game:GetService("UserInputService"))local y=w(game:GetService("TextService"))local u=w(game:GetService("Teams"))local m=w(game:GetService("TweenService"))local o=getgenv or function()return shared end local A=setclipboard or nil local v=protectgui or syn and syn.protect_gui or function() end local x=P local E=C.LocalPlayer or C.PlayerAdded:Wait()local z=w(E:GetMouse())local M={}local d={}local s={}local p={}local b={LocalPlayer=E;DevicePlatform=nil;IsMobile=false;IsRobloxFocused=true;ScreenGui=nil;SearchText="";Searching=false,LastSearchTab=nil;ActiveTab=nil;Tabs={};DependencyBoxes={};KeybindFrame=nil;KeybindContainer=nil,KeybindToggles={};Notifications={};ToggleKeybind=Enum.KeyCode.RightControl,TweenInfo=TweenInfo.new(.1,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),NotifyTweenInfo=TweenInfo.new(.25,Enum.EasingStyle.Quad,Enum.EasingDirection.Out);Toggled=false;Unloaded=false,Labels=M,Buttons=d;Toggles=s,Options=p;NotifySide="Right",ShowCustomCursor=true;ForceCheckbox=false;ShowToggleFrameInKeybinds=true;NotifyOnError=false;CantDragForced=false,Signals={};UnloadSignals={};MinSize=Vector2.new(480,360);DPIScale=1,CornerRadius=8;IsLightTheme=false,Scheme={BackgroundColor=Color3.fromRGB(12,8,20);MainColor=Color3.fromRGB(20,12,30);AccentColor=Color3.fromRGB(255,128,0),OutlineColor=Color3.fromRGB(45,25,55);FontColor=Color3.new(1,.98,.95);Font=Font.fromEnum(Enum.Font.Code);Red=Color3.fromRGB(255,60,40);Dark=Color3.new(.05,.02,.08),White=Color3.new(1,1,1)};Registry={},DPIRegistry={}}local n={Assets={TransparencyTexture={RobloxId=139785960036434,Path="Obsidian/assets/TransparencyTexture.png",Id=nil},SaturationMap={RobloxId=4155801252;Path="Obsidian/assets/SaturationMap.png",Id=nil}}}do local w="https://raw.githubusercontent.com/deividcomsono/Obsidian/refs/heads/main/"local function t(w,t)if not K or not makefolder then return end local l=w:split("/")local Z=""if t then table.remove(l,#l)end for w,t in ipairs(l)do if not K(Z..t)then makefolder(Z..t)end Z=Z..(t.."/")end return Z end function n.GetAsset(w)if not(n.Assets)[w]then return nil end local t=(n.Assets)[w]if t.Id then return t.Id end local K=string.format("rbxassetid://%s",t.RobloxId)if getcustomasset then local w,l=pcall(getcustomasset,t.Path)if w and l then K=l end end t.Id=K return K end function n.DownloadAsset(K)if not getcustomasset or not writefile or not l then return end t(K,true)if l(K)then return end local Z=K:gsub("Obsidian/","")writefile(K,game:HttpGet(w..Z))end for w,t in n.Assets do n.DownloadAsset(t.Path)end end if B:IsStudio()then if J.TouchEnabled and not J.MouseEnabled then b.IsMobile=true b.MinSize=Vector2.new(480,240)else b.IsMobile=false b.MinSize=Vector2.new(480,360)end else pcall(function()b.DevicePlatform=J:GetPlatform()end)b.IsMobile=b.DevicePlatform==Enum.Platform.Android or b.DevicePlatform==Enum.Platform.IOS b.MinSize=b.IsMobile and Vector2.new(480,240)or Vector2.new(480,360)end local D={Frame={BorderSizePixel=0},ImageLabel={BackgroundTransparency=1;BorderSizePixel=0},ImageButton={AutoButtonColor=false;BorderSizePixel=0},ScrollingFrame={BorderSizePixel=0},TextLabel={BorderSizePixel=0;FontFace="Font";RichText=true,TextColor3="FontColor"};TextButton={AutoButtonColor=false;BorderSizePixel=0,FontFace="Font";RichText=true,TextColor3="FontColor"},TextBox={BorderSizePixel=0,FontFace="Font",PlaceholderColor3=function()local w,t,K=b.Scheme.FontColor:ToHSV()return Color3.fromHSV(w,t,K/2)end,Text="";TextColor3="FontColor"},UIListLayout={SortOrder=Enum.SortOrder.LayoutOrder},UIStroke={ApplyStrokeMode=Enum.ApplyStrokeMode.Border;Thickness=1;Transparency=.2};Window={Title="No Title",Footer="No Footer",Position=UDim2.fromOffset(6,6);Size=UDim2.fromOffset(720,600),IconSize=UDim2.fromOffset(60,60),AutoShow=true,Center=true,Resizable=true,SearchbarSize=UDim2.fromScale(1,1),CornerRadius=8;NotifySide="Right";ShowCustomCursor=true;Font=Enum.Font.Code,ToggleKeybind=Enum.KeyCode.RightControl,MobileButtonsSide="Left",UnlockMouseWhileOpen=true;Compact=false;EnableSidebarResize=false,SidebarMinWidth=180;SidebarCompactWidth=54,SidebarCollapseThreshold=.5,SidebarHighlightCallback=nil},Toggle={Text="Toggle";Default=false,Callback=function() end;Changed=function() end;Risky=false,Disabled=false;Visible=true};Input={Text="Input",Default="",Finished=false;Numeric=false,ClearTextOnFocus=true;Placeholder="",AllowEmpty=true;EmptyReset="---";Callback=function() end,Changed=function() end;Disabled=false;Visible=true},Slider={Text="Slider",Default=0,Min=0,Max=100;Rounding=0,Prefix="",Suffix="",Callback=function() end,Changed=function() end;Disabled=false;Visible=true},Dropdown={Values={};DisabledValues={};Multi=false,MaxVisibleDropdownItems=8,Callback=function() end;Changed=function() end;Disabled=false;Visible=true},Viewport={Object=nil,Camera=nil,Clone=true;AutoFocus=true;Interactive=false;Height=200;Visible=true},Image={Image="",Transparency=0,Color=Color3.new(1,1,1);RectOffset=Vector2.zero;RectSize=Vector2.zero;ScaleType=Enum.ScaleType.Fit,Height=200;Visible=true};Video={Video="",Looped=false;Playing=false,Volume=1;Height=200;Visible=true},UIPassthrough={Instance=nil;Height=24,Visible=true},KeyPicker={Text="KeyPicker";Default="None";DefaultModifiers={};Mode="Toggle";Modes={"Always","Toggle";"Hold"};SyncToggleState=false,Callback=function() end;ChangedCallback=function() end,Changed=function() end;Clicked=function() end},ColorPicker={Default=Color3.new(1,1,1),Callback=function() end,Changed=function() end}}local g={Bottom={0,1};Right={1,0}}local F={Left={.5,1},Right={.5,1}}local function S(w,t)if typeof(w)=="UDim"then return UDim.new(w.Scale,w.Offset*b.DPIScale)elseif typeof(w)=="Vector2"then return w*b.DPIScale end if t then return UDim2.new(w.X.Scale,w.X.Offset*b.DPIScale+(t)[1]*b.DPIScale,w.Y.Scale,w.Y.Offset*b.DPIScale+(t)[2]*b.DPIScale)end return UDim2.new(w.X.Scale,w.X.Offset*b.DPIScale,w.Y.Scale,w.Y.Offset*b.DPIScale)end local function f(w)return w*b.DPIScale end local function Y(w,t,K)local l=Instance.new("BindableEvent")local Z=w:Once(function(...)if not K or typeof(K)=="function"and K(...)then l:Fire(true)else l:Fire(false)end end)task.delay(t,function()Z:Disconnect()l:Fire(false)end)local a=l.Event:Wait()l:Destroy()return a end local function i(w,t)return w.UserInputType==Enum.UserInputType.MouseButton1 or t==true and w.UserInputType==Enum.UserInputType.MouseButton2 or w.UserInputType==Enum.UserInputType.Touch end local function T(w,t)return i(w,t)and(w.UserInputState==Enum.UserInputState.Begin and b.IsRobloxFocused)end local function Q(w)return(w.UserInputType==Enum.UserInputType.MouseMovement or w.UserInputType==Enum.UserInputType.Touch)and w.UserInputState==Enum.UserInputState.Change end local function N(w,t)return i(w,t)and((w.UserInputState==Enum.UserInputState.Begin or w.UserInputState==Enum.UserInputState.Change)and b.IsRobloxFocused)end local function U(w)local t=0 for w,K in pairs(w)do t=t+1 end return t end local function L(w)if not(w and w.PlaybackState==Enum.PlaybackState.Playing)then return end w:Cancel()end local function G(w)return w:match("^%s*(.-)%s*$")end local function X(w,t)assert(t>=0,"Invalid rounding number.")if t==0 then return math.floor(w)end return tonumber(string.format("%."..(t.."f"),w))end local function c(w)local t=C:GetPlayers()if w then local w=table.find(t,E)if w then table.remove(t,w)end end table.sort(t,function(w,t)return w.Name:lower()<t.Name:lower()end)return t end local function j()local w=u:GetTeams()table.sort(w,function(w,t)return w.Name:lower()<t.Name:lower()end)return w end local function W(w)local t,K,l=w:ToHSV()return Color3.fromHSV(t,math.max(0,K-.1),math.min(1,l+.1))end function b.UpdateKeybindFrame(w)if not b.KeybindFrame then return end local t=0 for w,K in pairs(b.KeybindToggles)do local l=false repeat if not K.Holder.Visible then l=true break end local w=K.Label.Size.X.Offset+K.Label.Position.X.Offset if w>t then t=w end l=true until true if not l then break end end b.KeybindFrame.Size=UDim2.fromOffset(t+18*b.DPIScale,0)end function b.UpdateDependencyBoxes(w)for w,t in pairs(b.DependencyBoxes)do t:Update(true)end if b.Searching then b:UpdateSearch(b.SearchText)end end local function q(w,t)local K=0 for w,l in pairs(w.Elements)do local Z=false repeat if l.Type=="Divider"then l.Holder.Visible=false Z=true break elseif l.SubButton then local w=false if(l.Text:lower()):match(t)and l.Visible then w=true else l.Base.Visible=false end if(l.SubButton.Text:lower()):match(t)and l.SubButton.Visible then w=true else l.SubButton.Base.Visible=false end l.Holder.Visible=w if w then K=K+1 end Z=true break end if l.Text and((l.Text:lower()):match(t)and l.Visible)then l.Holder.Visible=true K=K+1 else l.Holder.Visible=false end Z=true until true if not Z then break end end for w,l in pairs(w.DependencyBoxes)do local Z=false repeat if not l.Visible then Z=true break end K=K+q(l,t)Z=true until true if not Z then break end end return K end local function k(w)for w,t in pairs(w.Elements)do t.Holder.Visible=typeof(t.Visible)=="boolean"and t.Visible or true if t.SubButton then t.Base.Visible=t.Visible t.SubButton.Base.Visible=t.SubButton.Visible end end w:Resize()w.Holder.Visible=true for w,t in pairs(w.DependencyBoxes)do local K=false repeat if not t.Visible then K=true break end k(t)K=true until true if not K then break end end end function b.UpdateSearch(t,w)b.SearchText=w if b.LastSearchTab then for w,t in pairs(b.LastSearchTab.Groupboxes)do for w,t in pairs(t.Elements)do t.Holder.Visible=typeof(t.Visible)=="boolean"and t.Visible or true if t.SubButton then t.Base.Visible=t.Visible t.SubButton.Base.Visible=t.SubButton.Visible end end for w,t in pairs(t.DependencyBoxes)do local K=false repeat if not t.Visible then K=true break end k(t)K=true until true if not K then break end end t:Resize()t.Holder.Visible=true end for w,t in pairs(b.LastSearchTab.Tabboxes)do for w,t in pairs(t.Tabs)do for w,t in pairs(t.Elements)do t.Holder.Visible=typeof(t.Visible)=="boolean"and t.Visible or true if t.SubButton then t.Base.Visible=t.Visible t.SubButton.Base.Visible=t.SubButton.Visible end end for w,t in pairs(t.DependencyBoxes)do local K=false repeat if not t.Visible then K=true break end k(t)K=true until true if not K then break end end t.ButtonHolder.Visible=true end t.ActiveTab:Resize()t.Holder.Visible=true end for w,t in pairs(b.LastSearchTab.DependencyGroupboxes)do local K=false repeat if not t.Visible then K=true break end for w,t in pairs(t.Elements)do t.Holder.Visible=typeof(t.Visible)=="boolean"and t.Visible or true if t.SubButton then t.Base.Visible=t.Visible t.SubButton.Base.Visible=t.SubButton.Visible end end for w,t in pairs(t.DependencyBoxes)do local K=false repeat if not t.Visible then K=true break end k(t)K=true until true if not K then break end end t:Resize()t.Holder.Visible=true K=true until true if not K then break end end end local K=w:lower()if G(K)==""or b.ActiveTab.IsKeyTab then b.Searching=false b.LastSearchTab=nil return end b.Searching=true for w,t in pairs(b.ActiveTab.Groupboxes)do local l=0 for w,t in pairs(t.Elements)do local Z=false repeat if t.Type=="Divider"then t.Holder.Visible=false Z=true break elseif t.SubButton then local w=false if(t.Text:lower()):match(K)and t.Visible then w=true else t.Base.Visible=false end if(t.SubButton.Text:lower()):match(K)and t.SubButton.Visible then w=true else t.SubButton.Base.Visible=false end t.Holder.Visible=w if w then l=l+1 end Z=true break end if t.Text and((t.Text:lower()):match(K)and t.Visible)then t.Holder.Visible=true l=l+1 else t.Holder.Visible=false end Z=true until true if not Z then break end end for w,t in pairs(t.DependencyBoxes)do local Z=false repeat if not t.Visible then Z=true break end l=l+q(t,K)Z=true until true if not Z then break end end if l>0 then t:Resize()end t.Holder.Visible=l>0 end for w,t in pairs(b.ActiveTab.Tabboxes)do local l=0 local Z={}for w,t in pairs(t.Tabs)do(Z)[t]=0 for w,l in pairs(t.Elements)do local a=false repeat if l.Type=="Divider"then l.Holder.Visible=false a=true break elseif l.SubButton then local w=false if(l.Text:lower()):match(K)and l.Visible then w=true else l.Base.Visible=false end if(l.SubButton.Text:lower()):match(K)and l.SubButton.Visible then w=true else l.SubButton.Base.Visible=false end l.Holder.Visible=w if w then(Z)[t]=(Z)[t]+1 end a=true break end if l.Text and((l.Text:lower()):match(K)and l.Visible)then l.Holder.Visible=true;(Z)[t]=(Z)[t]+1 else l.Holder.Visible=false end a=true until true if not a then break end end for w,l in pairs(t.DependencyBoxes)do local a=false repeat if not l.Visible then a=true break end;(Z)[t]=(Z)[t]+q(l,K)a=true until true if not a then break end end end for w,K in pairs(Z)do w.ButtonHolder.Visible=K>0 if K>0 then l=l+1 if t.ActiveTab==w then w:Resize()elseif(Z)[t.ActiveTab]==0 then w:Show()end end end t.Holder.Visible=l>0 end for w,t in pairs(b.ActiveTab.DependencyGroupboxes)do local l=false repeat if not t.Visible then l=true break end local w=0 for t,l in pairs(t.Elements)do local Z=false repeat if l.Type=="Divider"then l.Holder.Visible=false Z=true break elseif l.SubButton then local t=false if(l.Text:lower()):match(K)and l.Visible then t=true else l.Base.Visible=false end if(l.SubButton.Text:lower()):match(K)and l.SubButton.Visible then t=true else l.SubButton.Base.Visible=false end l.Holder.Visible=t if t then w=w+1 end Z=true break end if l.Text and((l.Text:lower()):match(K)and l.Visible)then l.Holder.Visible=true w=w+1 else l.Holder.Visible=false end Z=true until true if not Z then break end end for t,l in pairs(t.DependencyBoxes)do local Z=false repeat if not l.Visible then Z=true break end w=w+q(l,K)Z=true until true if not Z then break end end if w>0 then t:Resize()end t.Holder.Visible=w>0 l=true until true if not l then break end end b.LastSearchTab=b.ActiveTab end function b.AddToRegistry(K,w,t)(b.Registry)[w]=t end function b.RemoveFromRegistry(t,w)(b.Registry)[w]=nil end function b.UpdateColorsUsingRegistry(w)for w,t in pairs(b.Registry)do for t,K in pairs(t)do if typeof(K)=="string"then(w)[t]=(b.Scheme)[K]elseif typeof(K)=="function"then(w)[t]=K()end end end end function b.UpdateDPI(K,w,t)if not(b.DPIRegistry)[w]then return end for t,K in pairs(t)do((b.DPIRegistry)[w])[t]=K and K or nil end end function b.SetDPIScale(t,w)b.DPIScale=w/100 b.MinSize=b.MinSize*b.DPIScale for w,t in pairs(b.DPIRegistry)do for K,l in pairs(t)do local Z=false repeat if K=="DPIExclude"or K=="DPIOffset"then Z=true break elseif K=="TextSize"then(w)[K]=f(l)else(w)[K]=S(l,(t.DPIOffset)[K])end Z=true until true if not Z then break end end end for w,t in pairs(b.Tabs)do local K=false repeat if t.IsKeyTab then K=true break end t:Resize(true)for w,t in pairs(t.Groupboxes)do t:Resize()end for w,t in pairs(t.Tabboxes)do for w,t in pairs(t.Tabs)do t:Resize()end end K=true until true if not K then break end end for w,t in pairs(p)do if t.Type=="Dropdown"then t:RecalculateListSize()elseif t.Type=="KeyPicker"then t:Update()end end b:UpdateKeybindFrame()for w,t in pairs(b.Notifications)do t:Resize()end end function b.GiveSignal(t,w)table.insert(b.Signals,w)return w end function IsValidCustomIcon(w)return typeof(w)=="string"and(w:match("rbxasset")or w:match("roblox%.com/asset/%?id=")or w:match("rbxthumb://type="))end local h,H=pcall(function()return(loadstring(game:HttpGet("https://raw.githubusercontent.com/deividcomsono/lucide-roblox-direct/refs/heads/main/source.lua")))()end)function b.GetIcon(t,w)if not h then return end local K,l=pcall(H.GetAsset,w)if not K then return end return l end function b.GetCustomIcon(t,w)if not IsValidCustomIcon(w)then return b:GetIcon(w)else return{Url=w,ImageRectOffset=Vector2.zero,ImageRectSize=Vector2.zero;Custom=true}end end function b.Validate(K,w,t)if typeof(w)~="table"then return t end for t,K in pairs(t)do local l=false repeat if typeof(t)=="number"then l=true break end if typeof(K)=="table"then(w)[t]=b:Validate((w)[t],K)elseif(w)[t]==nil then(w)[t]=K end l=true until true if not l then break end end return w end local function r(w,t)local K=(b.Registry)[t]or{}local l=(b.DPIRegistry)[t]or{}local Z=l.DPIExclude or w.DPIExclude or{}local a=l.DPIOffset or w.DPIOffset or{}for w,P in pairs(w)do local C=false repeat if w=="DPIExclude"or w=="DPIOffset"then C=true break elseif(K)[w]then(K)[w]=nil elseif w~="Text"and((b.Scheme)[P]or typeof(P)=="function")then(K)[w]=P;(t)[w]=(b.Scheme)[P]or P()C=true break end if not(Z)[w]then if w=="Position"or w=="Size"or w:match("Padding")then(l)[w]=P P=S(P,(a)[w])elseif w=="TextSize"then(l)[w]=P P=f(P)end end;(t)[w]=P C=true until true if not C then break end end if U(K)>0 then(b.Registry)[t]=K end if U(l)>0 then l.DPIExclude=Z l.DPIOffset=a;(b.DPIRegistry)[t]=l end end local function I(w,t)local K=Instance.new(w)if(D)[w]then r((D)[w],K)end r(t,K)if t.Parent and not t.ZIndex then pcall(function()K.ZIndex=t.Parent.ZIndex end)end return K end local function V(w,t)local K,l=pcall(function()if not t then t=P end local K if typeof(t)=="function"then K=t()else K=t end w.Parent=K end)if not(K and w.Parent)then w.Parent=b.LocalPlayer:WaitForChild("PlayerGui",math.huge)end end local function R(w,t)if t then V(w,P)return end pcall(v,w)V(w,x)end local O=I("ScreenGui",{Name="Obsidian",DisplayOrder=999,ResetOnSpawn=false})R(O)b.ScreenGui=O O.DescendantRemoving:Connect(function(w)b:RemoveFromRegistry(w);(b.DPIRegistry)[w]=nil end)local wh=I("TextButton",{BackgroundTransparency=1,Modal=false,Size=UDim2.fromScale(0,0);AnchorPoint=Vector2.zero,Text="";ZIndex=-999,Parent=O})local th do th=I("Frame",{AnchorPoint=Vector2.new(.5,.5);BackgroundColor3="White",Size=UDim2.fromOffset(9,1);Visible=false,ZIndex=999;Parent=O})I("Frame",{AnchorPoint=Vector2.new(.5,.5);BackgroundColor3="Dark",Position=UDim2.fromScale(.5,.5),Size=UDim2.new(1,2,1,2);ZIndex=998;Parent=th})local w=I("Frame",{AnchorPoint=Vector2.new(.5,.5);BackgroundColor3="White";Position=UDim2.fromScale(.5,.5);Size=UDim2.fromOffset(1,9),Parent=th})I("Frame",{AnchorPoint=Vector2.new(.5,.5),BackgroundColor3="Dark",Position=UDim2.fromScale(.5,.5),Size=UDim2.new(1,2,1,2),ZIndex=998;Parent=w})end local Kh local lh do Kh=I("Frame",{AnchorPoint=Vector2.new(1,0);BackgroundTransparency=1;Position=UDim2.new(1,-6,0,6);Size=UDim2.new(0,300,1,-6),Parent=O})lh=I("UIListLayout",{HorizontalAlignment=Enum.HorizontalAlignment.Right;Padding=UDim.new(0,6),Parent=Kh})end function b.GetBetterColor(K,w,t)t=t*(b.IsLightTheme and-4 or 2)return Color3.fromRGB(math.clamp(w.R*255+t,0,255),math.clamp(w.G*255+t,0,255),math.clamp(w.B*255+t,0,255))end function b.GetDarkerColor(t,w)local K,l,Z=w:ToHSV()return Color3.fromHSV(K,l,Z/2)end function b.GetKeyString(t,w)if w.EnumType==Enum.KeyCode and(w.Value>33 and w.Value<127)then return string.char(w.Value)end return w.Name end function b.GetTextBounds(Z,w,t,K,l)local a=Instance.new("GetTextBoundsParams")a.Text=w a.RichText=true a.Font=t a.Size=K a.Width=l or workspace.CurrentCamera.ViewportSize.X-32 local P=y:GetTextBoundsAsync(a)return P.X,P.Y end function b.MouseIsOverFrame(K,w,t)local l,Z=w.AbsolutePosition,w.AbsoluteSize return t.X>=l.X and(t.X<=l.X+Z.X and(t.Y>=l.Y and t.Y<=l.Y+Z.Y))end function b.SafeCallback(t,w,...)if not(w and typeof(w)=="function")then return end local K=table.pack(xpcall(w,function(w)task.defer(error,debug.traceback(w,2))if b.NotifyOnError then b:Notify(w)end return w end,...))if not(K)[1]then return nil end return table.unpack(K,2,K.n)end function b.MakeDraggable(Z,w,t,K,l)local a local P local C=false local B t.InputBegan:Connect(function(t)if not T(t)or l and b.CantDragForced then return end a=t.Position P=w.Position C=true B=t.Changed:Connect(function()if t.UserInputState~=Enum.UserInputState.End then return end C=false if B and B.Connected then B:Disconnect()B=nil end end)end)b:GiveSignal(J.InputChanged:Connect(function(t)if not K and not b.Toggled or l and b.CantDragForced or not(O and O.Parent)then C=false if B and B.Connected then B:Disconnect()B=nil end return end if C and Q(t)then local K=t.Position-a w.Position=UDim2.new(P.X.Scale,P.X.Offset+K.X,P.Y.Scale,P.Y.Offset+K.Y)end end))end function b.MakeResizable(l,w,t,K)local Z local a local P=false local C t.InputBegan:Connect(function(t)if not T(t)then return end Z=t.Position a=w.Size P=true C=t.Changed:Connect(function()if t.UserInputState~=Enum.UserInputState.End then return end P=false if C and C.Connected then C:Disconnect()C=nil end end)end)b:GiveSignal(J.InputChanged:Connect(function(t)if not w.Visible or not(O and O.Parent)then P=false if C and C.Connected then C:Disconnect()C=nil end return end if P and Q(t)then local l=t.Position-Z w.Size=UDim2.new(a.X.Scale,math.clamp(a.X.Offset+l.X,b.MinSize.X,math.huge),a.Y.Scale,math.clamp(a.Y.Offset+l.Y,b.MinSize.Y,math.huge))if K then b:SafeCallback(K)end end end))end function b.MakeCover(K,w,t)local l=(g)[t]or{0,0}local Z=(F)[t]or{1,.5}local a=I("Frame",{AnchorPoint=Vector2.new((l)[1],(l)[2]),BackgroundColor3=w.BackgroundColor3;Position=UDim2.fromScale((l)[1],(l)[2]);Size=UDim2.fromScale((Z)[1],(Z)[2]),Parent=w})return a end function b.MakeLine(K,w,t)local l=I("Frame",{AnchorPoint=t.AnchorPoint or Vector2.zero,BackgroundColor3="OutlineColor";Position=t.Position;Size=t.Size,ZIndex=t.ZIndex or 1;Parent=w})return l end function b.MakeOutline(l,w,t,K)local Z=I("Frame",{BackgroundColor3="Dark";Position=UDim2.fromOffset(-2,-2);Size=UDim2.new(1,4,1,4),ZIndex=K;Parent=w})local a=I("Frame",{BackgroundColor3="OutlineColor",Position=UDim2.fromOffset(1,1),Size=UDim2.new(1,-2,1,-2);ZIndex=K;Parent=Z})if t and t>0 then I("UICorner",{CornerRadius=UDim.new(.03,t+1),Parent=Z})I("UICorner",{CornerRadius=UDim.new(.03,t),Parent=a})end return Z end function b.AddDraggableButton(K,w,t)local l={}local Z=I("TextButton",{BackgroundColor3="BackgroundColor",Position=UDim2.fromOffset(6,6);TextSize=16,ZIndex=10,Parent=O;DPIExclude={Position=true}})I("UICorner",{CornerRadius=UDim.new(0,b.CornerRadius-1);Parent=Z})b:MakeOutline(Z,b.CornerRadius,9)l.Button=Z Z.MouseButton1Click:Connect(function()b:SafeCallback(t,l)end)b:MakeDraggable(Z,Z,true)function l.SetText(t,w)local K,l=b:GetTextBounds(w,b.Scheme.Font,16)Z.Text=w Z.Size=UDim2.fromOffset((K*b.DPIScale)*2,(l*b.DPIScale)*2)b:UpdateDPI(Z,{Size=UDim2.fromOffset(K*2,l*2)})end l:SetText(w)return l end function b.AddDraggableMenu(t,w)local K=b:MakeOutline(O,b.CornerRadius,10)K.AutomaticSize=Enum.AutomaticSize.Y K.Position=UDim2.fromOffset(6,6)K.Size=UDim2.fromOffset(0,0)b:UpdateDPI(K,{Position=false;Size=false})local l=I("Frame",{BackgroundColor3="BackgroundColor",Position=UDim2.fromOffset(2,2),Size=UDim2.new(1,-4,1,-4),Parent=K})I("UICorner",{CornerRadius=UDim.new(.03,b.CornerRadius-1),Parent=l})b:MakeLine(l,{Position=UDim2.fromOffset(0,34),Size=UDim2.new(1,0,0,1)})local Z=I("TextLabel",{BackgroundTransparency=1,Size=UDim2.new(1,0,0,34),Text=w,TextSize=15,TextXAlignment=Enum.TextXAlignment.Left,Parent=l})I("UIPadding",{PaddingLeft=UDim.new(0,12),PaddingRight=UDim.new(0,12),Parent=Z})local a=I("Frame",{BackgroundTransparency=1,Position=UDim2.fromOffset(0,35);Size=UDim2.new(1,0,1,-35),Parent=l})I("UIListLayout",{Padding=UDim.new(0,7);Parent=a})I("UIPadding",{PaddingBottom=UDim.new(0,7);PaddingLeft=UDim.new(0,7);PaddingRight=UDim.new(0,7);PaddingTop=UDim.new(0,7),Parent=a})b:MakeDraggable(K,Z,true)return K,a end do local w=b:MakeOutline(O,b.CornerRadius,10)w.AutomaticSize=Enum.AutomaticSize.Y w.Position=UDim2.fromOffset(6,6)w.Size=UDim2.fromOffset(0,0)w.Visible=false b:UpdateDPI(w,{Position=false;Size=false})local t=I("Frame",{BackgroundColor3="BackgroundColor";Position=UDim2.fromOffset(2,2),Size=UDim2.new(1,-4,1,-4),Parent=w})I("UICorner",{CornerRadius=UDim.new(0,b.CornerRadius-1);Parent=t})local K=I("TextLabel",{BackgroundTransparency=1;Size=UDim2.new(1,0,0,32);Position=UDim2.fromOffset(0,-8*b.DPIScale+7);Text="";TextSize=15,TextXAlignment=Enum.TextXAlignment.Left;Parent=t})I("UIPadding",{PaddingLeft=UDim.new(0,12);PaddingRight=UDim.new(0,12),Parent=K})b:MakeDraggable(w,K,true)local function l()local t,l=b:GetTextBounds(K.Text,b.Scheme.Font,15)w.Size=UDim2.fromOffset((((12+t)+12)+4)*b.DPIScale,(l*b.DPIScale)*2+4)b:UpdateDPI(w,{Size=UDim2.fromOffset(((12+t)+12)+4,l*2+4)})end function b.SetWatermarkVisibility(K,t)w.Visible=t if t then l()end end function b.SetWatermark(t,w)K.Text=w l()end end local Zh function b.AddContextMenu(a,w,t,K,l,Z)local P if l then P=I("ScrollingFrame",{AutomaticCanvasSize=l==2 and Enum.AutomaticSize.Y or Enum.AutomaticSize.None,AutomaticSize=l==1 and Enum.AutomaticSize.Y or Enum.AutomaticSize.None;BackgroundColor3="BackgroundColor",BorderColor3="OutlineColor";BorderSizePixel=1;BottomImage="rbxasset://textures/ui/Scroll/scroll-middle.png",CanvasSize=UDim2.fromOffset(0,0),ScrollBarImageColor3="OutlineColor",ScrollBarThickness=l==2 and 2 or 0,Size=typeof(t)=="function"and t()or t;TopImage="rbxasset://textures/ui/Scroll/scroll-middle.png";Visible=false;ZIndex=10;Parent=O;DPIExclude={Position=true}})else P=I("Frame",{BackgroundColor3="BackgroundColor",BorderColor3="OutlineColor";BorderSizePixel=1,Size=typeof(t)=="function"and t()or t;Visible=false;ZIndex=10,Parent=O;DPIExclude={Position=true}})end local C={Active=false,Holder=w;Menu=P,List=nil,Signal=nil,Size=t}if l then C.List=I("UIListLayout",{Parent=P})end function C.Open(t)if Zh==C then return elseif Zh then Zh:Close()end Zh=C C.Active=true if typeof(K)=="function"then P.Position=UDim2.fromOffset(math.floor(w.AbsolutePosition.X+((K()))[1]),math.floor(w.AbsolutePosition.Y+((K()))[2]))else P.Position=UDim2.fromOffset(math.floor(w.AbsolutePosition.X+(K)[1]),math.floor(w.AbsolutePosition.Y+(K)[2]))end if typeof(C.Size)=="function"then P.Size=C.Size()else P.Size=S(C.Size)end if typeof(Z)=="function"then b:SafeCallback(Z,true)end P.Visible=true C.Signal=(w:GetPropertyChangedSignal("AbsolutePosition")):Connect(function()if typeof(K)=="function"then P.Position=UDim2.fromOffset(math.floor(w.AbsolutePosition.X+((K()))[1]),math.floor(w.AbsolutePosition.Y+((K()))[2]))else P.Position=UDim2.fromOffset(math.floor(w.AbsolutePosition.X+(K)[1]),math.floor(w.AbsolutePosition.Y+(K)[2]))end end)end function C.Close(w)if Zh~=C then return end P.Visible=false if C.Signal then C.Signal:Disconnect()C.Signal=nil end C.Active=false Zh=nil if typeof(Z)=="function"then b:SafeCallback(Z,false)end end function C.Toggle(w)if C.Active then C:Close()else C:Open()end end function C.SetSize(t,w)C.Size=w P.Size=typeof(w)=="function"and w()or w end return C end b:GiveSignal(J.InputBegan:Connect(function(w)if T(w,true)then local t=w.Position if Zh and not(b:MouseIsOverFrame(Zh.Menu,t)or b:MouseIsOverFrame(Zh.Holder,t))then Zh:Close()end end end))local ah=I("TextLabel",{BackgroundColor3="BackgroundColor";BorderColor3="OutlineColor",BorderSizePixel=1;TextSize=14;TextWrapped=true;Visible=false;ZIndex=20;Parent=O});(ah:GetPropertyChangedSignal("AbsolutePosition")):Connect(function()local w,t=b:GetTextBounds(ah.Text,ah.FontFace,ah.TextSize,(workspace.CurrentCamera.ViewportSize.X-ah.AbsolutePosition.X)-4)ah.Size=UDim2.fromOffset(w+8*b.DPIScale,t+4*b.DPIScale)b:UpdateDPI(ah,{Size=UDim2.fromOffset(w,t),DPIOffset={Size={8,4}}})end)local Ph function b.AddTooltip(l,w,t,K)local Z={Disabled=false;Hovering=false,Signals={}}local function a()if Ph==K or Zh and b:MouseIsOverFrame(Zh.Menu,z)or Z.Disabled and typeof(t)~="string"or not Z.Disabled and typeof(w)~="string"then return end Ph=K ah.Text=Z.Disabled and t or w ah.Visible=true while b.Toggled and(b:MouseIsOverFrame(K,z)and not(Zh and b:MouseIsOverFrame(Zh.Menu,z)))do ah.Position=UDim2.fromOffset(z.X+(b.ShowCustomCursor and 8 or 14),z.Y+(b.ShowCustomCursor and 8 or 12))B.RenderStepped:Wait()end ah.Visible=false Ph=nil end table.insert(Z.Signals,K.MouseEnter:Connect(a))table.insert(Z.Signals,K.MouseMoved:Connect(a))table.insert(Z.Signals,K.MouseLeave:Connect(function()if Ph~=K then return end ah.Visible=false Ph=nil end))function Z.Destroy(w)for w=#Z.Signals,1,-1 do local t=table.remove(Z.Signals,w)t:Disconnect()end if Ph==K then ah.Visible=false Ph=nil end end return Z end function b.OnUnload(t,w)table.insert(b.UnloadSignals,w)end function b.Unload(w)for w=#b.Signals,1,-1 do local t=table.remove(b.Signals,w)t:Disconnect()end for w,t in pairs(b.UnloadSignals)do b:SafeCallback(t)end b.Unloaded=true O:Destroy();(o()).Library=nil end local Ch=b:GetIcon("check")local Bh=b:GetIcon("chevron-up")local eh=b:GetIcon("move-diagonal-2")local Jh=b:GetIcon("key")local yh=b:GetIcon("move")function b.SetIconModule(t,w)h=true H=w Ch=b:GetIcon("check")Bh=b:GetIcon("chevron-up")eh=b:GetIcon("move-diagonal-2")Jh=b:GetIcon("key")yh=b:GetIcon("move")end local uh={}do local w={}function w.AddKeyPicker(K,w,t)t=b:Validate(t,D.KeyPicker)local l=K local Z=l.TextLabel local P={Text=t.Text,Value=t.Default,Modifiers=t.DefaultModifiers;DisplayValue=t.Default;Toggled=false,Mode=t.Mode,SyncToggleState=t.SyncToggleState,Callback=t.Callback;ChangedCallback=t.ChangedCallback,Changed=t.Changed;Clicked=t.Clicked,Type="KeyPicker"}if P.Mode=="Press"then assert(l.Type=="Label","KeyPicker with the mode 'Press' can be only applied on Labels.")P.SyncToggleState=false t.Modes={"Press"}t.Mode="Press"end if P.SyncToggleState then t.Modes={"Toggle"}t.Mode="Toggle"end local C=false local B={MB1=Enum.UserInputType.MouseButton1,MB2=Enum.UserInputType.MouseButton2,MB3=Enum.UserInputType.MouseButton3}local e={[Enum.UserInputType.MouseButton1]="MB1",[Enum.UserInputType.MouseButton2]="MB2",[Enum.UserInputType.MouseButton3]="MB3"}local y={LAlt=Enum.KeyCode.LeftAlt;RAlt=Enum.KeyCode.RightAlt;LCtrl=Enum.KeyCode.LeftControl;RCtrl=Enum.KeyCode.RightControl;LShift=Enum.KeyCode.LeftShift;RShift=Enum.KeyCode.RightShift;Tab=Enum.KeyCode.Tab;CapsLock=Enum.KeyCode.CapsLock}local u={[Enum.KeyCode.LeftAlt]="LAlt";[Enum.KeyCode.RightAlt]="RAlt";[Enum.KeyCode.LeftControl]="LCtrl";[Enum.KeyCode.RightControl]="RCtrl";[Enum.KeyCode.LeftShift]="LShift",[Enum.KeyCode.RightShift]="RShift",[Enum.KeyCode.Tab]="Tab",[Enum.KeyCode.CapsLock]="CapsLock"}local m=function(w)return w.UserInputType==Enum.UserInputType.Keyboard and(u)[w.KeyCode]~=nil end local o=function()local w={}for t,K in y do local l=false repeat if table.find(w,t)then l=true break end if not J:IsKeyDown(K)then l=true break end table.insert(w,t)l=true until true if not l then break end end return w end local A=function(w)if not(typeof(w)=="table"and U(w)>0)then return true end local t=o()local K=true for w,l in w do local Z=false repeat if table.find(t,l)then Z=true break end K=false break until true if not Z then break end end return K end local v=function(w)if not w then return false end if(e)[w.UserInputType]~=nil then return J:IsMouseButtonPressed(w.UserInputType)and not J:GetFocusedTextBox()elseif w.UserInputType==Enum.UserInputType.Keyboard then return J:IsKeyDown(w.KeyCode)and not J:GetFocusedTextBox()else return false end end local x=function(w)local t={}for w,K in w do table.insert(t,(y)[K])end return t end local E=function(w)if typeof(w)~="table"then return{}end local t={}for w,K in w do local l=false repeat if not(y)[K]then l=true break end table.insert(t,K)l=true until true if not l then break end end return t end P.Modifiers=E(P.Modifiers)local z=I("TextButton",{BackgroundColor3="MainColor",BorderColor3="OutlineColor";BorderSizePixel=1,Size=UDim2.fromOffset(18,18),Text=P.Value,TextSize=14;Parent=Z})I("UICorner",{CornerRadius=UDim.new(0,5),Parent=z})I("UIStroke",{ApplyStrokeMode=Enum.ApplyStrokeMode.Border;Color=Color3.fromRGB(40,40,40),Parent=z})local M={Normal=P.Mode~="Toggle"}do local w=I("TextButton",{BackgroundTransparency=1;Size=UDim2.new(1,0,0,16),Text="";Visible=not t.NoUI;Parent=b.KeybindContainer})local K=I("TextLabel",{BackgroundTransparency=1,Size=UDim2.fromScale(1,1);Text="";TextSize=14;TextTransparency=.5;Parent=w,DPIExclude={Size=true}})local l=I("Frame",{BackgroundColor3="MainColor";Size=UDim2.fromOffset(14,14);SizeConstraint=Enum.SizeConstraint.RelativeYY;Parent=w})I("UICorner",{CornerRadius=UDim.new(0,5),Parent=l})I("UIStroke",{Color="OutlineColor";Parent=l})local Z=I("ImageLabel",{Image=Ch and Ch.Url or"";ImageColor3="FontColor";ImageRectOffset=Ch and Ch.ImageRectOffset or Vector2.zero,ImageRectSize=Ch and Ch.ImageRectSize or Vector2.zero,ImageTransparency=1,Position=UDim2.fromOffset(2,2);Size=UDim2.new(1,-4,1,-4);Parent=l})function M.Display(t,w)K.TextTransparency=w and 0 or.5 Z.ImageTransparency=w and 0 or 1 end function M.SetText(t,w)local l=b:GetTextBounds(w,K.FontFace,K.TextSize)K.Text=w K.Size=UDim2.new(0,l,1,0)end function M.SetVisibility(K,t)w.Visible=t end function M.SetNormal(Z,t)M.Normal=t w.Active=not t K.Position=t and UDim2.fromOffset(0,0)or UDim2.fromOffset(22*b.DPIScale,0)l.Visible=not t end w.MouseButton1Click:Connect(function()if M.Normal then return end P.Toggled=not P.Toggled P:DoClick()end)M.Holder=w M.Label=K M.Checkbox=l M.Loaded=true table.insert(b.KeybindToggles,M)end local d=b:AddContextMenu(z,UDim2.fromOffset(62,0),function()return{z.AbsoluteSize.X+1.5;.5}end,1)P.Menu=d local s={}for w,t in pairs(t.Modes)do local K={}local l=I("TextButton",{BackgroundColor3="MainColor",BackgroundTransparency=1;Size=UDim2.new(1,0,0,21),Text=t,TextSize=14,TextTransparency=.5;Parent=d.Menu})function K.Select(w)for w,t in pairs(s)do t:Deselect()end P.Mode=t l.BackgroundTransparency=0 l.TextTransparency=0 d:Close()end function K.Deselect(w)P.Mode=nil l.BackgroundTransparency=1 l.TextTransparency=.5 end l.MouseButton1Click:Connect(function()K:Select()end)if P.Mode==t then K:Select()end;(s)[t]=K end function P.Display(t,w)if b.Unloaded then return end local K,l=b:GetTextBounds(w or P.DisplayValue,z.FontFace,z.TextSize,Z.AbsoluteSize.X)z.Text=w or P.DisplayValue z.Size=UDim2.fromOffset(K+9*b.DPIScale,l+4*b.DPIScale)end function P.Update(w)P:Display()if t.NoUI then return end if P.Mode=="Toggle"and(l.Type=="Toggle"and l.Disabled)then M:SetVisibility(false)return end local K=P:GetState()local Z=b.ShowToggleFrameInKeybinds and P.Mode=="Toggle"if M.Loaded then if Z then M:SetNormal(false)else M:SetNormal(true)end M:SetText(("[%s] %s (%s)"):format(P.DisplayValue,P.Text,P.Mode))M:SetVisibility(true)M:Display(K)end b:UpdateKeybindFrame()end function P.GetState(w)if P.Mode=="Always"then return true elseif P.Mode=="Hold"then local w=P.Value if w=="None"then return false end if not A(P.Modifiers)then return false end if(B)[w]~=nil then return J:IsMouseButtonPressed((B)[w])and not J:GetFocusedTextBox()else return J:IsKeyDown((Enum.KeyCode)[w])and not J:GetFocusedTextBox()end else return P.Toggled end end function P.OnChanged(t,w)P.Changed=w end function P.OnClick(t,w)P.Clicked=w end function P.DoClick(w)if P.Mode=="Press"then if P.Toggled and t.WaitForCallback==true then return end P.Toggled=true end if l.Type=="Toggle"and P.SyncToggleState then l:SetValue(P.Toggled)end b:SafeCallback(P.Callback,P.Toggled)b:SafeCallback(P.Clicked,P.Toggled)if P.Mode=="Press"then P.Toggled=false end end function P.SetValue(K,w,t)local l,Z,C=(w)[1],(w)[2],(w)[3]local e,J=pcall(function()if l=="None"then l=nil return nil end if(B)[l]==nil then return(Enum.KeyCode)[l]end return(B)[l]end)if l==nil then P.Value="None"elseif e then P.Value=l else P.Value="Unknown"end P.Modifiers=E(((typeof(C)=="table"and{C}or{P.Modifiers}))[1])P.DisplayValue=((U(P.Modifiers)>0 and{table.concat(P.Modifiers," + ")..(" + "..P.Value)}or{P.Value}))[1]if(s)[Z]then(s)[Z]:Select()end local y=x(P.Modifiers)b:SafeCallback(P.ChangedCallback,J,y)b:SafeCallback(P.Changed,J,y)P:Update()if not t then task.spawn(function()if a and not a.Loading then a:Save(a:GetAutoloadConfig())end end)end end function P.SetText(t,w)M:SetText(w)P:Update()end z.MouseButton1Click:Connect(function()if C then return end C=true z.Text="..."z.Size=UDim2.fromOffset(29*b.DPIScale,18*b.DPIScale)local w local t={}local K=function()w=J.InputBegan:Wait()if J:GetFocusedTextBox()then return true end end repeat task.wait()z.Text="..."z.Size=UDim2.fromOffset(29*b.DPIScale,18*b.DPIScale)if K()then C=false P:Update()return end if w.KeyCode==Enum.KeyCode.Escape then break end if m(w)then local l=false repeat task.wait()if J:IsKeyDown(w.KeyCode)then task.wait(.075)if J:IsKeyDown(w.KeyCode)then if not table.find(t,(u)[w.KeyCode])then(t)[#t+1]=(u)[w.KeyCode]P:Display(table.concat(t," + ").." + ...")end if K()then l=true break end if w.KeyCode==Enum.KeyCode.Escape then break end if not m(w)then break end else if not table.find(t,(u)[w.KeyCode])then break end end end until false if l then C=false P:Update()return end end break until false local l="Unknown"if(e)[w.UserInputType]~=nil then l=(e)[w.UserInputType]elseif w.UserInputType==Enum.UserInputType.Keyboard then l=w.KeyCode==Enum.KeyCode.Escape and"None"or w.KeyCode.Name end t=(w.KeyCode==Enum.KeyCode.Escape or l=="Unknown")and{}or t P.Toggled=false P:SetValue({l;P.Mode;t})repeat task.wait()until not v(w)or J:GetFocusedTextBox()C=false end)z.MouseButton2Click:Connect(d.Toggle)b:GiveSignal(J.InputBegan:Connect(function(w)if P.Mode=="Always"or P.Value=="Unknown"or P.Value=="None"or C or J:GetFocusedTextBox()then return end local t=P.Value local K=A(P.Modifiers)local l=false if t and(K==true and((e)[w.UserInputType]==t or w.UserInputType==Enum.UserInputType.Keyboard and w.KeyCode.Name==t))then l=true end if P.Mode=="Toggle"then if l then P.Toggled=not P.Toggled P:DoClick()end elseif P.Mode=="Press"then if l then P:DoClick()end end P:Update()end))b:GiveSignal(J.InputEnded:Connect(function()if P.Value=="Unknown"or P.Value=="None"or C or J:GetFocusedTextBox()then return end P:Update()end))P:Update()if l.Addons then table.insert(l.Addons,P)end;(p)[w]=P return K end local t={}for w=0,1,.1 do table.insert(t,ColorSequenceKeypoint.new(w,Color3.fromHSV(w,1,1)))end function w.AddColorPicker(l,w,K)K=b:Validate(K,D.ColorPicker)local Z=l local P=Z.TextLabel local C={Value=K.Default,Transparency=K.Transparency or 0;Title=K.Title;Callback=K.Callback;Changed=K.Changed;Type="ColorPicker"}C.Hue,C.Sat,C.Vib=C.Value:ToHSV()local e=I("TextButton",{BackgroundColor3=C.Value,BorderColor3=b:GetDarkerColor(C.Value),BorderSizePixel=1;Size=UDim2.fromOffset(18,18);Text="";Parent=P})local J=I("ImageLabel",{Image=n.GetAsset("TransparencyTexture"),ImageTransparency=1-C.Transparency,ScaleType=Enum.ScaleType.Tile,Size=UDim2.fromScale(1,1),TileSize=UDim2.fromOffset(9,9),Parent=e})I("UICorner",{CornerRadius=UDim.new(0,5),Parent=e})I("UIStroke",{ApplyStrokeMode=Enum.ApplyStrokeMode.Border,Color=Color3.fromRGB(40,40,40),Parent=e})local y=b:AddContextMenu(e,UDim2.fromOffset(K.Transparency and 256 or 234,0),function()return{.5,e.AbsoluteSize.Y+1.5}end,1)y.List.Padding=UDim.new(0,8)C.ColorMenu=y I("UIPadding",{PaddingBottom=UDim.new(0,6),PaddingLeft=UDim.new(0,6);PaddingRight=UDim.new(0,6);PaddingTop=UDim.new(0,6),Parent=y.Menu})if typeof(C.Title)=="string"then I("TextLabel",{BackgroundTransparency=1;Size=UDim2.new(1,0,0,8);Text=C.Title,TextSize=14;TextXAlignment=Enum.TextXAlignment.Left;Parent=y.Menu})end local u=I("Frame",{BackgroundTransparency=1,Size=UDim2.new(1,0,0,200),Parent=y.Menu})I("UIListLayout",{FillDirection=Enum.FillDirection.Horizontal;Padding=UDim.new(0,6),Parent=u})local m=I("ImageButton",{BackgroundColor3=C.Value;Image=n.GetAsset("SaturationMap");Size=UDim2.fromOffset(200,200);Parent=u})local o=I("Frame",{AnchorPoint=Vector2.new(.5,.5),BackgroundColor3="White";Size=UDim2.fromOffset(6,6);Parent=m})I("UICorner",{CornerRadius=UDim.new(1,0),Parent=o})I("UIStroke",{Color="Dark",Parent=o})local v=I("TextButton",{Size=UDim2.fromOffset(16,200),Text="";Parent=u})I("UIGradient",{Color=ColorSequence.new(t),Rotation=90,Parent=v})local x=I("Frame",{AnchorPoint=Vector2.new(.5,.5),BackgroundColor3="White";BorderColor3="Dark",BorderSizePixel=1;Position=UDim2.fromScale(.5,C.Hue);Size=UDim2.new(1,2,0,1),Parent=v})local E,M,d if K.Transparency then E=I("ImageButton",{Image=n.GetAsset("TransparencyTexture");ScaleType=Enum.ScaleType.Tile,Size=UDim2.fromOffset(16,200),TileSize=UDim2.fromOffset(8,8);Parent=u})M=I("Frame",{BackgroundColor3=C.Value;Size=UDim2.fromScale(1,1);Parent=E})I("UIGradient",{Rotation=90,Transparency=NumberSequence.new({NumberSequenceKeypoint.new(0,0);NumberSequenceKeypoint.new(1,1)}),Parent=M})d=I("Frame",{AnchorPoint=Vector2.new(.5,.5);BackgroundColor3="White";BorderColor3="Dark",BorderSizePixel=1;Position=UDim2.fromScale(.5,C.Transparency),Size=UDim2.new(1,2,0,1),Parent=E})end local s=I("Frame",{BackgroundTransparency=1;Size=UDim2.new(1,0,0,20),Parent=y.Menu})I("UIListLayout",{FillDirection=Enum.FillDirection.Horizontal,HorizontalFlex=Enum.UIFlexAlignment.Fill;Padding=UDim.new(0,8),Parent=s})local g=I("TextBox",{BackgroundColor3="MainColor",BorderColor3="OutlineColor";BorderSizePixel=1;ClearTextOnFocus=false,Size=UDim2.fromScale(1,1),Text="#??????",TextSize=14,Parent=s})local F=I("TextBox",{BackgroundColor3="MainColor",BorderColor3="OutlineColor",BorderSizePixel=1,ClearTextOnFocus=false;Size=UDim2.fromScale(1,1),Text="?, ?, ?",TextSize=14;Parent=s})local S=b:AddContextMenu(e,UDim2.fromOffset(93,0),function()return{e.AbsoluteSize.X+1.5,.5}end,1)C.ContextMenu=S do local function w(w,t)local K=I("TextButton",{BackgroundTransparency=1;Size=UDim2.new(1,0,0,21);Text=w,TextSize=14,Parent=S.Menu})K.MouseButton1Click:Connect(function()b:SafeCallback(t)S:Close()end)end w("Copy color",function()b.CopiedColor={C.Value;C.Transparency}end)w("Paste color",function()C:SetValueRGB((b.CopiedColor)[1],(b.CopiedColor)[2])end)if A then w("Copy Hex",function()A(tostring(C.Value:ToHex()))end)w("Copy RGB",function()A(table.concat({math.floor(C.Value.R*255),math.floor(C.Value.G*255),math.floor(C.Value.B*255)},", "))end)end end function C.SetHSVFromRGB(t,w)C.Hue,C.Sat,C.Vib=w:ToHSV()end function C.Display(w)if b.Unloaded then return end C.Value=Color3.fromHSV(C.Hue,C.Sat,C.Vib)e.BackgroundColor3=C.Value e.BorderColor3=b:GetDarkerColor(C.Value)J.ImageTransparency=1-C.Transparency m.BackgroundColor3=Color3.fromHSV(C.Hue,1,1)if M then M.BackgroundColor3=C.Value end o.Position=UDim2.fromScale(C.Sat,1-C.Vib)x.Position=UDim2.fromScale(.5,C.Hue)if d then d.Position=UDim2.fromScale(.5,C.Transparency)end g.Text="#"..C.Value:ToHex()F.Text=table.concat({math.floor(C.Value.R*255),math.floor(C.Value.G*255),math.floor(C.Value.B*255)},", ")end function C.Update(w)C:Display()b:SafeCallback(C.Callback,C.Value)b:SafeCallback(C.Changed,C.Value)end function C.OnChanged(t,w)C.Changed=w end function C.SetValue(Z,w,t,l)local P=Color3.fromHSV((w)[1],(w)[2],(w)[3])C.Transparency=K.Transparency and t or 0 C:SetHSVFromRGB(P)C:Update()if not l then task.spawn(function()if a and not a.Loading then a:Save(a:GetAutoloadConfig())end end)end end function C.SetValueRGB(Z,w,t,l)C.Transparency=K.Transparency and t or 0 C:SetHSVFromRGB(w)C:Update()if not l then task.spawn(function()if a and not a.Loading then a:Save(a:GetAutoloadConfig())end end)end end e.MouseButton1Click:Connect(y.Toggle)e.MouseButton2Click:Connect(S.Toggle)m.InputBegan:Connect(function(w)while N(w)do local w=m.AbsolutePosition.X local t=w+m.AbsoluteSize.X local K=math.clamp(z.X,w,t)local l=m.AbsolutePosition.Y local Z=l+m.AbsoluteSize.Y local a=math.clamp(z.Y,l,Z)local P=C.Sat local e=C.Vib C.Sat=(K-w)/(t-w)C.Vib=1-(a-l)/(Z-l)if C.Sat~=P or C.Vib~=e then C:Update()end B.RenderStepped:Wait()end end)v.InputBegan:Connect(function(w)while N(w)do local w=v.AbsolutePosition.Y local t=w+v.AbsoluteSize.Y local K=math.clamp(z.Y,w,t)local l=C.Hue C.Hue=(K-w)/(t-w)if C.Hue~=l then C:Update()end B.RenderStepped:Wait()end end)if E then E.InputBegan:Connect(function(w)while N(w)do local w=E.AbsolutePosition.Y local t=E.AbsolutePosition.Y+E.AbsoluteSize.Y local K=math.clamp(z.Y,w,t)local l=C.Transparency C.Transparency=(K-w)/(t-w)if C.Transparency~=l then C:Update()end B.RenderStepped:Wait()end end)end g.FocusLost:Connect(function(w)if not w then return end local t,K=pcall(Color3.fromHex,g.Text)if t and typeof(K)=="Color3"then C.Hue,C.Sat,C.Vib=K:ToHSV()end C:Update()end)F.FocusLost:Connect(function(w)if not w then return end local t,K,l=F.Text:match("(%d+),%s*(%d+),%s*(%d+)")if t and(K and l)then C:SetHSVFromRGB(Color3.fromRGB(t,K,l))end C:Update()end)C:Display()if Z.Addons then table.insert(Z.Addons,C)end;(p)[w]=C return l end uh.__index=w uh.__namecall=function(t,K,...)return(w)[K](...)end end local mh={}do local w={}function w.AddDivider(w)local t=w local K=t.Container local l=I("Frame",{BackgroundColor3="MainColor",BorderColor3="OutlineColor",BorderSizePixel=1,Size=UDim2.new(1,0,0,2),Parent=K})t:Resize()table.insert(t.Elements,{Holder=l,Type="Divider"})end function w.AddLabel(w,...)local t={}local K={}local l=select(1,...)local Z=select(2,...)if typeof(l)=="table"or typeof(Z)=="table"then local w=typeof(l)=="table"and l or Z t.Text=w.Text or""t.DoesWrap=w.DoesWrap or false t.Size=w.Size or 14 t.Visible=w.Visible or true t.Idx=typeof(Z)=="table"and l or nil else t.Text=l or""t.DoesWrap=Z or false t.Size=14 t.Visible=true t.Idx=select(3,...)or nil end local a=w local P=a.Container local C={Text=t.Text,DoesWrap=t.DoesWrap;Addons=K,Visible=t.Visible;Type="Label"}local B=I("TextLabel",{BackgroundTransparency=1;Size=UDim2.new(1,0,0,18);Text=C.Text,TextSize=t.Size;TextWrapped=C.DoesWrap,TextXAlignment=a.IsKeyTab and Enum.TextXAlignment.Center or Enum.TextXAlignment.Left;Parent=P})function C.SetVisible(t,w)C.Visible=w B.Visible=C.Visible a:Resize()end function C.SetText(t,w)C.Text=w B.Text=w if C.DoesWrap then local w,t=b:GetTextBounds(C.Text,B.FontFace,B.TextSize,B.AbsoluteSize.X)B.Size=UDim2.new(1,0,0,t+4*b.DPIScale)end a:Resize()end if C.DoesWrap then local w,t=b:GetTextBounds(C.Text,B.FontFace,B.TextSize,B.AbsoluteSize.X)B.Size=UDim2.new(1,0,0,t+4*b.DPIScale)else I("UIListLayout",{FillDirection=Enum.FillDirection.Horizontal,HorizontalAlignment=Enum.HorizontalAlignment.Right,Padding=UDim.new(0,6),Parent=B})end if t.DoesWrap then local w=B.AbsoluteSize;(B:GetPropertyChangedSignal("AbsoluteSize")):Connect(function()if B.AbsoluteSize==w then return end local t,K=b:GetTextBounds(C.Text,B.FontFace,B.TextSize,B.AbsoluteSize.X)B.Size=UDim2.new(1,0,0,K+4*b.DPIScale)w=B.AbsoluteSize a:Resize()end)end a:Resize()C.TextLabel=B C.Container=P if not t.DoesWrap then setmetatable(C,uh)end C.Holder=B table.insert(a.Elements,C)if t.Idx then(M)[t.Idx]=C else table.insert(M,C)end return C end function w.AddButton(w,...)local function t(...)local w={}local t=select(1,...)local K=select(2,...)if typeof(t)=="table"or typeof(K)=="table"then local l=typeof(t)=="table"and t or K w.Text=l.Text or""w.Func=l.Func or function() end w.DoubleClick=l.DoubleClick w.Tooltip=l.Tooltip w.DisabledTooltip=l.DisabledTooltip w.Risky=l.Risky or false w.Disabled=l.Disabled or false w.Visible=l.Visible or true w.Idx=typeof(K)=="table"and t or nil else w.Text=t or""w.Func=K or function() end w.DoubleClick=false w.Tooltip=nil w.DisabledTooltip=nil w.Risky=false w.Disabled=false w.Visible=true w.Idx=select(3,...)or nil end return w end local K=t(...)local l=w local Z=l.Container local a={Text=K.Text,Func=K.Func,DoubleClick=K.DoubleClick;Tooltip=K.Tooltip;DisabledTooltip=K.DisabledTooltip,TooltipTable=nil;Risky=K.Risky;Disabled=K.Disabled,Visible=K.Visible;Tween=nil;Type="Button"}local P=I("Frame",{BackgroundTransparency=1,Size=UDim2.new(1,0,0,21),Parent=Z})I("UIListLayout",{FillDirection=Enum.FillDirection.Horizontal;HorizontalFlex=Enum.UIFlexAlignment.Fill,Padding=UDim.new(0,9),Parent=P})local function C(w)local t=I("TextButton",{Active=not w.Disabled,BackgroundColor3=w.Disabled and"BackgroundColor"or"MainColor",Size=UDim2.fromScale(1,1);Text=w.Text;TextSize=14;TextTransparency=.4;Visible=w.Visible;Parent=P})local K=I("UIStroke",{Color="OutlineColor",Transparency=w.Disabled and.5 or 0,Parent=t})I("UICorner",{CornerRadius=UDim.new(0,4),Parent=t})return t,K end local function e(w)w.Base.MouseEnter:Connect(function()if w.Disabled then return end w.Tween=m:Create(w.Base,b.TweenInfo,{TextTransparency=0,BackgroundColor3=Color3.fromRGB(35,22,45)})w.Tween:Play()if w.Stroke then(m:Create(w.Stroke,b.TweenInfo,{Color=Color3.fromRGB(255,128,0);Transparency=.3})):Play()end end)w.Base.MouseLeave:Connect(function()if w.Disabled then return end w.Tween=m:Create(w.Base,b.TweenInfo,{TextTransparency=.4,BackgroundColor3=b.Scheme.MainColor})w.Tween:Play()if w.Stroke then(m:Create(w.Stroke,b.TweenInfo,{Color=b.Scheme.OutlineColor,Transparency=0})):Play()end end)w.Base.MouseButton1Click:Connect(function()if w.Disabled or w.Locked then return end if w.DoubleClick then w.Locked=true w.Base.Text="Are you sure?"w.Base.TextColor3=b.Scheme.AccentColor;(b.Registry)[w.Base].TextColor3="AccentColor"local t=Y(w.Base.MouseButton1Click,.5)w.Base.Text=w.Text w.Base.TextColor3=w.Risky and b.Scheme.Red or b.Scheme.FontColor;(b.Registry)[w.Base].TextColor3=w.Risky and"Red"or"FontColor"if t then b:SafeCallback(w.Func)end B.RenderStepped:Wait()w.Locked=false return end b:SafeCallback(w.Func)end)end a.Base,a.Stroke=C(a)e(a)function a.AddButton(w,...)local K=t(...)local Z={Text=K.Text;Func=K.Func;DoubleClick=K.DoubleClick,Tooltip=K.Tooltip,DisabledTooltip=K.DisabledTooltip;TooltipTable=nil;Risky=K.Risky;Disabled=K.Disabled,Visible=K.Visible;Tween=nil,Type="SubButton"}a.SubButton=Z Z.Base,Z.Stroke=C(Z)e(Z)function Z.UpdateColors(w)if b.Unloaded then return end L(Z.Tween)Z.Base.BackgroundColor3=Z.Disabled and b.Scheme.BackgroundColor or b.Scheme.MainColor Z.Base.TextTransparency=Z.Disabled and.8 or.4 Z.Stroke.Transparency=Z.Disabled and.5 or 0;(b.Registry)[Z.Base].BackgroundColor3=Z.Disabled and"BackgroundColor"or"MainColor"end function Z.SetDisabled(t,w)Z.Disabled=w if Z.TooltipTable then Z.TooltipTable.Disabled=Z.Disabled end Z.Base.Active=not Z.Disabled Z:UpdateColors()end function Z.SetVisible(t,w)Z.Visible=w Z.Base.Visible=Z.Visible l:Resize()end function Z.SetText(t,w)Z.Text=w Z.Base.Text=w end if typeof(Z.Tooltip)=="string"or typeof(Z.DisabledTooltip)=="string"then Z.TooltipTable=b:AddTooltip(Z.Tooltip,Z.DisabledTooltip,Z.Base)Z.TooltipTable.Disabled=Z.Disabled end if Z.Risky then Z.Base.TextColor3=b.Scheme.Red;(b.Registry)[Z.Base].TextColor3="Red"end Z:UpdateColors()if K.Idx then(d)[K.Idx]=Z else table.insert(d,Z)end return Z end function a.UpdateColors(w)if b.Unloaded then return end L(a.Tween)a.Base.BackgroundColor3=a.Disabled and b.Scheme.BackgroundColor or b.Scheme.MainColor a.Base.TextTransparency=a.Disabled and.8 or.4 a.Stroke.Transparency=a.Disabled and.5 or 0;(b.Registry)[a.Base].BackgroundColor3=a.Disabled and"BackgroundColor"or"MainColor"end function a.SetDisabled(t,w)a.Disabled=w if a.TooltipTable then a.TooltipTable.Disabled=a.Disabled end a.Base.Active=not a.Disabled a:UpdateColors()end function a.SetVisible(t,w)a.Visible=w P.Visible=a.Visible l:Resize()end function a.SetText(t,w)a.Text=w a.Base.Text=w end if typeof(a.Tooltip)=="string"or typeof(a.DisabledTooltip)=="string"then a.TooltipTable=b:AddTooltip(a.Tooltip,a.DisabledTooltip,a.Base)a.TooltipTable.Disabled=a.Disabled end if a.Risky then a.Base.TextColor3=b.Scheme.Red;(b.Registry)[a.Base].TextColor3="Red"end a:UpdateColors()l:Resize()a.Holder=P table.insert(l.Elements,a)if K.Idx then(d)[K.Idx]=a else table.insert(d,a)end return a end function w.AddCheckbox(K,w,t)t=b:Validate(t,D.Toggle)local l=K local Z=l.Container local P={Text=t.Text,Value=t.Default;Tooltip=t.Tooltip;DisabledTooltip=t.DisabledTooltip,TooltipTable=nil;Callback=t.Callback;Changed=t.Changed,Risky=t.Risky;Disabled=t.Disabled;Visible=t.Visible,Addons={};Type="Toggle"}local C=I("TextButton",{Active=not P.Disabled;BackgroundTransparency=1;Size=UDim2.new(1,0,0,18),Text="",Visible=P.Visible,Parent=Z})local B=I("TextLabel",{BackgroundTransparency=1;Position=UDim2.fromOffset(26,0);Size=UDim2.new(1,-26,1,0);Text=P.Text;TextSize=14,TextTransparency=.4;TextXAlignment=Enum.TextXAlignment.Left;Parent=C})I("UIListLayout",{FillDirection=Enum.FillDirection.Horizontal;HorizontalAlignment=Enum.HorizontalAlignment.Right,Padding=UDim.new(0,6),Parent=B})local e=I("Frame",{BackgroundColor3="MainColor",Size=UDim2.fromScale(1,1),SizeConstraint=Enum.SizeConstraint.RelativeYY,Parent=C})I("UICorner",{CornerRadius=UDim.new(0,b.CornerRadius/2),Parent=e})local J=I("UIStroke",{Color="OutlineColor",Parent=e})local y=I("ImageLabel",{Image=Ch and Ch.Url or"",ImageColor3="FontColor";ImageRectOffset=Ch and Ch.ImageRectOffset or Vector2.zero;ImageRectSize=Ch and Ch.ImageRectSize or Vector2.zero;ImageTransparency=1,Position=UDim2.fromOffset(2,2),Size=UDim2.new(1,-4,1,-4),Parent=e})function P.UpdateColors(w)P:Display()end function P.Display(w)if b.Unloaded then return end J.Transparency=P.Disabled and.5 or 0 if P.Disabled then B.TextTransparency=.8 y.ImageTransparency=P.Value and.8 or 1 e.BackgroundColor3=b.Scheme.BackgroundColor;(b.Registry)[e].BackgroundColor3="BackgroundColor"return end;(m:Create(B,b.TweenInfo,{TextTransparency=P.Value and 0 or.4})):Play();(m:Create(y,b.TweenInfo,{ImageTransparency=P.Value and 0 or 1})):Play()e.BackgroundColor3=b.Scheme.MainColor;(b.Registry)[e].BackgroundColor3="MainColor"end function P.OnChanged(t,w)P.Changed=w end function P.SetValue(K,w,t)if P.Disabled then return end P.Value=w P:Display()for w,t in pairs(P.Addons)do if t.Type=="KeyPicker"and t.SyncToggleState then t.Toggled=P.Value t:Update()end end b:SafeCallback(P.Callback,P.Value)b:SafeCallback(P.Changed,P.Value)b:UpdateDependencyBoxes()if not t then task.spawn(function()if a and not a.Loading then a:Save(a:GetAutoloadConfig())end end)end end function P.SetDisabled(t,w)P.Disabled=w if P.TooltipTable then P.TooltipTable.Disabled=P.Disabled end for w,t in pairs(P.Addons)do if t.Type=="KeyPicker"and t.SyncToggleState then t:Update()end end C.Active=not P.Disabled P:Display()end function P.SetVisible(t,w)P.Visible=w C.Visible=P.Visible l:Resize()end function P.SetText(t,w)P.Text=w B.Text=w end C.MouseButton1Click:Connect(function()if P.Disabled then return end P:SetValue(not P.Value)end)if typeof(P.Tooltip)=="string"or typeof(P.DisabledTooltip)=="string"then P.TooltipTable=b:AddTooltip(P.Tooltip,P.DisabledTooltip,C)P.TooltipTable.Disabled=P.Disabled end if P.Risky then B.TextColor3=b.Scheme.Red;(b.Registry)[B].TextColor3="Red"end P:Display()l:Resize()P.TextLabel=B P.Container=Z setmetatable(P,uh)P.Holder=C table.insert(l.Elements,P);(s)[w]=P return P end function w.AddToggle(l,t,K)if b.ForceCheckbox then return w.AddCheckbox(l,t,K)end K=b:Validate(K,D.Toggle)local Z=l local P=Z.Container local C={Text=K.Text;Value=K.Default;Tooltip=K.Tooltip,DisabledTooltip=K.DisabledTooltip;TooltipTable=nil,Callback=K.Callback,Changed=K.Changed,Risky=K.Risky,Disabled=K.Disabled;Visible=K.Visible;Addons={},Type="Toggle"}local B=I("TextButton",{Active=not C.Disabled;BackgroundTransparency=1;Size=UDim2.new(1,0,0,18);Text="";Visible=C.Visible;Parent=P})local e=I("TextLabel",{BackgroundTransparency=1;Size=UDim2.new(1,-40,1,0);Text=C.Text;TextSize=14,TextTransparency=.4,TextXAlignment=Enum.TextXAlignment.Left,Parent=B})I("UIListLayout",{FillDirection=Enum.FillDirection.Horizontal;HorizontalAlignment=Enum.HorizontalAlignment.Right,Padding=UDim.new(0,6),Parent=e})local J=I("Frame",{AnchorPoint=Vector2.new(1,0);BackgroundColor3="MainColor",Position=UDim2.fromScale(1,0);Size=UDim2.fromOffset(32,18),Parent=B})I("UICorner",{CornerRadius=UDim.new(1,0),Parent=J})I("UIPadding",{PaddingBottom=UDim.new(0,2);PaddingLeft=UDim.new(0,2),PaddingRight=UDim.new(0,2);PaddingTop=UDim.new(0,2);Parent=J})local y=I("UIStroke",{Color="OutlineColor";Parent=J})local u=I("Frame",{BackgroundColor3="FontColor",Size=UDim2.fromScale(1,1),SizeConstraint=Enum.SizeConstraint.RelativeYY;Parent=J})I("UICorner",{CornerRadius=UDim.new(1,0);Parent=u})function C.UpdateColors(w)C:Display()end function C.Display(w)if b.Unloaded then return end local t=C.Value and 1 or 0 J.BackgroundTransparency=C.Disabled and.75 or 0 y.Transparency=C.Disabled and.75 or 0 J.BackgroundColor3=C.Value and b.Scheme.AccentColor or b.Scheme.MainColor y.Color=C.Value and b.Scheme.AccentColor or b.Scheme.OutlineColor;(b.Registry)[J].BackgroundColor3=C.Value and"AccentColor"or"MainColor";(b.Registry)[y].Color=C.Value and"AccentColor"or"OutlineColor"if C.Disabled then e.TextTransparency=.8 u.AnchorPoint=Vector2.new(t,0)u.Position=UDim2.fromScale(t,0)u.BackgroundColor3=b:GetDarkerColor(b.Scheme.FontColor);(b.Registry)[u].BackgroundColor3=function()return b:GetDarkerColor(b.Scheme.FontColor)end return end;(m:Create(e,b.TweenInfo,{TextTransparency=C.Value and 0 or.4})):Play();(m:Create(u,b.TweenInfo,{AnchorPoint=Vector2.new(t,0),Position=UDim2.fromScale(t,0)})):Play()u.BackgroundColor3=b.Scheme.FontColor;(b.Registry)[u].BackgroundColor3="FontColor"end function C.OnChanged(t,w)C.Changed=w end function C.SetValue(t,w)if C.Disabled then return end C.Value=w C:Display()for w,t in pairs(C.Addons)do if t.Type=="KeyPicker"and t.SyncToggleState then t.Toggled=C.Value t:Update()end end b:SafeCallback(C.Callback,C.Value)b:SafeCallback(C.Changed,C.Value)b:UpdateDependencyBoxes()task.spawn(function()if a and not a.Loading then a:Save(a:GetAutoloadConfig())end end)end function C.SetDisabled(t,w)C.Disabled=w if C.TooltipTable then C.TooltipTable.Disabled=C.Disabled end for w,t in pairs(C.Addons)do if t.Type=="KeyPicker"and t.SyncToggleState then t:Update()end end B.Active=not C.Disabled C:Display()end function C.SetVisible(t,w)C.Visible=w B.Visible=C.Visible Z:Resize()end function C.SetText(t,w)C.Text=w e.Text=w end B.MouseButton1Click:Connect(function()if C.Disabled then return end C:SetValue(not C.Value)end)if typeof(C.Tooltip)=="string"or typeof(C.DisabledTooltip)=="string"then C.TooltipTable=b:AddTooltip(C.Tooltip,C.DisabledTooltip,B)C.TooltipTable.Disabled=C.Disabled end if C.Risky then e.TextColor3=b.Scheme.Red;(b.Registry)[e].TextColor3="Red"end C:Display()Z:Resize()C.TextLabel=e C.Container=P setmetatable(C,uh)C.Holder=B table.insert(Z.Elements,C);(s)[t]=C return C end function w.AddInput(K,w,t)t=b:Validate(t,D.Input)local l=K local Z=l.Container local P={Text=t.Text,Value=t.Default,Finished=t.Finished;Numeric=t.Numeric;ClearTextOnFocus=t.ClearTextOnFocus,Placeholder=t.Placeholder,AllowEmpty=t.AllowEmpty;EmptyReset=t.EmptyReset;Tooltip=t.Tooltip,DisabledTooltip=t.DisabledTooltip;TooltipTable=nil,Callback=t.Callback;Changed=t.Changed;Disabled=t.Disabled,Visible=t.Visible,Type="Input"}local C=I("Frame",{BackgroundTransparency=1;Size=UDim2.new(1,0,0,39),Visible=P.Visible,Parent=Z})local B=I("TextLabel",{BackgroundTransparency=1,Size=UDim2.new(1,0,0,14),Text=P.Text,TextSize=14,TextXAlignment=Enum.TextXAlignment.Left;Parent=C})local e=I("TextBox",{AnchorPoint=Vector2.new(0,1),BackgroundColor3="MainColor",BorderColor3="OutlineColor";BorderSizePixel=1;ClearTextOnFocus=not P.Disabled and P.ClearTextOnFocus,PlaceholderText=P.Placeholder;Position=UDim2.fromScale(0,1),Size=UDim2.new(1,0,0,21);Text=P.Value;TextEditable=not P.Disabled;TextScaled=true,TextXAlignment=Enum.TextXAlignment.Left,Parent=C})I("UIPadding",{PaddingBottom=UDim.new(0,3);PaddingLeft=UDim.new(0,8);PaddingRight=UDim.new(0,8),PaddingTop=UDim.new(0,4),Parent=e})I("UIStroke",{ApplyStrokeMode=Enum.ApplyStrokeMode.Border;Color=Color3.fromRGB(40,40,40),Parent=e})I("UICorner",{CornerRadius=UDim.new(0,5);Parent=e})function P.UpdateColors(w)if b.Unloaded then return end B.TextTransparency=P.Disabled and.8 or 0 e.TextTransparency=P.Disabled and.8 or 0 end function P.OnChanged(t,w)P.Changed=w end function P.SetValue(l,w,K)if not P.AllowEmpty and G(w)==""then w=P.EmptyReset end if t.MaxLength and#w>t.MaxLength then w=w:sub(1,t.MaxLength)end if P.Numeric then if#w>0 and not tonumber(w)then w=P.Value end end P.Value=w e.Text=w if not P.Disabled then b:SafeCallback(P.Callback,P.Value)b:SafeCallback(P.Changed,P.Value)end if not K then task.spawn(function()if a and not a.Loading then a:Save(a:GetAutoloadConfig())end end)end end function P.SetDisabled(t,w)P.Disabled=w if P.TooltipTable then P.TooltipTable.Disabled=P.Disabled end e.ClearTextOnFocus=not P.Disabled and P.ClearTextOnFocus e.TextEditable=not P.Disabled P:UpdateColors()end function P.SetVisible(t,w)P.Visible=w C.Visible=P.Visible l:Resize()end function P.SetText(t,w)P.Text=w B.Text=w end if P.Finished then e.FocusLost:Connect(function(w)if not w then return end P:SetValue(e.Text)end)else(e:GetPropertyChangedSignal("Text")):Connect(function()P:SetValue(e.Text)end)end if typeof(P.Tooltip)=="string"or typeof(P.DisabledTooltip)=="string"then P.TooltipTable=b:AddTooltip(P.Tooltip,P.DisabledTooltip,e)P.TooltipTable.Disabled=P.Disabled end l:Resize()P.Holder=C table.insert(l.Elements,P);(p)[w]=P return P end function w.AddSlider(K,w,t)t=b:Validate(t,D.Slider)local l=K local Z=l.Container local P={Text=t.Text;Value=t.Default,Min=t.Min;Max=t.Max;Prefix=t.Prefix,Suffix=t.Suffix,Compact=t.Compact,Rounding=t.Rounding,Tooltip=t.Tooltip;DisabledTooltip=t.DisabledTooltip,TooltipTable=nil;Callback=t.Callback;Changed=t.Changed,Disabled=t.Disabled;Visible=t.Visible;Type="Slider"}local C=I("Frame",{BackgroundTransparency=1;Size=UDim2.new(1,0,0,t.Compact and 13 or 31);Visible=P.Visible,Parent=Z})local e if not t.Compact then e=I("TextLabel",{BackgroundTransparency=1,Size=UDim2.new(1,0,0,14),Text=P.Text,TextSize=14;TextXAlignment=Enum.TextXAlignment.Left;Parent=C})end local J=I("TextButton",{Active=not P.Disabled;AnchorPoint=Vector2.new(0,1);BackgroundColor3="MainColor";BorderColor3="OutlineColor",BorderSizePixel=1,Position=UDim2.fromScale(0,1),Size=UDim2.new(1,0,0,13),Text="";Parent=C})I("UICorner",{CornerRadius=UDim.new(0,4);Parent=J})I("UIStroke",{ApplyStrokeMode=Enum.ApplyStrokeMode.Border;Color=Color3.fromRGB(40,40,40);Parent=J})local y=I("TextLabel",{BackgroundTransparency=1;Size=UDim2.fromScale(1,1);Text="";TextSize=14;ZIndex=2,Parent=J})I("UIStroke",{ApplyStrokeMode=Enum.ApplyStrokeMode.Contextual,Color="Dark",LineJoinMode=Enum.LineJoinMode.Miter,Parent=y})local u=I("Frame",{BackgroundColor3="AccentColor";Size=UDim2.fromScale(.5,1);Parent=J,DPIExclude={Size=true}})I("UICorner",{CornerRadius=UDim.new(0,5);Parent=u})function P.UpdateColors(w)if b.Unloaded then return end if e then e.TextTransparency=P.Disabled and.8 or 0 end y.TextTransparency=P.Disabled and.8 or 0 u.BackgroundColor3=P.Disabled and b.Scheme.OutlineColor or b.Scheme.AccentColor;(b.Registry)[u].BackgroundColor3=P.Disabled and"OutlineColor"or"AccentColor"end function P.Display(w)if b.Unloaded then return end local K=nil if t.FormatDisplayValue then K=t.FormatDisplayValue(P,P.Value)end if K then y.Text=tostring(K)else if t.Compact then y.Text=string.format("%s: %s%s%s",P.Text,P.Prefix,P.Value,P.Suffix)elseif t.HideMax then y.Text=string.format("%s%s%s",P.Prefix,P.Value,P.Suffix)else y.Text=string.format("%s%s%s/%s%s%s",P.Prefix,P.Value,P.Suffix,P.Prefix,P.Max,P.Suffix)end end local l=(P.Value-P.Min)/(P.Max-P.Min)u.Size=UDim2.fromScale(l,1)end function P.OnChanged(t,w)P.Changed=w end function P.SetMax(t,w)assert(w>P.Min,"Max value cannot be less than the current min value.")P:SetValue(math.clamp(P.Value,P.Min,w))P.Max=w P:Display()end function P.SetMin(t,w)assert(w<P.Max,"Min value cannot be greater than the current max value.")P:SetValue(math.clamp(P.Value,w,P.Max))P.Min=w P:Display()end function P.SetValue(K,w,t)if P.Disabled then return end local l=tonumber(w)if not l or l==P.Value then return end l=math.clamp(l,P.Min,P.Max)P.Value=l P:Display()b:SafeCallback(P.Callback,P.Value)b:SafeCallback(P.Changed,P.Value)if not t then task.spawn(function()if a and not a.Loading then a:Save(a:GetAutoloadConfig())end end)end end function P.SetDisabled(t,w)P.Disabled=w if P.TooltipTable then P.TooltipTable.Disabled=P.Disabled end J.Active=not P.Disabled P:UpdateColors()end function P.SetVisible(t,w)P.Visible=w C.Visible=P.Visible l:Resize()end function P.SetText(t,w)P.Text=w if e then e.Text=w return end P:Display()end function P.SetPrefix(t,w)P.Prefix=w P:Display()end function P.SetSuffix(t,w)P.Suffix=w P:Display()end J.InputBegan:Connect(function(w)if not T(w)or P.Disabled then return end for w,t in pairs(b.ActiveTab.Sides)do t.ScrollingEnabled=false end while N(w)do local w=z.X local t=math.clamp((w-J.AbsolutePosition.X)/J.AbsoluteSize.X,0,1)local K=P.Value P.Value=X(P.Min+(P.Max-P.Min)*t,P.Rounding)P:Display()if P.Value~=K then b:SafeCallback(P.Callback,P.Value)b:SafeCallback(P.Changed,P.Value)task.spawn(function()if a and not a.Loading then a:Save(a:GetAutoloadConfig())end end)end B.RenderStepped:Wait()end for w,t in pairs(b.ActiveTab.Sides)do t.ScrollingEnabled=true end end)if typeof(P.Tooltip)=="string"or typeof(P.DisabledTooltip)=="string"then P.TooltipTable=b:AddTooltip(P.Tooltip,P.DisabledTooltip,J)P.TooltipTable.Disabled=P.Disabled end P:UpdateColors()P:Display()l:Resize()P.Holder=C table.insert(l.Elements,P);(p)[w]=P return P end function w.AddDropdown(K,w,t)t=b:Validate(t,D.Dropdown)local l=K local Z=l.Container if t.SpecialType=="Player"then t.Values=c(t.ExcludeLocalPlayer)t.AllowNull=true elseif t.SpecialType=="Team"then t.Values=j()t.AllowNull=true end local P={Text=typeof(t.Text)=="string"and t.Text or nil;Value=t.Multi and{}or nil,Values=t.Values;DisabledValues=t.DisabledValues;Multi=t.Multi,SpecialType=t.SpecialType;ExcludeLocalPlayer=t.ExcludeLocalPlayer;Tooltip=t.Tooltip;DisabledTooltip=t.DisabledTooltip,TooltipTable=nil,Callback=t.Callback,Changed=t.Changed;Disabled=t.Disabled;Visible=t.Visible;Type="Dropdown"}local C=I("Frame",{BackgroundTransparency=1,Size=UDim2.new(1,0,0,P.Text and 39 or 21);Visible=P.Visible,Parent=Z})local B=I("TextLabel",{BackgroundTransparency=1;Size=UDim2.new(1,0,0,14),Text=P.Text;TextSize=14,TextXAlignment=Enum.TextXAlignment.Left;Visible=not(not t.Text),Parent=C})local e=I("TextButton",{Active=not P.Disabled;AnchorPoint=Vector2.new(0,1),BackgroundColor3="MainColor",BorderColor3="OutlineColor",BorderSizePixel=1;Position=UDim2.fromScale(0,1),Size=UDim2.new(1,0,0,21),Text="---",TextSize=14,TextXAlignment=Enum.TextXAlignment.Left;Parent=C})I("UIPadding",{PaddingLeft=UDim.new(0,8),PaddingRight=UDim.new(0,4),Parent=e})I("UICorner",{CornerRadius=UDim.new(0,5),Parent=e})I("UIStroke",{ApplyStrokeMode=Enum.ApplyStrokeMode.Border,Color=Color3.fromRGB(40,40,40),Parent=e})local J=I("ImageLabel",{AnchorPoint=Vector2.new(1,.5);Image=Bh and Bh.Url or"",ImageColor3="FontColor",ImageRectOffset=Bh and Bh.ImageRectOffset or Vector2.zero;ImageRectSize=Bh and Bh.ImageRectSize or Vector2.zero,ImageTransparency=.5,Position=UDim2.fromScale(1,.5);Size=UDim2.fromOffset(16,16),Parent=e})local y if t.Searchable then y=I("TextBox",{BackgroundTransparency=1;PlaceholderText="Search...";Position=UDim2.fromOffset(-8,0);Size=UDim2.new(1,-12,1,0);TextSize=14,TextXAlignment=Enum.TextXAlignment.Left,Visible=false;Parent=e})I("UIPadding",{PaddingLeft=UDim.new(0,8);Parent=y})end local u=b:AddContextMenu(e,function()return UDim2.fromOffset(e.AbsoluteSize.X,0)end,function()return{.5;e.AbsoluteSize.Y+1.5}end,2,function(w)e.TextTransparency=(w and y)and 1 or 0 J.ImageTransparency=w and 0 or.5 J.Rotation=w and 180 or 0 if y then y.Text=""y.Visible=w end end)P.Menu=u b:UpdateDPI(u.Menu,{Position=false;Size=false})function P.RecalculateListSize(K,w)local l=math.clamp((w or U(P.Values))*(21*b.DPIScale),0,t.MaxVisibleDropdownItems*(21*b.DPIScale))u:SetSize(function()return UDim2.fromOffset(e.AbsoluteSize.X,l)end)end function P.UpdateColors(w)if b.Unloaded then return end B.TextTransparency=P.Disabled and.8 or 0 e.TextTransparency=P.Disabled and.8 or 0 J.ImageTransparency=P.Disabled and.8 or u.Active and 0 or.5 end function P.Display(w)if b.Unloaded then return end local K=""if t.Multi then for w,l in pairs(P.Values)do if(P.Value)[l]then K=K..((t.FormatDisplayValue and tostring(t.FormatDisplayValue(l))or tostring(l))..", ")end end K=K:sub(1,#K-2)else K=P.Value and tostring(P.Value)or""if K~=""and t.FormatDisplayValue then K=tostring(t.FormatDisplayValue(K))end end if#K>25 then K=K:sub(1,22).."..."end e.Text=K==""and"---"or K end function P.OnChanged(t,w)P.Changed=w end function P.GetActiveValues(w)if t.Multi then local w={}for t,K in pairs(P.Value)do table.insert(w,t)end return w end return P.Value and 1 or 0 end local m={}function P.BuildDropdownList(w)local K=P.Values local l=P.DisabledValues for w,t in pairs(m)do w:Destroy()end table.clear(m)local Z=0 for w,K in pairs(K)do local C=false repeat if y and not((tostring(K)):lower()):match(y.Text:lower())then C=true break end Z=Z+1 local w=table.find(l,K)local B={}local e=I("TextButton",{BackgroundColor3="MainColor";BackgroundTransparency=1;LayoutOrder=w and 1 or 0,Size=UDim2.new(1,0,0,21);Text=tostring(K);TextSize=14,TextTransparency=.5;TextXAlignment=Enum.TextXAlignment.Left;Parent=u.Menu})I("UIPadding",{PaddingLeft=UDim.new(0,7);PaddingRight=UDim.new(0,7);Parent=e})local J if t.Multi then J=(P.Value)[K]else J=P.Value==K end function B.UpdateButton(l)if t.Multi then J=(P.Value)[K]else J=P.Value==K end e.BackgroundTransparency=J and 0 or 1 e.TextTransparency=w and.8 or J and 0 or.5 end if not w then e.MouseButton1Click:Connect(function()local w=not J if not(P:GetActiveValues()==1 and(not w and not t.AllowNull))then J=w if t.Multi then(P.Value)[K]=J and true or nil else P.Value=J and K or nil end for w,t in pairs(m)do t:UpdateButton()end end B:UpdateButton()P:Display()b:SafeCallback(P.Callback,P.Value)b:SafeCallback(P.Changed,P.Value)b:UpdateDependencyBoxes()task.spawn(function()if a and not a.Loading then a:Save(a:GetAutoloadConfig())end end)end)end B:UpdateButton()P:Display();(m)[e]=B C=true until true if not C then break end end P:RecalculateListSize(Z)end function P.SetValue(l,w,K)if t.Multi then local t={}for w,K in pairs(w or{})do if K and table.find(P.Values,w)then(t)[w]=true end end P.Value=t else if table.find(P.Values,w)then P.Value=w elseif not w then P.Value=nil end end P:Display()for w,t in pairs(m)do t:UpdateButton()end if not P.Disabled then b:SafeCallback(P.Callback,P.Value)b:SafeCallback(P.Changed,P.Value)b:UpdateDependencyBoxes()end if not K then task.spawn(function()if a and not a.Loading then a:Save(a:GetAutoloadConfig())end end)end end function P.SetValues(t,w)P.Values=w P:BuildDropdownList()end function P.AddValues(t,w)if typeof(w)=="table"then for w,t in pairs(w)do table.insert(P.Values,t)end elseif typeof(w)=="string"then table.insert(P.Values,w)else return end P:BuildDropdownList()end function P.SetDisabledValues(t,w)P.DisabledValues=w P:BuildDropdownList()end function P.AddDisabledValues(t,w)if typeof(w)=="table"then for w,t in pairs(w)do table.insert(P.DisabledValues,t)end elseif typeof(w)=="string"then table.insert(P.DisabledValues,w)else return end P:BuildDropdownList()end function P.SetDisabled(t,w)P.Disabled=w if P.TooltipTable then P.TooltipTable.Disabled=P.Disabled end u:Close()e.Active=not P.Disabled P:UpdateColors()end function P.SetVisible(t,w)P.Visible=w C.Visible=P.Visible l:Resize()end function P.SetText(t,w)P.Text=w C.Size=UDim2.new(1,0,0,(w and 39 or 21)*b.DPIScale)B.Text=w and w or""B.Visible=not(not w)end e.MouseButton1Click:Connect(function()if P.Disabled then return end u:Toggle()end)if y then(y:GetPropertyChangedSignal("Text")):Connect(P.BuildDropdownList)end local o={}if typeof(t.Default)=="string"then local w=table.find(P.Values,t.Default)if w then table.insert(o,w)end elseif typeof(t.Default)=="table"then for w,t in next,t.Default do local K=table.find(P.Values,t)if K then table.insert(o,K)end end elseif(P.Values)[t.Default]~=nil then table.insert(o,t.Default)end if next(o)then for w=1,#o,1 do local K=(o)[w]if t.Multi then(P.Value)[(P.Values)[K]]=true else P.Value=(P.Values)[K]end if not t.Multi then break end end end if typeof(P.Tooltip)=="string"or typeof(P.DisabledTooltip)=="string"then P.TooltipTable=b:AddTooltip(P.Tooltip,P.DisabledTooltip,e)P.TooltipTable.Disabled=P.Disabled end P:UpdateColors()P:Display()P:BuildDropdownList()l:Resize()P.Holder=C table.insert(l.Elements,P);(p)[w]=P return P end function w.AddViewport(K,w,t)t=b:Validate(t,D.Viewport)local l=K local Z=l.Container local a,P=false,false local C,B=nil,0 local e=t.Object if t.Clone and typeof(t.Object)=="Instance"then if t.Object.Archivable then e=e:Clone()else t.Object.Archivable=true e=e:Clone()t.Object.Archivable=false end end local y={Object=e;Camera=((not t.Camera and{Instance.new("Camera")}or{t.Camera}))[1];Interactive=t.Interactive,AutoFocus=t.AutoFocus,Visible=t.Visible;Type="Viewport"}assert(typeof(y.Object)=="Instance"and(y.Object:IsA("BasePart")or y.Object:IsA("Model")),"Instance must be a BasePart or Model.")assert(typeof(y.Camera)=="Instance"and y.Camera:IsA("Camera"),"Camera must be a valid Camera instance.")local function u(w)if w:IsA("BasePart")then return w.Size end return select(2,w:GetBoundingBox())end local function m()local w=u(y.Object)local t=math.max(w.X,w.Y,w.Z)local K=t*2 local l=(y.Object:GetPivot()).Position y.Camera.CFrame=CFrame.new(l+Vector3.new(0,t/2,K),l)end local o=I("Frame",{BackgroundTransparency=1,Size=UDim2.new(1,0,0,t.Height),Visible=y.Visible,Parent=Z})local A=I("Frame",{AnchorPoint=Vector2.new(0,1);BackgroundColor3="MainColor",BorderColor3="OutlineColor",BorderSizePixel=1;Position=UDim2.fromScale(0,1);Size=UDim2.fromScale(1,1);Parent=o})I("UIPadding",{PaddingBottom=UDim.new(0,3);PaddingLeft=UDim.new(0,8);PaddingRight=UDim.new(0,8),PaddingTop=UDim.new(0,4);Parent=A})local v=I("ViewportFrame",{BackgroundTransparency=1;Size=UDim2.fromScale(1,1),Parent=A,CurrentCamera=y.Camera;Active=y.Interactive})v.MouseEnter:Connect(function()if not y.Interactive then return end for w,t in pairs(l.Tab.Sides)do t.ScrollingEnabled=false end end)v.MouseLeave:Connect(function()if not y.Interactive then return end for w,t in pairs(l.Tab.Sides)do t.ScrollingEnabled=true end end)v.InputBegan:Connect(function(w)if not y.Interactive then return end if w.UserInputType==Enum.UserInputType.MouseButton2 then a=true C=w.Position elseif w.UserInputType==Enum.UserInputType.Touch and not P then a=true C=w.Position end end)b:GiveSignal(J.InputEnded:Connect(function(w)if not y.Interactive then return end if w.UserInputType==Enum.UserInputType.MouseButton2 then a=false elseif w.UserInputType==Enum.UserInputType.Touch then a=false end end))b:GiveSignal(J.InputChanged:Connect(function(w)if not y.Interactive or not a or P then return end if w.UserInputType==Enum.UserInputType.MouseMovement or w.UserInputType==Enum.UserInputType.Touch then local t=w.Position-C C=w.Position local K=(y.Object:GetPivot()).Position local l=y.Camera local Z=CFrame.fromAxisAngle(Vector3.new(0,1,0),-t.X*.01)l.CFrame=((CFrame.new(K)*Z)*CFrame.new(-K))*l.CFrame local a=CFrame.fromAxisAngle(l.CFrame.RightVector,-t.Y*.01)local P=((CFrame.new(K)*a)*CFrame.new(-K))*l.CFrame if P.UpVector.Y>.1 then l.CFrame=P end end end))v.InputChanged:Connect(function(w)if not y.Interactive then return end if w.UserInputType==Enum.UserInputType.MouseWheel then local t=w.Position.Z*2 do local w=y.Camera w.CFrame=w.CFrame+y.Camera.CFrame.LookVector*t end end end)b:GiveSignal(J.TouchPinch:Connect(function(w,t,K,l)if not y.Interactive or not b:MouseIsOverFrame(v,(w)[1])then return end if l==Enum.UserInputState.Begin then P=true a=false B=((w)[1]-(w)[2]).Magnitude elseif l==Enum.UserInputState.Change then local t=((w)[1]-(w)[2]).Magnitude local K=(t-B)*.1 B=t do local w=y.Camera w.CFrame=w.CFrame+y.Camera.CFrame.LookVector*K end elseif l==Enum.UserInputState.End or l==Enum.UserInputState.Cancel then P=false end end))y.Object.Parent=v if y.AutoFocus then m()end function y.SetObject(K,w,t)assert(w,"Object cannot be nil.")if t then w=w:Clone()end if y.Object then y.Object:Destroy()end y.Object=w y.Object.Parent=v l:Resize()end function y.SetHeight(t,w)assert(w>0,"Height must be greater than 0.")o.Size=UDim2.new(1,0,0,w)l:Resize()end function y.Focus(w)if not y.Object then return end m()end function y.SetCamera(t,w)assert(w and(typeof(w)=="Instance"and w:IsA("Camera")),"Camera must be a valid Camera instance.")y.Camera=w v.CurrentCamera=w end function y.SetInteractive(t,w)y.Interactive=w v.Active=w end function y.SetVisible(t,w)y.Visible=w o.Visible=y.Visible l:Resize()end l:Resize()y.Holder=o table.insert(l.Elements,y);(p)[w]=y return y end function w.AddImage(K,w,t)t=b:Validate(t,D.Image)local l=K local Z=l.Container local a={Image=t.Image;Color=t.Color;RectOffset=t.RectOffset;RectSize=t.RectSize,Height=t.Height;ScaleType=t.ScaleType;Transparency=t.Transparency;Visible=t.Visible,Type="Image"}local P=I("Frame",{BackgroundTransparency=1;Size=UDim2.new(1,0,0,t.Height),Visible=a.Visible;Parent=Z})local C=I("Frame",{AnchorPoint=Vector2.new(0,1);BackgroundColor3="MainColor";BorderColor3="OutlineColor";BorderSizePixel=1;Position=UDim2.fromScale(0,1),Size=UDim2.fromScale(1,1);Parent=P})I("UIPadding",{PaddingBottom=UDim.new(0,3),PaddingLeft=UDim.new(0,8);PaddingRight=UDim.new(0,8);PaddingTop=UDim.new(0,4),Parent=C})local B={BackgroundTransparency=1,Size=UDim2.fromScale(1,1),Image=a.Image;ImageTransparency=a.Transparency,ImageColor3=a.Color;ImageRectOffset=a.RectOffset;ImageRectSize=a.RectSize,ScaleType=a.ScaleType,Parent=C}local e=b:GetCustomIcon(B.Image)assert(e,"Image must be a valid Roblox asset or a valid URL or a valid lucide icon.")B.Image=e.Url B.ImageRectOffset=e.ImageRectOffset B.ImageRectSize=e.ImageRectSize local J=I("ImageLabel",B)function a.SetHeight(t,w)assert(w>0,"Height must be greater than 0.")a.Height=w P.Size=UDim2.new(1,0,0,w)l:Resize()end function a.SetImage(t,w)assert(typeof(w)=="string","Image must be a string.")local K=b:GetCustomIcon(w)assert(K,"Image must be a valid Roblox asset or a valid URL or a valid lucide icon.")w=K.Url a.RectOffset=K.ImageRectOffset a.RectSize=K.ImageRectSize J.Image=w a.Image=w end function a.SetColor(t,w)assert(typeof(w)=="Color3","Color must be a Color3 value.")J.ImageColor3=w a.Color=w end function a.SetRectOffset(t,w)assert(typeof(w)=="Vector2","RectOffset must be a Vector2 value.")J.ImageRectOffset=w a.RectOffset=w end function a.SetRectSize(t,w)assert(typeof(w)=="Vector2","RectSize must be a Vector2 value.")J.ImageRectSize=w a.RectSize=w end function a.SetScaleType(t,w)assert(typeof(w)=="EnumItem"and w:IsA("ScaleType"),"ScaleType must be a valid Enum.ScaleType.")J.ScaleType=w a.ScaleType=w end function a.SetTransparency(t,w)assert(typeof(w)=="number","Transparency must be a number between 0 and 1.")assert(w>=0 and w<=1,"Transparency must be between 0 and 1.")J.ImageTransparency=w a.Transparency=w end function a.SetVisible(t,w)a.Visible=w P.Visible=a.Visible l:Resize()end l:Resize()a.Holder=P table.insert(l.Elements,a);(p)[w]=a return a end function w.AddVideo(K,w,t)t=b:Validate(t,D.Video)local l=K local Z=l.Container local a={Video=t.Video;Looped=t.Looped;Playing=t.Playing,Volume=t.Volume,Height=t.Height,Visible=t.Visible;Type="Video"}local P=I("Frame",{BackgroundTransparency=1,Size=UDim2.new(1,0,0,t.Height),Visible=a.Visible,Parent=Z})local C=I("Frame",{AnchorPoint=Vector2.new(0,1),BackgroundColor3="MainColor";BorderColor3="OutlineColor",BorderSizePixel=1,Position=UDim2.fromScale(0,1),Size=UDim2.fromScale(1,1);Parent=P})I("UIPadding",{PaddingBottom=UDim.new(0,3);PaddingLeft=UDim.new(0,8),PaddingRight=UDim.new(0,8),PaddingTop=UDim.new(0,4);Parent=C})local B=I("VideoFrame",{BackgroundTransparency=1,Size=UDim2.fromScale(1,1),Video=a.Video;Looped=a.Looped,Volume=a.Volume;Parent=C})B.Playing=a.Playing function a.SetHeight(t,w)assert(w>0,"Height must be greater than 0.")a.Height=w P.Size=UDim2.new(1,0,0,w)l:Resize()end function a.SetVideo(t,w)assert(typeof(w)=="string","Video must be a string.")B.Video=w a.Video=w end function a.SetLooped(t,w)assert(typeof(w)=="boolean","Looped must be a boolean.")B.Looped=w a.Looped=w end function a.SetVolume(t,w)assert(typeof(w)=="number","Volume must be a number between 0 and 10.")B.Volume=w a.Volume=w end function a.SetPlaying(t,w)assert(typeof(w)=="boolean","Playing must be a boolean.")B.Playing=w a.Playing=w end function a.Play(w)B.Playing=true a.Playing=true end function a.Pause(w)B.Playing=false a.Playing=false end function a.SetVisible(t,w)a.Visible=w P.Visible=a.Visible l:Resize()end l:Resize()a.Holder=P a.VideoFrame=B table.insert(l.Elements,a);(p)[w]=a return a end function w.AddUIPassthrough(K,w,t)t=b:Validate(t,D.UIPassthrough)local l=K local Z=l.Container assert(t.Instance,"Instance must be provided.")assert(typeof(t.Instance)=="Instance"and t.Instance:IsA("GuiBase2d"),"Instance must inherit from GuiBase2d.")assert(typeof(t.Height)=="number"and t.Height>0,"Height must be a number greater than 0.")local a={Instance=t.Instance,Height=t.Height,Visible=t.Visible,Type="UIPassthrough"}local P=I("Frame",{BackgroundTransparency=1;Size=UDim2.new(1,0,0,t.Height);Visible=a.Visible,Parent=Z})a.Instance.Parent=P l:Resize()function a.SetHeight(t,w)assert(typeof(w)=="number"and w>0,"Height must be a number greater than 0.")a.Height=w P.Size=UDim2.new(1,0,0,w)l:Resize()end function a.SetInstance(t,w)assert(w,"Instance must be provided.")assert(typeof(w)=="Instance"and w:IsA("GuiBase2d"),"Instance must inherit from GuiBase2d.")if a.Instance then a.Instance.Parent=nil end a.Instance=w a.Instance.Parent=P end function a.SetVisible(t,w)a.Visible=w P.Visible=a.Visible l:Resize()end a.Holder=P table.insert(l.Elements,a);(p)[w]=a return a end function w.AddDependencyBox(w)local t=w local K=t.Container local l local Z do l=I("Frame",{BackgroundTransparency=1,Size=UDim2.fromScale(1,1),Visible=false;Parent=K})Z=I("UIListLayout",{Padding=UDim.new(0,8);Parent=l})end local a={Visible=false;Dependencies={};Holder=l,Container=l;Elements={};DependencyBoxes={}}function a.Resize(w)l.Size=UDim2.new(1,0,0,Z.AbsoluteContentSize.Y*b.DPIScale)t:Resize()end function a.Update(t,w)for w,t in pairs(a.Dependencies)do local K=(t)[1]local Z=(t)[2]if K.Type=="Toggle"and K.Value~=Z then l.Visible=false a.Visible=false return elseif K.Type=="Dropdown"then if typeof(K.Value)=="table"then if not(K.Value)[Z]then l.Visible=false a.Visible=false return end else if K.Value~=Z then l.Visible=false a.Visible=false return end end end end a.Visible=true l.Visible=true if not b.Searching then a:Resize()elseif not w then b:UpdateSearch(b.SearchText)end end function a.SetupDependencies(t,w)for w,t in pairs(w)do assert(typeof(t)=="table","Dependency should be a table.")assert((t)[1]~=nil,"Dependency is missing element.")assert((t)[2]~=nil,"Dependency is missing expected value.")end a.Dependencies=w a:Update()end;(l:GetPropertyChangedSignal("Visible")):Connect(function()a:Resize()end)setmetatable(a,mh)table.insert(t.DependencyBoxes,a)table.insert(b.DependencyBoxes,a)return a end function w.AddDependencyGroupbox(w)local t=w local K=t.Tab local l=t.BoxHolder local Z=b:MakeOutline(l,b.CornerRadius)Z.Size=UDim2.fromScale(1,0)Z.Visible=false b:UpdateDPI(Z,{Size=false})local a local P do a=I("Frame",{BackgroundColor3="BackgroundColor";Position=UDim2.fromOffset(2,2),Size=UDim2.new(1,-4,1,-4);Parent=Z})I("UICorner",{CornerRadius=UDim.new(0,b.CornerRadius-1),Parent=a})P=I("UIListLayout",{Padding=UDim.new(0,8),Parent=a})I("UIPadding",{PaddingBottom=UDim.new(0,7);PaddingLeft=UDim.new(0,7),PaddingRight=UDim.new(0,7),PaddingTop=UDim.new(0,7);Parent=a})end local C={Visible=false,Dependencies={},BoxHolder=l;Holder=Z,Container=a;Tab=K;Elements={};DependencyBoxes={}}function C.Resize(w)Z.Size=UDim2.new(1,0,0,P.AbsoluteContentSize.Y+18*b.DPIScale)end function C.Update(t,w)for w,t in pairs(C.Dependencies)do local K=(t)[1]local l=(t)[2]if K.Type=="Toggle"and K.Value~=l then Z.Visible=false C.Visible=false return elseif K.Type=="Dropdown"then if typeof(K.Value)=="table"then if not(K.Value)[l]then Z.Visible=false C.Visible=false return end else if K.Value~=l then Z.Visible=false C.Visible=false return end end end end C.Visible=true if not b.Searching then Z.Visible=true C:Resize()elseif not w then b:UpdateSearch(b.SearchText)end end function C.SetupDependencies(t,w)for w,t in pairs(w)do assert(typeof(t)=="table","Dependency should be a table.")assert((t)[1]~=nil,"Dependency is missing element.")assert((t)[2]~=nil,"Dependency is missing expected value.")end C.Dependencies=w C:Update()end setmetatable(C,mh)table.insert(K.DependencyGroupboxes,C)table.insert(b.DependencyBoxes,C)return C end mh.__index=w mh.__namecall=function(t,K,...)return(w)[K](...)end end function b.SetFont(t,w)if typeof(w)=="EnumItem"then w=Font.fromEnum(w)end b.Scheme.Font=w b:UpdateColorsUsingRegistry()end function b.SetNotifySide(t,w)b.NotifySide=w if w:lower()=="left"then Kh.AnchorPoint=Vector2.new(0,0)Kh.Position=UDim2.fromOffset(6,6)lh.HorizontalAlignment=Enum.HorizontalAlignment.Left else Kh.AnchorPoint=Vector2.new(1,0)Kh.Position=UDim2.new(1,-6,0,6)lh.HorizontalAlignment=Enum.HorizontalAlignment.Right end end function b.Notify(w,...)local t={}local K=select(1,...)if typeof(K)=="table"then t.Title=tostring(K.Title)t.Description=tostring(K.Description)t.Time=K.Time or 5 t.SoundId=K.SoundId t.Steps=K.Steps t.Persist=K.Persist else t.Description=tostring(K)t.Time=select(2,...)or 5 t.SoundId=select(3,...)end t.Destroyed=false local l=false local Z=nil if typeof(t.Time)=="Instance"then Z=t.Time.Destroying:Connect(function()l=true Z:Disconnect()Z=nil end)end local a=I("Frame",{AutomaticSize=Enum.AutomaticSize.Y;BackgroundTransparency=1,Size=UDim2.fromScale(1,0);Visible=false;Parent=Kh;DPIExclude={Size=true}})local P=b:MakeOutline(a,b.CornerRadius,5)P.AutomaticSize=Enum.AutomaticSize.Y P.Position=b.NotifySide:lower()=="left"and UDim2.new(-1,-6,0,-2)or UDim2.new(1,6,0,-2)P.Size=UDim2.fromScale(1,0)b:UpdateDPI(P,{Position=false,Size=false})local C=I("Frame",{BackgroundColor3="MainColor";Position=UDim2.fromOffset(2,2),Size=UDim2.new(1,-4,1,-4),Parent=P})I("UICorner",{CornerRadius=UDim.new(0,b.CornerRadius-1),Parent=C})I("UIListLayout",{Padding=UDim.new(0,4);Parent=C})I("UIPadding",{PaddingBottom=UDim.new(0,8),PaddingLeft=UDim.new(0,8);PaddingRight=UDim.new(0,8);PaddingTop=UDim.new(0,8),Parent=C})local B local J local y=0 local u=0 local o if t.Title then B=I("TextLabel",{BackgroundTransparency=1;Text=t.Title,TextSize=15,TextXAlignment=Enum.TextXAlignment.Left,TextWrapped=true,Parent=C,DPIExclude={Size=true}})end if t.Description then J=I("TextLabel",{BackgroundTransparency=1,Text=t.Description;TextSize=14,TextXAlignment=Enum.TextXAlignment.Left,TextWrapped=true;Parent=C,DPIExclude={Size=true}})end function t.Resize(w)if B then local w,t=b:GetTextBounds(B.Text,B.FontFace,B.TextSize,Kh.AbsoluteSize.X-24*b.DPIScale)B.Size=UDim2.fromOffset(math.ceil(w),t)y=w end if J then local w,t=b:GetTextBounds(J.Text,J.FontFace,J.TextSize,Kh.AbsoluteSize.X-24*b.DPIScale)J.Size=UDim2.fromOffset(math.ceil(w),t)u=w end a.Size=UDim2.fromOffset((y>u and y or u)+24*b.DPIScale,0)end function t.ChangeTitle(K,w)if B then t.Title=tostring(w)B.Text=t.Title t:Resize()end end function t.ChangeDescription(K,w)if J then t.Description=tostring(w)J.Text=t.Description t:Resize()end end function t.ChangeStep(K,w)if o and t.Steps then w=math.clamp(w or 0,0,t.Steps)o.Size=UDim2.fromScale(w/t.Steps,1)end end function t.Destroy(w)t.Destroyed=true if Z then Z:Disconnect()end;(m:Create(P,b.NotifyTweenInfo,{Position=b.NotifySide:lower()=="left"and UDim2.new(-1,-6,0,-2)or UDim2.new(1,6,0,-2)})):Play()task.delay(b.NotifyTweenInfo.Time,function()(b.Notifications)[a]=nil a:Destroy()end)end t:Resize()local A=I("Frame",{BackgroundTransparency=1;Size=UDim2.new(1,0,0,7);Visible=t.Persist~=true and typeof(t.Time)~="Instance"or typeof(t.Steps)=="number",Parent=C})local v=I("Frame",{BackgroundColor3="BackgroundColor",BorderColor3="OutlineColor",BorderSizePixel=1,Position=UDim2.fromOffset(0,3),Size=UDim2.new(1,0,0,2);Parent=A})o=I("Frame",{BackgroundColor3="AccentColor",Size=UDim2.fromScale(1,1);Parent=v})if typeof(t.Time)=="Instance"then o.Size=UDim2.fromScale(0,1)end if t.SoundId then local w=t.SoundId if typeof(w)=="number"then w=string.format("rbxassetid://%d",w)end;(I("Sound",{SoundId=w;Volume=3;PlayOnRemove=true,Parent=e})):Destroy()end;(b.Notifications)[a]=t a.Visible=true;(m:Create(P,b.NotifyTweenInfo,{Position=UDim2.fromOffset(-2,-2)})):Play()task.delay(b.NotifyTweenInfo.Time,function()if t.Persist then return elseif typeof(t.Time)=="Instance"then repeat task.wait()until l or t.Destroyed else(m:Create(o,TweenInfo.new(t.Time,Enum.EasingStyle.Linear,Enum.EasingDirection.InOut),{Size=UDim2.fromScale(0,1)})):Play()task.wait(t.Time)end if not t.Destroyed then t:Destroy()end end)return t end function b.CreateWindow(t,w)w=b:Validate(w,D.Window)local K=workspace.CurrentCamera.ViewportSize if B:IsStudio()and(K.X<=5 and K.Y<=5)then repeat K=workspace.CurrentCamera.ViewportSize task.wait()until K.X>5 and K.Y>5 end local l=K.X-64 local Z=K.Y-64 b.MinSize=Vector2.new(math.min(b.MinSize.X,l),math.min(b.MinSize.Y,Z))w.Size=UDim2.fromOffset(math.clamp(w.Size.X.Offset,b.MinSize.X,l),math.clamp(w.Size.Y.Offset,b.MinSize.Y,Z))if typeof(w.Font)=="EnumItem"then w.Font=Font.fromEnum(w.Font)end b.CornerRadius=w.CornerRadius b:SetNotifySide(w.NotifySide)b.ShowCustomCursor=w.ShowCustomCursor b.Scheme.Font=w.Font b.ToggleKeybind=w.ToggleKeybind local a=w.SearchbarSize==UDim2.fromScale(1,1)local P local C local e local y local u local o local A local v local x local E=w.SidebarHighlightCallback local M={IsCompact=w.Compact,MinWidth=w.SidebarMinWidth;CompactWidth=w.SidebarCompactWidth,MinContentWidth=w.MinContentWidth or 260,CollapseThreshold=w.SidebarCollapseThreshold;CurrentWidth=nil,LastExpandedWidth=nil;MaxWidth=nil,GrabberHighlighted=false}if M.MinWidth<=M.CompactWidth then M.MinWidth=M.CompactWidth+32 end if M.CollapseThreshold<=0 then M.CollapseThreshold=.5 elseif M.CollapseThreshold>=1 then M.CollapseThreshold=.9 end local d=math.max(w.Size.X.Offset,M.MinWidth+M.MinContentWidth)local s=w.InitialSidebarWidth or math.floor(d*(w.InitialSidebarScale or.3))M.CurrentWidth=math.max(M.MinWidth,s)M.LastExpandedWidth=M.CurrentWidth local p={DividerLine=nil;TitleHolder=nil,WindowIcon=nil;WindowTitle=nil;RightWrapper=nil;TabsFrame=nil,ContainerFrame=nil;SidebarGrabber=nil,TabPadding={},TabLabels={}}local n=yh and 38 or 0 local g={Active=false,StartWidth=0,StartX=0;TouchId=nil}local function F()return M.IsCompact and M.CompactWidth or M.CurrentWidth end local function S()local t=P and P.AbsoluteSize.X or w.Size.X.Offset if t<=0 then return end local K=t-M.MinContentWidth M.MaxWidth=math.max(M.MinWidth,K)M.CurrentWidth=math.clamp(M.CurrentWidth,M.MinWidth,M.MaxWidth)M.LastExpandedWidth=math.clamp(M.LastExpandedWidth or M.CurrentWidth,M.MinWidth,M.MaxWidth)end local function f(w)local t=p.DividerLine if not t then return end M.GrabberHighlighted=w==true if typeof(E)=="function"then b:SafeCallback(E,t,M.GrabberHighlighted)else local w=M.GrabberHighlighted and W(b.Scheme.OutlineColor)or b.Scheme.OutlineColor;(m:Create(t,b.TweenInfo,{BackgroundColor3=w})):Play()end end local function Y()S()local t=F()local K=M.IsCompact if p.DividerLine then p.DividerLine.Position=UDim2.new(0,t,0,0)end if p.TabsFrame then p.TabsFrame.Size=UDim2.new(0,t,1,-70)end if p.ContainerFrame then p.ContainerFrame.Position=UDim2.fromOffset(t,49)p.ContainerFrame.Size=UDim2.new(1,-t,1,-70)end if p.SidebarGrabber then p.SidebarGrabber.Position=UDim2.fromOffset(t-p.SidebarGrabber.Size.X.Offset/2,49)end if p.TitleHolder then p.TitleHolder.Size=UDim2.new(0,math.max(M.CompactWidth,t),1,0)end if p.WindowIcon then if w.Icon then p.WindowIcon.Visible=true else p.WindowIcon.Visible=K or not p.WindowTitle end end if p.WindowTitle then p.WindowTitle.Visible=not K if not K then local K=math.max(0,t-(w.Icon and w.IconSize.X.Offset+12 or 12))local l=b:GetTextBounds(p.WindowTitle.Text,b.Scheme.Font,20,K)p.WindowTitle.Size=UDim2.new(0,l,1,0)else p.WindowTitle.Size=UDim2.new(0,0,1,0)end end if p.RightWrapper then local w=t+8 p.RightWrapper.Position=UDim2.new(0,w,.5,0)p.RightWrapper.Size=UDim2.new(1,(-w-8)-n,1,-16)end for w,t in ipairs(p.TabPadding)do t.PaddingLeft=UDim.new(0,K and 14 or 12)t.PaddingRight=UDim.new(0,K and 14 or 12)t.PaddingTop=UDim.new(0,K and 7 or 11)t.PaddingBottom=UDim.new(0,K and 7 or 11)end for w,t in ipairs(p.TabLabels)do t.Visible=not K end f(M.GrabberHighlighted)w.Compact=M.IsCompact for w,t in pairs(b.Tabs)do if t.RefreshSides then t:RefreshSides()end end end local function i(w)w=w or M.CurrentWidth local t=M.MinWidth*M.CollapseThreshold local K=M.IsCompact if w<=t then if not K then M.LastExpandedWidth=M.CurrentWidth end M.IsCompact=true else local t=w if K then t=math.max(w,M.MinWidth)end M.CurrentWidth=t M.IsCompact=false end local Z=M.IsCompact and M.CompactWidth or M.CurrentWidth local a=(M.IsCompact and M.CompactWidth or M.MinWidth)+M.MinContentWidth local C=l local B=Z+M.FixedContentWidth B=math.clamp(B,a,C)P.Size=UDim2.new(0,B,0,P.Size.Y.Offset)S()if not M.IsCompact then M.CurrentWidth=math.clamp(M.CurrentWidth,M.MinWidth,M.MaxWidth)M.LastExpandedWidth=M.CurrentWidth end Y()end do b.KeybindFrame,b.KeybindContainer=b:AddDraggableMenu("Keybinds")b.KeybindFrame.AnchorPoint=Vector2.new(0,.5)b.KeybindFrame.Position=UDim2.new(0,6,.5,0)b.KeybindFrame.Visible=false b:UpdateDPI(b.KeybindFrame,{Position=false,Size=false})P=I("TextButton",{BackgroundColor3=function()return b:GetBetterColor(b.Scheme.BackgroundColor,-1)end;Name="Main";Text="";Position=w.Position,Size=w.Size;Visible=false;Parent=O;DPIExclude={Position=true}})I("UICorner",{CornerRadius=UDim.new(.03,w.CornerRadius-1),Parent=P})local t=I("Frame",{Name="Shadow";Parent=P;Position=UDim2.new(.5,0,.5,0);Size=UDim2.new(1,0,1,0);AnchorPoint=Vector2.new(.5,.5);BackgroundTransparency=1,BorderSizePixel=0;ZIndex=0})local K=I("ImageLabel",{Name="ShadowLabel",Parent=t;Position=UDim2.new(.5,0,.5,0);Size=UDim2.new(1.15,0,1.25,0);AnchorPoint=Vector2.new(.5,.5);BackgroundTransparency=1;Image="rbxassetid://119131500058545",ImageColor3=Color3.fromRGB(80,20,60),ImageTransparency=.35,SliceScale=Vector2.new(1,0),TileSize=UDim2.new(1,0,1,0)})local l=F()p.DividerLine=b:MakeLine(P,{Position=UDim2.new(0,l,0,0),Size=UDim2.new(0,1,1,-21);ZIndex=2})local Z={{Position=UDim2.fromOffset(0,48),Size=UDim2.new(1,0,0,1)},{AnchorPoint=Vector2.new(0,1),Position=UDim2.new(0,0,1,-20);Size=UDim2.new(1,0,0,1)}}for w,t in pairs(Z)do b:MakeLine(P,t)end b:MakeOutline(P,w.CornerRadius,0)if w.BackgroundImage then I("ImageLabel",{Image=w.BackgroundImage;Position=UDim2.fromScale(0,0),Size=UDim2.fromScale(1,1),ScaleType=Enum.ScaleType.Stretch;ZIndex=999,BackgroundTransparency=1;ImageTransparency=.75;Parent=P})end if w.Center then P.Position=UDim2.new(.5,-P.Size.X.Offset/2,.5,-P.Size.Y.Offset/2)end local a=I("Frame",{BackgroundTransparency=1,Size=UDim2.new(1,0,0,48),Parent=P})b:MakeDraggable(P,a,false,true)local m=I("Frame",{BackgroundTransparency=1;Size=UDim2.new(0,math.max(M.CompactWidth,l),1,0),Parent=a})I("UIListLayout",{FillDirection=Enum.FillDirection.Horizontal,HorizontalAlignment=Enum.HorizontalAlignment.Center,VerticalAlignment=Enum.VerticalAlignment.Center,Padding=UDim.new(0,6);Parent=m})p.TitleHolder=m local x if w.Icon then x=I("ImageButton",{Image="rbxassetid://76824839217865";Size=w.IconSize;BackgroundTransparency=1,Parent=m})local t=I("UIGradient",{Color=ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.fromRGB(255,162,40)),ColorSequenceKeypoint.new(.35,Color3.fromRGB(175,55,255)),ColorSequenceKeypoint.new(.7,Color3.fromRGB(115,0,255));ColorSequenceKeypoint.new(1,Color3.fromRGB(255,90,30))});Rotation=25;Parent=x})local K={Color3.fromRGB(255,162,40),Color3.fromRGB(175,55,255);Color3.fromRGB(115,0,255),Color3.fromRGB(255,90,30)}local l={0,.35,.7;1}local Z=#l local function a(w)local a={}for t=1,Z,1 do local Z=((l)[t]+w)%1 table.insert(a,ColorSequenceKeypoint.new(Z,(K)[t]))end table.sort(a,function(w,t)return w.Time<t.Time end)if(a)[1].Time>0 then table.insert(a,1,ColorSequenceKeypoint.new(0,(a)[1].Value))end if(a)[#a].Time<1 then table.insert(a,ColorSequenceKeypoint.new(1,(a)[#a].Value))end t.Color=ColorSequence.new(a)end a(0)t.Transparency=NumberSequence.new(0)local P=7 local C=18 local e=tick()task.spawn(function()B.Heartbeat:Connect(function(w)local K=(tick()-e)%P local l=K/P a(l)t.Rotation=(t.Rotation+C*w)%360 end)end)else x=I("TextButton",{Text=w.Title:sub(1,1),TextScaled=true;Size=w.IconSize,BackgroundTransparency=1,Parent=m})end x.Visible=w.Icon~=nil or M.IsCompact p.WindowIcon=x local E=I("TextButton",{BackgroundTransparency=1,Text="Vellure",TextSize=20,Visible=not M.IsCompact,Parent=m})if not M.IsCompact then local t=math.max(0,l-(w.Icon and w.IconSize.X.Offset+12 or 12))local K=b:GetTextBounds(E.Text,b.Scheme.Font,20,t)E.Size=UDim2.new(0,K,1,0)else E.Size=UDim2.new(0,0,1,0)end p.WindowTitle=E local d=I("Frame",{BackgroundTransparency=1,AnchorPoint=Vector2.new(0,.5);Position=UDim2.new(0,l+8,.5,0),Size=UDim2.new(1,-((l+16)+n),1,-16),Parent=a})p.RightWrapper=d I("UIListLayout",{FillDirection=Enum.FillDirection.Horizontal;HorizontalAlignment=Enum.HorizontalAlignment.Right;VerticalAlignment=Enum.VerticalAlignment.Center,Padding=UDim.new(0,8),Parent=d})e=I("Frame",{Size=UDim2.fromScale(w.DisableSearch and 1 or.5,1),Visible=false,BackgroundTransparency=1;Parent=d})I("UIFlexItem",{FlexMode=Enum.UIFlexMode.Grow;Parent=e})I("UIListLayout",{FillDirection=Enum.FillDirection.Vertical,HorizontalAlignment=Enum.HorizontalAlignment.Left,VerticalAlignment=Enum.VerticalAlignment.Center,Parent=e})I("UIPadding",{PaddingBottom=UDim.new(0,8);PaddingLeft=UDim.new(0,2),PaddingRight=UDim.new(0,8);PaddingTop=UDim.new(0,8),Parent=e})y=I("TextLabel",{BackgroundTransparency=1,Size=UDim2.fromScale(1,0),AutomaticSize=Enum.AutomaticSize.Y,Text="",TextSize=14,TextXAlignment=Enum.TextXAlignment.Left,Parent=e})u=I("TextLabel",{BackgroundTransparency=1,Size=UDim2.fromScale(1,0),AutomaticSize=Enum.AutomaticSize.Y,Text="";TextWrapped=true;TextSize=14;TextXAlignment=Enum.TextXAlignment.Left;TextTransparency=.5,Parent=e})C=I("TextBox",{BackgroundColor3="MainColor";PlaceholderText="Search";Size=w.DisableSearch and UDim2.fromScale(0,1)or UDim2.fromScale(.5,1);TextScaled=true,Visible=not(w.DisableSearch or false);Parent=d})I("UIFlexItem",{FlexMode=Enum.UIFlexMode.Shrink,Parent=C})I("UICorner",{CornerRadius=UDim.new(.03,w.CornerRadius);Parent=C})I("UIPadding",{PaddingBottom=UDim.new(0,8),PaddingLeft=UDim.new(0,8),PaddingRight=UDim.new(0,8);PaddingTop=UDim.new(0,8);Parent=C})I("UIStroke",{Color="OutlineColor";Parent=C})local s=b:GetIcon("search")if s then I("ImageLabel",{Image=s.Url;ImageColor3="FontColor",ImageRectOffset=s.ImageRectOffset,ImageRectSize=s.ImageRectSize,ImageTransparency=.5,Size=UDim2.fromScale(1,1);SizeConstraint=Enum.SizeConstraint.RelativeYY,Parent=C})end if yh then I("ImageLabel",{AnchorPoint=Vector2.new(1,.5),Image=yh.Url;ImageColor3="OutlineColor",ImageRectOffset=yh.ImageRectOffset,ImageRectSize=yh.ImageRectSize,Position=UDim2.new(1,-10,.5,0),Size=UDim2.fromOffset(28,28),SizeConstraint=Enum.SizeConstraint.RelativeYY,Parent=a})end local D=I("Frame",{AnchorPoint=Vector2.new(0,1),BackgroundColor3=function()return b:GetBetterColor(b.Scheme.BackgroundColor,4)end,BackgroundTransparency=1,Position=UDim2.fromScale(0,1);Size=UDim2.new(1,0,0,20);Parent=P})I("UICorner",{CornerRadius=UDim.new(.03,w.CornerRadius-1),Parent=D})I("TextLabel",{BackgroundTransparency=1;Size=UDim2.fromScale(1,1),Text=w.Footer;TextSize=14;TextTransparency=.5,Parent=D})if w.Resizable then o=I("TextButton",{AnchorPoint=Vector2.new(1,0),BackgroundTransparency=1,Position=UDim2.new(1,-3,0,0),Size=UDim2.fromScale(1,1);SizeConstraint=Enum.SizeConstraint.RelativeYY;Text="";Parent=D})b:MakeResizable(P,o,function()S()Y()for w,t in pairs(b.Tabs)do t:Resize(true)end end)end I("ImageLabel",{Image=eh and eh.Url or"";ImageColor3="FontColor";ImageRectOffset=eh and eh.ImageRectOffset or Vector2.zero;ImageRectSize=eh and eh.ImageRectSize or Vector2.zero,ImageTransparency=.5,Position=UDim2.fromOffset(2,2),Size=UDim2.new(1,-4,1,-4);Parent=o})b:GiveSignal((P:GetPropertyChangedSignal("AbsoluteSize")):Connect(function()S()Y()end))A=I("ScrollingFrame",{AutomaticCanvasSize=Enum.AutomaticSize.Y,BackgroundColor3="BackgroundColor";CanvasSize=UDim2.fromScale(0,0);Position=UDim2.fromOffset(0,49),ScrollBarThickness=0,Size=UDim2.new(0,l,1,-70),Parent=P})I("UIListLayout",{Parent=A})p.TabsFrame=A v=I("Frame",{AnchorPoint=Vector2.new(0,0);BackgroundColor3=function()return b:GetBetterColor(b.Scheme.BackgroundColor,1)end,Name="Container",Position=UDim2.fromOffset(l,49);Size=UDim2.new(1,-l,1,-70),Parent=P})I("UIPadding",{PaddingBottom=UDim.new(0,0);PaddingLeft=UDim.new(0,6);PaddingRight=UDim.new(0,6),PaddingTop=UDim.new(0,0);Parent=v})p.ContainerFrame=v if w.EnableSidebarResize then local w=I("TextButton",{AutoButtonColor=false;BackgroundTransparency=1,Text="",Size=UDim2.new(0,12,1,-70),Position=UDim2.fromOffset(l-6,49);ZIndex=5,Parent=P})p.SidebarGrabber=w w.MouseEnter:Connect(function()if b.Toggled then f(true)end end)w.MouseLeave:Connect(function()if not g.Active then f(false)end end)b:GiveSignal(w.InputBegan:Connect(function(t)if not b.Toggled then return end if t.UserInputType~=Enum.UserInputType.MouseButton1 and t.UserInputType~=Enum.UserInputType.Touch then return end g.Active=true g.StartWidth=F()g.StartX=t.Position.X g.TouchId=t.UserInputType==Enum.UserInputType.Touch and t or nil f(true)local K K=b:GiveSignal(t.Changed:Connect(function()if t.UserInputState==Enum.UserInputState.End then g.Active=false g.TouchId=nil local t=b:MouseIsOverFrame(w,Vector2.new(z.X,z.Y))f(t and b.Toggled)if K then K:Disconnect()end end end))end))b:GiveSignal(J.InputChanged:Connect(function(w)if not g.Active then return end if not b.Toggled then g.Active=false g.TouchId=nil f(false)return end if w.UserInputType==Enum.UserInputType.MouseMovement or w==g.TouchId then local t=w.Position.X-g.StartX i(g.StartWidth+t)end end))b:GiveSignal(J.InputEnded:Connect(function(t)if not g.Active then return end if t.UserInputType==Enum.UserInputType.MouseButton1 or t.UserInputType==Enum.UserInputType.Touch or t==g.TouchId then g.Active=false g.TouchId=nil local t=b:MouseIsOverFrame(w,Vector2.new(z.X,z.Y))f(t and b.Toggled)end end))f(false)end task.defer(function()S()Y()end)end x={}function x.GetSidebarWidth(w)return F()end function x.IsSidebarCompacted(w)return M.IsCompact end function x.SetSidebarWidth(t,w)i(w)end function x.SetCompact(t,w)assert(typeof(w)=="boolean","State must be a boolean")local K=M.MinWidth*M.CollapseThreshold if w then i(K*.5)else i(M.LastExpandedWidth or M.CurrentWidth or M.MinWidth)end end function x.ApplyLayout(w)Y()end function x.AddTab(t,...)local K=nil local l=nil local Z=nil if select("#",...)==1 and typeof(...)=="table"then local w=select(1,...)K=w.Name or"Tab"l=w.Icon Z=w.Description else K=select(1,...)l=select(2,...)Z=select(3,...)end local P local B local J local o local x local E local z local d local s local n local D l=b:GetCustomIcon(l)do P=I("TextButton",{BackgroundColor3="MainColor";BackgroundTransparency=1;Size=UDim2.new(1,0,0,40);Text="";Parent=A})local w=I("UIPadding",{PaddingBottom=UDim.new(0,M.IsCompact and 7 or 11);PaddingLeft=UDim.new(0,M.IsCompact and 14 or 12),PaddingRight=UDim.new(0,M.IsCompact and 14 or 12),PaddingTop=UDim.new(0,M.IsCompact and 7 or 11),Parent=P})table.insert(p.TabPadding,w)B=I("TextLabel",{BackgroundTransparency=1;Position=UDim2.fromOffset(30,0);Size=UDim2.new(1,-30,1,0);Text=K,TextSize=16,TextTransparency=.5;TextXAlignment=Enum.TextXAlignment.Left,Visible=not M.IsCompact;Parent=P})table.insert(p.TabLabels,B)if l then J=I("ImageLabel",{Image=l.Url,ImageColor3=l.Custom and"White"or"AccentColor";ImageRectOffset=l.ImageRectOffset;ImageRectSize=l.ImageRectSize,ImageTransparency=.5;Size=UDim2.fromScale(1,1);SizeConstraint=Enum.SizeConstraint.RelativeYY,Parent=P})end o=I("Frame",{BackgroundTransparency=1;Size=UDim2.fromScale(1,1);Visible=false,Parent=v})x=I("ScrollingFrame",{AutomaticCanvasSize=Enum.AutomaticSize.Y;BackgroundTransparency=1,CanvasSize=UDim2.fromScale(0,0);ScrollBarThickness=0;Parent=o})I("UIListLayout",{Padding=UDim.new(0,6);Parent=x})do I("Frame",{BackgroundTransparency=1;LayoutOrder=-1;Parent=x})I("Frame",{BackgroundTransparency=1;LayoutOrder=1,Parent=x})x.Size=UDim2.new(0,math.floor(o.AbsoluteSize.X/2)-3,1,0)b:UpdateDPI(x,{Size=x.Size})end E=I("ScrollingFrame",{AnchorPoint=Vector2.new(1,0),AutomaticCanvasSize=Enum.AutomaticSize.Y,BackgroundTransparency=1;CanvasSize=UDim2.fromScale(0,0);Position=UDim2.fromScale(1,0),ScrollBarThickness=0;Parent=o})I("UIListLayout",{Padding=UDim.new(0,6),Parent=E})do I("Frame",{BackgroundTransparency=1,LayoutOrder=-1;Parent=E})I("Frame",{BackgroundTransparency=1,LayoutOrder=1,Parent=E})E.Size=UDim2.new(0,math.floor(o.AbsoluteSize.X/2)-3,1,0)b:UpdateDPI(E,{Size=E.Size})end z=I("Frame",{AutomaticSize=Enum.AutomaticSize.Y,BackgroundColor3=Color3.fromRGB(127,0,0),BorderColor3=Color3.fromRGB(255,50,50),BorderMode=Enum.BorderMode.Inset,BorderSizePixel=1;Position=UDim2.fromOffset(0,6);Size=UDim2.fromScale(1,0),Visible=false,Parent=o})d=I("ScrollingFrame",{BackgroundTransparency=1,BorderSizePixel=0,AnchorPoint=Vector2.new(.5,.5);Position=UDim2.new(.5,0,.5,-3),Size=UDim2.new(1,0,1,-3),CanvasSize=UDim2.new(0,0,0,0),ScrollBarThickness=3,Parent=z})I("UIPadding",{PaddingBottom=UDim.new(0,4),PaddingLeft=UDim.new(0,6);PaddingRight=UDim.new(0,6),PaddingTop=UDim.new(0,4);Parent=d})s=I("TextLabel",{BackgroundTransparency=1,Size=UDim2.new(1,-4,0,14),Text="";TextColor3=Color3.fromRGB(255,50,50);TextSize=14;TextXAlignment=Enum.TextXAlignment.Left;Parent=d})D=I("UIStroke",{ApplyStrokeMode=Enum.ApplyStrokeMode.Contextual,Color=Color3.fromRGB(169,0,0);LineJoinMode=Enum.LineJoinMode.Miter,Parent=s})n=I("TextLabel",{BackgroundTransparency=1,Position=UDim2.fromOffset(0,16),Size=UDim2.new(1,-4,0,0);Text="",TextSize=14,TextWrapped=true,Parent=d;TextXAlignment=Enum.TextXAlignment.Left,TextYAlignment=Enum.TextYAlignment.Top})I("UIStroke",{ApplyStrokeMode=Enum.ApplyStrokeMode.Contextual,Color="Dark",LineJoinMode=Enum.LineJoinMode.Miter,Parent=n})end local g={Groupboxes={};Tabboxes={},DependencyGroupboxes={};Sides={x,E};WarningBox={IsNormal=false;LockSize=false;Visible=false;Title="WARNING";Text=""}}function g.UpdateWarningBox(t,w)if typeof(w.IsNormal)=="boolean"then g.WarningBox.IsNormal=w.IsNormal end if typeof(w.LockSize)=="boolean"then g.WarningBox.LockSize=w.LockSize end if typeof(w.Visible)=="boolean"then g.WarningBox.Visible=w.Visible end if typeof(w.Title)=="string"then g.WarningBox.Title=w.Title end if typeof(w.Text)=="string"then g.WarningBox.Text=w.Text end z.Visible=g.WarningBox.Visible s.Text=g.WarningBox.Title n.Text=g.WarningBox.Text g:Resize(true)z.BackgroundColor3=g.WarningBox.IsNormal==true and b.Scheme.BackgroundColor or Color3.fromRGB(127,0,0)z.BorderColor3=g.WarningBox.IsNormal==true and b.Scheme.OutlineColor or Color3.fromRGB(255,50,50)s.TextColor3=g.WarningBox.IsNormal==true and b.Scheme.FontColor or Color3.fromRGB(255,50,50)D.Color=g.WarningBox.IsNormal==true and b.Scheme.OutlineColor or Color3.fromRGB(169,0,0)if not(b.Registry)[z]then b:AddToRegistry(z,{})end if not(b.Registry)[s]then b:AddToRegistry(s,{})end if not(b.Registry)[D]then b:AddToRegistry(D,{})end;(b.Registry)[z].BackgroundColor3=function()return g.WarningBox.IsNormal==true and b.Scheme.BackgroundColor or Color3.fromRGB(127,0,0)end;(b.Registry)[z].BorderColor3=function()return g.WarningBox.IsNormal==true and b.Scheme.OutlineColor or Color3.fromRGB(255,50,50)end;(b.Registry)[s].TextColor3=function()return g.WarningBox.IsNormal==true and b.Scheme.FontColor or Color3.fromRGB(255,50,50)end;(b.Registry)[D].Color=function()return g.WarningBox.IsNormal==true and b.Scheme.OutlineColor or Color3.fromRGB(169,0,0)end end function g.RefreshSides(w)local t=z.Visible and z.AbsoluteSize.Y+6 or 0 for w,K in pairs(g.Sides)do K.Position=UDim2.new(K.Position.X.Scale,0,0,t)K.Size=UDim2.new(0,math.floor(o.AbsoluteSize.X/2)-3,1,-t)b:UpdateDPI(K,{Position=K.Position,Size=K.Size})end end function g.Resize(t,w)if w then local w=math.floor(o.AbsoluteSize.Y/3.25)local t,K=b:GetTextBounds(n.Text,b.Scheme.Font,n.TextSize,n.AbsoluteSize.X)local l=24+K if g.WarningBox.LockSize==true and l>=w then d.CanvasSize=UDim2.fromOffset(0,l)l=w else d.CanvasSize=UDim2.fromOffset(0,0)end n.Size=UDim2.new(1,-4,0,K)b:UpdateDPI(n,{Size=n.Size})z.Size=UDim2.new(1,0,0,l)b:UpdateDPI(z,{Size=z.Size})end g:RefreshSides()end function g.AddGroupbox(K,t)local l=I("Frame",{AutomaticSize=Enum.AutomaticSize.Y,BackgroundTransparency=1,Size=UDim2.fromScale(1,0),Parent=t.Side==1 and x or E})I("UIListLayout",{Padding=UDim.new(0,6);Parent=l})local Z=b:MakeOutline(l,w.CornerRadius)Z.Size=UDim2.fromScale(1,0)b:UpdateDPI(Z,{Size=false})local a local P local C local B do a=I("Frame",{BackgroundColor3="BackgroundColor";Position=UDim2.fromOffset(2,2),Size=UDim2.new(1,-4,1,-4);Parent=Z})I("UICorner",{CornerRadius=UDim.new(.03,w.CornerRadius-1);Parent=a})b:MakeLine(a,{Position=UDim2.fromOffset(0,34);Size=UDim2.new(1,0,0,1)})local K=b:GetCustomIcon(t.IconName)if K then I("ImageLabel",{Image=K.Url;ImageColor3=K.Custom and"White"or"AccentColor";ImageRectOffset=K.ImageRectOffset,ImageRectSize=K.ImageRectSize;Position=UDim2.fromOffset(6,6),Size=UDim2.fromOffset(22,22),Parent=a})end P=I("TextLabel",{BackgroundTransparency=1;Position=UDim2.fromOffset(K and 24 or 0,0),Size=UDim2.new(1,0,0,34),Text=t.Name,TextSize=15,TextXAlignment=Enum.TextXAlignment.Left,Parent=a})I("UIPadding",{PaddingLeft=UDim.new(0,12),PaddingRight=UDim.new(0,12),Parent=P})C=I("Frame",{BackgroundTransparency=1;Position=UDim2.fromOffset(0,35);Size=UDim2.new(1,0,1,-35),Parent=a})B=I("UIListLayout",{Padding=UDim.new(0,8);Parent=C})I("UIPadding",{PaddingBottom=UDim.new(0,7);PaddingLeft=UDim.new(0,7),PaddingRight=UDim.new(0,7),PaddingTop=UDim.new(0,7),Parent=C})end local e={BoxHolder=l,Holder=Z;Container=C,Tab=g;DependencyBoxes={},Elements={}}function e.Resize(w)Z.Size=UDim2.new(1,0,0,B.AbsoluteContentSize.Y+53*b.DPIScale)end setmetatable(e,mh)e:Resize();(g.Groupboxes)[t.Name]=e return e end function g.AddLeftGroupbox(K,w,t)return g:AddGroupbox({Side=1;Name=w,IconName=t})end function g.AddRightGroupbox(K,w,t)return g:AddGroupbox({Side=2;Name=w;IconName=t})end function g.AddTabbox(K,t)local l=I("Frame",{AutomaticSize=Enum.AutomaticSize.Y;BackgroundTransparency=1;Size=UDim2.fromScale(1,0),Parent=t.Side==1 and x or E})I("UIListLayout",{Padding=UDim.new(0,6),Parent=l})local Z=b:MakeOutline(l,w.CornerRadius)Z.Size=UDim2.fromScale(1,0)b:UpdateDPI(Z,{Size=false})local a local P do a=I("Frame",{BackgroundColor3="BackgroundColor";Position=UDim2.fromOffset(2,2);Size=UDim2.new(1,-4,1,-4),Parent=Z})I("UICorner",{CornerRadius=UDim.new(.03,w.CornerRadius-1);Parent=a})P=I("Frame",{BackgroundTransparency=1;Size=UDim2.new(1,0,0,34);Parent=a})I("UIListLayout",{FillDirection=Enum.FillDirection.Horizontal,HorizontalFlex=Enum.UIFlexAlignment.Fill,Parent=P})end local C={ActiveTab=nil,BoxHolder=l,Holder=Z,Tabs={}}function C.AddTab(t,w)local K=I("TextButton",{BackgroundColor3="MainColor";BackgroundTransparency=0,Size=UDim2.fromOffset(0,34),Text=w,TextSize=15,TextTransparency=.5;Parent=P})local l=b:MakeLine(K,{AnchorPoint=Vector2.new(0,1);Position=UDim2.new(0,0,1,1),Size=UDim2.new(1,0,0,1)})local B=I("Frame",{BackgroundTransparency=1,Position=UDim2.fromOffset(0,35);Size=UDim2.new(1,0,1,-35);Visible=false,Parent=a})local e=I("UIListLayout",{Padding=UDim.new(0,8),Parent=B})I("UIPadding",{PaddingBottom=UDim.new(0,7),PaddingLeft=UDim.new(0,7);PaddingRight=UDim.new(0,7);PaddingTop=UDim.new(0,7);Parent=B})local J={ButtonHolder=K;Container=B,Tab=g,Elements={},DependencyBoxes={}}function J.Show(w)if C.ActiveTab then C.ActiveTab:Hide()end K.BackgroundTransparency=1 K.TextTransparency=0 l.Visible=false B.Visible=true C.ActiveTab=J J:Resize()end function J.Hide(w)K.BackgroundTransparency=0 K.TextTransparency=.5 l.Visible=true B.Visible=false C.ActiveTab=nil end function J.Resize(w)if C.ActiveTab~=J then return end Z.Size=UDim2.new(1,0,0,e.AbsoluteContentSize.Y+53*b.DPIScale)end if not C.ActiveTab then J:Show()end K.MouseButton1Click:Connect(J.Show)setmetatable(J,mh);(C.Tabs)[w]=J return J end if t.Name then(g.Tabboxes)[t.Name]=C else table.insert(g.Tabboxes,C)end return C end function g.AddLeftTabbox(t,w)return g:AddTabbox({Side=1,Name=w})end function g.AddRightTabbox(t,w)return g:AddTabbox({Side=2,Name=w})end function g.Hover(t,w)if b.ActiveTab==g then return end;(m:Create(B,b.TweenInfo,{TextTransparency=w and.25 or.5})):Play()if J then(m:Create(J,b.TweenInfo,{ImageTransparency=w and.25 or.5})):Play()end end function g.Show(w)if b.ActiveTab then b.ActiveTab:Hide()end;(m:Create(P,b.TweenInfo,{BackgroundTransparency=0})):Play();(m:Create(B,b.TweenInfo,{TextTransparency=0})):Play()if J then(m:Create(J,b.TweenInfo,{ImageTransparency=0})):Play()end if Z then e.Visible=true if a then C.Size=UDim2.fromScale(.5,1)end y.Text=K u.Text=Z end o.Visible=true g:RefreshSides()b.ActiveTab=g if b.Searching then b:UpdateSearch(b.SearchText)end end function g.Hide(w)(m:Create(P,b.TweenInfo,{BackgroundTransparency=1})):Play();(m:Create(B,b.TweenInfo,{TextTransparency=.5})):Play()if J then(m:Create(J,b.TweenInfo,{ImageTransparency=.5})):Play()end o.Visible=false e.Visible=false b.ActiveTab=nil end if not b.ActiveTab then g:Show()end P.MouseEnter:Connect(function()g:Hover(true)end)P.MouseLeave:Connect(function()g:Hover(false)end)P.MouseButton1Click:Connect(g.Show);(b.Tabs)[K]=g return g end function x.AddKeyTab(t,w)local K local l local Z local a do K=I("TextButton",{BackgroundColor3="MainColor";BackgroundTransparency=1;Size=UDim2.new(1,0,0,40);Text="";Parent=A})local t=I("UIPadding",{PaddingBottom=UDim.new(0,M.IsCompact and 7 or 11),PaddingLeft=UDim.new(0,M.IsCompact and 14 or 12),PaddingRight=UDim.new(0,M.IsCompact and 14 or 12);PaddingTop=UDim.new(0,M.IsCompact and 7 or 11);Parent=K})table.insert(p.TabPadding,t)l=I("TextLabel",{BackgroundTransparency=1,Position=UDim2.fromOffset(30,0);Size=UDim2.new(1,-30,1,0);Text=w;TextSize=16;TextTransparency=.5;TextXAlignment=Enum.TextXAlignment.Left,Visible=not M.IsCompact,Parent=K})table.insert(p.TabLabels,l)if Jh then Z=I("ImageLabel",{Image=Jh.Url,ImageColor3="AccentColor",ImageRectOffset=Jh.ImageRectOffset;ImageRectSize=Jh.ImageRectSize,ImageTransparency=.5,Size=UDim2.fromScale(1,1);SizeConstraint=Enum.SizeConstraint.RelativeYY;Parent=K})end a=I("ScrollingFrame",{AutomaticCanvasSize=Enum.AutomaticSize.Y;BackgroundTransparency=1;CanvasSize=UDim2.fromScale(0,0),ScrollBarThickness=0,Size=UDim2.fromScale(1,1),Visible=false;Parent=v})I("UIListLayout",{HorizontalAlignment=Enum.HorizontalAlignment.Center;Padding=UDim.new(0,8);VerticalAlignment=Enum.VerticalAlignment.Center,Parent=a})I("UIPadding",{PaddingLeft=UDim.new(0,1),PaddingRight=UDim.new(0,1);Parent=a})end local P={Elements={},IsKeyTab=true}function P.AddKeyBox(w,...)local t={}local K=select(1,...)if typeof(K)=="function"then t.Callback=K else t.ExpectedKey=K t.Callback=select(2,...)end local l=I("Frame",{BackgroundTransparency=1,Size=UDim2.new(.75,0,0,21),Parent=a})local Z=I("TextBox",{BackgroundColor3="MainColor",BorderColor3="OutlineColor";BorderSizePixel=1,PlaceholderText="Key";Size=UDim2.new(1,-71,1,0),TextSize=14;TextXAlignment=Enum.TextXAlignment.Left;Parent=l})I("UIPadding",{PaddingLeft=UDim.new(0,8),PaddingRight=UDim.new(0,8),Parent=Z})local P=I("TextButton",{AnchorPoint=Vector2.new(1,0);BackgroundColor3="MainColor";BorderColor3="OutlineColor",BorderSizePixel=1;Position=UDim2.fromScale(1,0);Size=UDim2.new(0,63,1,0),Text="Execute";TextSize=14,Parent=l})P.MouseButton1Click:Connect(function()if t.ExpectedKey and Z.Text~=t.ExpectedKey then t.Callback(false,Z.Text)return end t.Callback(true,Z.Text)end)end function P.RefreshSides(w) end function P.Resize(w) end function P.Hover(t,w)if b.ActiveTab==P then return end;(m:Create(l,b.TweenInfo,{TextTransparency=w and.25 or.5})):Play()if Z then(m:Create(Z,b.TweenInfo,{ImageTransparency=w and.25 or.5})):Play()end end function P.Show(w)if b.ActiveTab then b.ActiveTab:Hide()end;(m:Create(K,b.TweenInfo,{BackgroundTransparency=0})):Play();(m:Create(l,b.TweenInfo,{TextTransparency=0})):Play()if Z then(m:Create(Z,b.TweenInfo,{ImageTransparency=0})):Play()end a.Visible=true b.ActiveTab=P end function P.Hide(w)(m:Create(K,b.TweenInfo,{BackgroundTransparency=1})):Play();(m:Create(l,b.TweenInfo,{TextTransparency=.5})):Play()if Z then(m:Create(Z,b.TweenInfo,{ImageTransparency=.5})):Play()end a.Visible=false b.ActiveTab=nil end if not b.ActiveTab then P:Show()end K.MouseEnter:Connect(function()P:Hover(true)end)K.MouseLeave:Connect(function()P:Hover(false)end)K.MouseButton1Click:Connect(P.Show)P.Container=a setmetatable(P,mh);(b.Tabs)[w]=P return P end function b.Toggle(K,t)if typeof(t)=="boolean"then b.Toggled=t else b.Toggled=not b.Toggled end P.Visible=b.Toggled if w.UnlockMouseWhileOpen then wh.Modal=b.Toggled end if b.Toggled and not b.IsMobile then local w=J.MouseIconEnabled pcall(function()B:UnbindFromRenderStep("ShowCursor")end)B:BindToRenderStep("ShowCursor",Enum.RenderPriority.Last.Value,function()J.MouseIconEnabled=not b.ShowCustomCursor th.Position=UDim2.fromOffset(z.X,z.Y)th.Visible=b.ShowCustomCursor if not(b.Toggled and(O and O.Parent))then J.MouseIconEnabled=w th.Visible=false B:UnbindFromRenderStep("ShowCursor")end end)elseif not b.Toggled then f(false)ah.Visible=false for w,t in pairs(b.Options)do if t.Type=="ColorPicker"then t.ColorMenu:Close()t.ContextMenu:Close()elseif t.Type=="Dropdown"or t.Type=="KeyPicker"then t.Menu:Close()end end end end if w.AutoShow then task.spawn(b.Toggle)end if b.IsMobile then local t=b:AddDraggableButton("Toggle",function()b:Toggle()end)local K=b:AddDraggableButton("Lock",function(w)b.CantDragForced=not b.CantDragForced w:SetText(b.CantDragForced and"Unlock"or"Lock")end)if w.MobileButtonsSide=="Right"then t.Button.Position=UDim2.new(1,-6,0,6)t.Button.AnchorPoint=Vector2.new(1,0)K.Button.Position=UDim2.new(1,-6,0,46)K.Button.AnchorPoint=Vector2.new(1,0)else K.Button.Position=UDim2.fromOffset(6,46)end end;(C:GetPropertyChangedSignal("Text")):Connect(function()b:UpdateSearch(C.Text)end)b:GiveSignal(J.InputBegan:Connect(function(w)if J:GetFocusedTextBox()then return end if typeof(b.ToggleKeybind)=="table"and(b.ToggleKeybind.Type=="KeyPicker"and w.KeyCode.Name==b.ToggleKeybind.Value)or w.KeyCode==b.ToggleKeybind then b.Toggle()end end))b:GiveSignal(J.WindowFocused:Connect(function()b.IsRobloxFocused=true end))b:GiveSignal(J.WindowFocusReleased:Connect(function()b.IsRobloxFocused=false end))return x end local function oh()local w,t=c(),c(true)for K,l in pairs(p)do if l.Type=="Dropdown"and l.SpecialType=="Player"then l:SetValues(l.ExcludeLocalPlayer and t or w)end end end local function Ah()local w=j()for t,K in pairs(p)do if K.Type=="Dropdown"and K.SpecialType=="Team"then K:SetValues(w)end end end b:GiveSignal(C.PlayerAdded:Connect(oh))b:GiveSignal(C.PlayerRemoving:Connect(oh))b:GiveSignal(u.ChildAdded:Connect(Ah))b:GiveSignal(u.ChildRemoved:Connect(Ah));(o()).Library=b local vh=b.Options local xh=b.Toggles b.ForceCheckbox=false b.ShowToggleFrameInKeybinds=true a:SetLibrary(b)a:IgnoreThemeSettings()task.spawn(function()task.wait(a.AutoloadDelay or 0)a:LoadAutoloadConfig()end)return b
