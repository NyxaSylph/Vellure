--[[

obfuscated @ discord.gg/25ms

--]]
local L=cloneref or clonereference or function(L)return L end local R=L(game:GetService("HttpService"))local B,z,b=isfolder,isfile,listfiles local c=L(game:GetService("CoreGui"))local v=L(game:GetService("Players"))local U=L(game:GetService("RunService"))local w=L(game:GetService("SoundService"))local o=L(game:GetService("UserInputService"))local K=L(game:GetService("TextService"))local i=L(game:GetService("Teams"))local G=L(game:GetService("TweenService"))local s=getgenv or function()return shared end local h=setclipboard or nil local H=protectgui or syn and syn.protect_gui or function() end local g=gethui or function()return c end local x=v.LocalPlayer or v.PlayerAdded:Wait()local a=L(x:GetMouse())if typeof(copyfunction)=="function"then local L,R,c=copyfunction(B),copyfunction(z),copyfunction(b)local v,U=pcall(function()return L("test"..tostring(math.random(1000000,9999999)))end)if v==false or typeof(U)~="boolean"then B=function(R)local B,z=pcall(L,R)return((B and{z}or{false}))[1]end z=function(L)local B,z=pcall(R,L)return((B and{z}or{false}))[1]end b=function(L)local R,B=pcall(c,L)return((R and{B}or{{}}))[1]end end local w,o=copyfunction(makefolder),copyfunction(delfile)local K,i=pcall(function()w("test"..tostring(math.random(1000000,9999999)))end)if K==false then makefolder=function(L)local R,B=pcall(w,L)return((R and{B}or{false}))[1]end end local G,s=pcall(function()o("test"..tostring(math.random(1000000,9999999)))end)if G==false then delfile=function(L)local R,B=pcall(o,L)return((R and{B}or{false}))[1]end end end local d={}do d.Folder="Vellure"d.SubFolder=""d.Ignore={}d.Library=nil d.Initialized=false d.Parser={Toggle={Save=function(L,R)return{type="Toggle",idx=L;value=R.Value}end,Load=function(L,R)local B=(d.Library.Toggles)[L]if B and B.Value~=R.value then B:SetValue(R.value,true)end end},Slider={Save=function(L,R)return{type="Slider",idx=L;value=tostring(R.Value)}end,Load=function(L,R)local B=(d.Library.Options)[L]if B and B.Value~=R.value then B:SetValue(R.value,true)end end},Dropdown={Save=function(L,R)return{type="Dropdown",idx=L;value=R.Value,mutli=R.Multi}end;Load=function(L,R)local B=(d.Library.Options)[L]if B and B.Value~=R.value then B:SetValue(R.value,true)end end};ColorPicker={Save=function(L,R)return{type="ColorPicker",idx=L;value=R.Value:ToHex();transparency=R.Transparency}end;Load=function(L,R)if(d.Library.Options)[L]then(d.Library.Options)[L]:SetValueRGB(Color3.fromHex(R.value),R.transparency,true)end end};KeyPicker={Save=function(L,R)return{type="KeyPicker",idx=L;mode=R.Mode;key=R.Value;modifiers=R.Modifiers}end,Load=function(L,R)if(d.Library.Options)[L]then(d.Library.Options)[L]:SetValue({R.key,R.mode;R.modifiers},true)end end};Input={Save=function(L,R)return{type="Input",idx=L;text=R.Value}end;Load=function(L,R)local B=(d.Library.Options)[L]if B and(B.Value~=R.text and type(R.text)=="string")then(d.Library.Options)[L]:SetValue(R.text,true)end end}}function d.SetLibrary(R,L)R.Library=L end function d.IgnoreThemeSettings(L)L:SetIgnoreIndexes({"BackgroundColor";"MainColor";"AccentColor";"OutlineColor","FontColor","FontFace";"ThemeManager_ThemeList";"ThemeManager_CustomThemeList","ThemeManager_CustomThemeName"})end function d.CheckSubFolder(R,L)if typeof(R.SubFolder)~="string"or R.SubFolder==""then return false end if L==true then if not B(R.Folder..("/settings/"..R.SubFolder))then makefolder(R.Folder..("/settings/"..R.SubFolder))end end return true end function d.GetPaths(L)local R={}local B=L.Folder:split("/")for L=1,#B,1 do local z=table.concat(B,"/",1,L)if not table.find(R,z)then(R)[#R+1]=z end end;(R)[#R+1]=L.Folder.."/themes";(R)[#R+1]=L.Folder.."/settings"if L:CheckSubFolder(false)then local z=L.Folder..("/settings/"..L.SubFolder)B=z:split("/")for L=1,#B,1 do local z=table.concat(B,"/",1,L)if not table.find(R,z)then(R)[#R+1]=z end end end return R end function d.BuildFolderTree(L)local R=L:GetPaths()for L=1,#R,1 do local z=false repeat local b=(R)[L]if B(b)then z=true break end makefolder(b)z=true until true if not z then break end end end function d.CheckFolderTree(L)if B(L.Folder)then return end d:BuildFolderTree()task.wait(.1)end function d.SetIgnoreIndexes(R,L)for L,B in pairs(L)do(R.Ignore)[B]=true end end function d.SetFolder(R,L)R.Folder=L R:BuildFolderTree()end function d.SetSubFolder(R,L)R.SubFolder=L R:BuildFolderTree()end function d.Save(z,L,B)if z.Loading then return false,"loading"end if not z.Initialized then return false,"not initialized"end if not L then if z.Library then z.Library:Notify("Failed to save config: no config file is selected")end return false,"no config file is selected"end d:CheckFolderTree()local b=z.Folder..("/settings/"..(L..".json"))if d:CheckSubFolder(true)then b=z.Folder..("/settings/"..(z.SubFolder..("/"..(L..".json"))))end local c={objects={}}for L,R in pairs(z.Library.Toggles)do local B=false repeat if not R.Type then B=true break end if not(z.Parser)[R.Type]then B=true break end if(z.Ignore)[L]then B=true break end table.insert(c.objects,(z.Parser)[R.Type].Save(L,R))B=true until true if not B then break end end for L,R in pairs(z.Library.Options)do local B=false repeat if not R.Type then B=true break end if not(z.Parser)[R.Type]then B=true break end if(z.Ignore)[L]then B=true break end table.insert(c.objects,(z.Parser)[R.Type].Save(L,R))B=true until true if not B then break end end local v,U=pcall(R.JSONEncode,R,c)if not v then if z.Library then z.Library:Notify("Failed to save config: failed to encode data")end return false,"failed to encode data"end writefile(b,U)return true end function d.Load(B,L)if not L then return false,"no config file is selected"end d:CheckFolderTree()local b=B.Folder..("/settings/"..(L..".json"))if d:CheckSubFolder(true)then b=B.Folder..("/settings/"..(B.SubFolder..("/"..(L..".json"))))end if not z(b)then return false,"invalid file"end local c,v=pcall(R.JSONDecode,R,readfile(b))if not c then return false,"decode error"end for L,R in pairs(v.objects)do local z=false repeat if not R.type then z=true break end if not(B.Parser)[R.type]then z=true break end pcall((B.Parser)[R.type].Load,R.idx,R)z=true until true if not z then break end end return true end function d.Delete(R,L)if not L then return false,"no config file is selected"end local B=R.Folder..("/settings/"..(L..".json"))if d:CheckSubFolder(true)then B=R.Folder..("/settings/"..(R.SubFolder..("/"..(L..".json"))))end if not z(B)then return false,"invalid file"end local b=pcall(delfile,B)if not b then return false,"delete file error"end return true end function d.RefreshConfigList(L)local R,B=pcall(function()d:CheckFolderTree()local R={}local B={}if d:CheckSubFolder(true)then R=b(L.Folder..("/settings/"..L.SubFolder))else R=b(L.Folder.."/settings")end if typeof(R)~="table"then R={}end for L=1,#R,1 do local z=(R)[L]if z:sub(-5)==".json"then local L=z:find(".json",1,true)local R=L local b=z:sub(L,L)while b~="/"and(b~="\092"and b~="")do L=L-1 b=z:sub(L,L)end if b=="/"or b=="\092"then table.insert(B,z:sub(L+1,R-1))end end end return B end)if not R then if L.Library then L.Library:Notify("Failed to load config list: "..tostring(B))else warn("Failed to load config list: "..tostring(B))end return{}end return B end function d.GetAutoloadConfig(L)d:CheckFolderTree()local R=L.Folder.."/settings/autoload.txt"if d:CheckSubFolder(true)then R=L.Folder..("/settings/"..(L.SubFolder.."/autoload.txt"))end if z(R)then local L,B=pcall(readfile,R)if not L then return"none"end B=tostring(B)return B==""and"none"or B end return"none"end function d.LoadAutoloadConfig(L)d:CheckFolderTree()local R=L.Folder.."/settings/autoload.txt"if d:CheckSubFolder(true)then R=L.Folder..("/settings/"..(L.SubFolder.."/autoload.txt"))end local B="default"if not z(R)then local L=pcall(writefile,R,"default")if not L then return false,"write file error"end else local z,b=pcall(readfile,R)if not z then return L.Library:Notify("Failed to read autoload config: read file error")end b=(tostring(b)):gsub("\n","")B=b==""and"default"or b end L.Loading=true local b,c=L:Load(B)L.Loading=false if b then L.Initialized=true else if c=="invalid file"or c=="decode error"then L:Save(B,true)local R=L:Load(B)else L.Library:Notify("Failed to load autoload config: "..c)end L.Initialized=true end end function d.SaveAutoloadConfig(R,L)d:CheckFolderTree()local B=R.Folder.."/settings/autoload.txt"if d:CheckSubFolder(true)then B=R.Folder..("/settings/"..(R.SubFolder.."/autoload.txt"))end local z=pcall(writefile,B,L)if not z then return false,"write file error"end return true,""end function d.DeleteAutoLoadConfig(L)d:CheckFolderTree()local R=L.Folder.."/settings/autoload.txt"if d:CheckSubFolder(true)then R=L.Folder..("/settings/"..(L.SubFolder.."/autoload.txt"))end local B=pcall(delfile,R)if not B then return false,"delete file error"end return true,""end d:BuildFolderTree()d.AutoloadDelay=.1 end local J={}local T={}local y={}local P={}local j={LocalPlayer=x,DevicePlatform=nil;IsMobile=false;IsRobloxFocused=true,ScreenGui=nil;SearchText="",Searching=false;LastSearchTab=nil;ActiveTab=nil;Tabs={},DependencyBoxes={};KeybindFrame=nil;KeybindContainer=nil,KeybindToggles={};Notifications={};ToggleKeybind=Enum.KeyCode.RightControl;TweenInfo=TweenInfo.new(.1,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),NotifyTweenInfo=TweenInfo.new(.25,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),Toggled=false,Unloaded=false,Labels=J;Buttons=T,Toggles=y;Options=P,NotifySide="Right";ShowCustomCursor=true,ForceCheckbox=false;ShowToggleFrameInKeybinds=true;NotifyOnError=false,CantDragForced=false,Signals={};UnloadSignals={},MinSize=Vector2.new(480,360);DPIScale=1;CornerRadius=8;IsLightTheme=false,Scheme={BackgroundColor=Color3.fromRGB(12,8,20);MainColor=Color3.fromRGB(20,12,30);AccentColor=Color3.fromRGB(255,128,0);OutlineColor=Color3.fromRGB(45,25,55);FontColor=Color3.new(1,.98,.95);Font=Font.fromEnum(Enum.Font.Code),Red=Color3.fromRGB(255,60,40),Dark=Color3.new(.05,.02,.08);White=Color3.new(1,1,1)},Registry={},DPIRegistry={}}local N={Assets={TransparencyTexture={RobloxId=139785960036434,Path="Obsidian/assets/TransparencyTexture.png";Id=nil},SaturationMap={RobloxId=4155801252,Path="Obsidian/assets/SaturationMap.png";Id=nil}}}do local L="https://raw.githubusercontent.com/deividcomsono/Obsidian/refs/heads/main/"local function R(L,R)if not B or not makefolder then return end local z=L:split("/")local b=""if R then table.remove(z,#z)end for L,R in ipairs(z)do if not B(b..R)then makefolder(b..R)end b=b..(R.."/")end return b end function N.GetAsset(L)if not(N.Assets)[L]then return nil end local R=(N.Assets)[L]if R.Id then return R.Id end local B=string.format("rbxassetid://%s",R.RobloxId)if getcustomasset then local L,z=pcall(getcustomasset,R.Path)if L and z then B=z end end R.Id=B return B end function N.DownloadAsset(B)if not getcustomasset or not writefile or not z then return end R(B,true)if z(B)then return end local b=B:gsub("Obsidian/","")writefile(B,game:HttpGet(L..b))end for L,R in N.Assets do N.DownloadAsset(R.Path)end end if U:IsStudio()then if o.TouchEnabled and not o.MouseEnabled then j.IsMobile=true j.MinSize=Vector2.new(480,240)else j.IsMobile=false j.MinSize=Vector2.new(480,360)end else pcall(function()j.DevicePlatform=o:GetPlatform()end)j.IsMobile=j.DevicePlatform==Enum.Platform.Android or j.DevicePlatform==Enum.Platform.IOS j.MinSize=j.IsMobile and Vector2.new(480,240)or Vector2.new(480,360)end local k={Frame={BorderSizePixel=0},ImageLabel={BackgroundTransparency=1,BorderSizePixel=0};ImageButton={AutoButtonColor=false,BorderSizePixel=0},ScrollingFrame={BorderSizePixel=0};TextLabel={BorderSizePixel=0,FontFace="Font";RichText=true;TextColor3="FontColor"},TextButton={AutoButtonColor=false,BorderSizePixel=0;FontFace="Font";RichText=true;TextColor3="FontColor"};TextBox={BorderSizePixel=0,FontFace="Font";PlaceholderColor3=function()local L,R,B=j.Scheme.FontColor:ToHSV()return Color3.fromHSV(L,R,B/2)end;Text="";TextColor3="FontColor"},UIListLayout={SortOrder=Enum.SortOrder.LayoutOrder},UIStroke={ApplyStrokeMode=Enum.ApplyStrokeMode.Border,Thickness=1;Transparency=.2},Window={Title="No Title";Footer="No Footer";Position=UDim2.fromOffset(6,6),Size=UDim2.fromOffset(720,600);IconSize=UDim2.fromOffset(60,60);AutoShow=true;Center=true,Resizable=true;SearchbarSize=UDim2.fromScale(1,1),CornerRadius=8;NotifySide="Right",ShowCustomCursor=true;Font=Enum.Font.Code,ToggleKeybind=Enum.KeyCode.RightControl,MobileButtonsSide="Left";UnlockMouseWhileOpen=true,Compact=false;EnableSidebarResize=false,SidebarMinWidth=180,SidebarCompactWidth=54,SidebarCollapseThreshold=.5;SidebarHighlightCallback=nil;GameName=""};Toggle={Text="Toggle",Default=false,Callback=function() end,Changed=function() end;Risky=false;Disabled=false;Visible=true};Input={Text="Input",Default="";Finished=false,Numeric=false;ClearTextOnFocus=true;Placeholder="";AllowEmpty=true,EmptyReset="---";Callback=function() end;Changed=function() end;Disabled=false;Visible=true};Slider={Text="Slider";Default=0;Min=0;Max=100,Rounding=0;Prefix="";Suffix="";Callback=function() end;Changed=function() end,Disabled=false,Visible=true},Dropdown={Values={},DisabledValues={},Multi=false,MaxVisibleDropdownItems=8,Callback=function() end;Changed=function() end;Disabled=false;Visible=true};Viewport={Object=nil;Camera=nil,Clone=true;AutoFocus=true,Interactive=false,Height=200;Visible=true};Image={Image="",Transparency=0,Color=Color3.new(1,1,1);RectOffset=Vector2.zero;RectSize=Vector2.zero,ScaleType=Enum.ScaleType.Fit;Height=200;Visible=true};Video={Video="",Looped=false;Playing=false;Volume=1;Height=200,Visible=true},UIPassthrough={Instance=nil;Height=24;Visible=true},KeyPicker={Text="KeyPicker",Default="None",DefaultModifiers={},Mode="Toggle",Modes={"Always";"Toggle","Hold"};SyncToggleState=false;Callback=function() end;ChangedCallback=function() end;Changed=function() end,Clicked=function() end};ColorPicker={Default=Color3.new(1,1,1),Callback=function() end,Changed=function() end}}local m={Bottom={0,1};Right={1;0}}local M={Left={.5;1},Right={.5;1}}local function p(L,R)if typeof(L)=="UDim"then return UDim.new(L.Scale,L.Offset*j.DPIScale)elseif typeof(L)=="Vector2"then return L*j.DPIScale end if R then return UDim2.new(L.X.Scale,L.X.Offset*j.DPIScale+(R)[1]*j.DPIScale,L.Y.Scale,L.Y.Offset*j.DPIScale+(R)[2]*j.DPIScale)end return UDim2.new(L.X.Scale,L.X.Offset*j.DPIScale,L.Y.Scale,L.Y.Offset*j.DPIScale)end local function e(L)return L*j.DPIScale end local function E(L,R,B)local z=Instance.new("BindableEvent")local b=L:Once(function(...)if not B or typeof(B)=="function"and B(...)then z:Fire(true)else z:Fire(false)end end)task.delay(R,function()b:Disconnect()z:Fire(false)end)local c=z.Event:Wait()z:Destroy()return c end local function n(L,R)return L.UserInputType==Enum.UserInputType.MouseButton1 or R==true and L.UserInputType==Enum.UserInputType.MouseButton2 or L.UserInputType==Enum.UserInputType.Touch end local function O(L,R)return n(L,R)and(L.UserInputState==Enum.UserInputState.Begin and j.IsRobloxFocused)end local function Z(L)return(L.UserInputType==Enum.UserInputType.MouseMovement or L.UserInputType==Enum.UserInputType.Touch)and L.UserInputState==Enum.UserInputState.Change end local function r(L,R)return n(L,R)and((L.UserInputState==Enum.UserInputState.Begin or L.UserInputState==Enum.UserInputState.Change)and j.IsRobloxFocused)end local function Y(L)local R=0 for L,B in pairs(L)do R=R+1 end return R end local function t(L)if not(L and L.PlaybackState==Enum.PlaybackState.Playing)then return end L:Cancel()end local function f(L)return L:match("^%s*(.-)%s*$")end local function V(L,R)assert(R>=0,"Invalid rounding number.")if R==0 then return math.floor(L)end return tonumber(string.format("%."..(R.."f"),L))end local function S(L)local R=v:GetPlayers()if L then local L=table.find(R,x)if L then table.remove(R,L)end end table.sort(R,function(L,R)return L.Name:lower()<R.Name:lower()end)return R end local function I()local L=i:GetTeams()table.sort(L,function(L,R)return L.Name:lower()<R.Name:lower()end)return L end local function X(L)local R,B,z=L:ToHSV()return Color3.fromHSV(R,math.max(0,B-.1),math.min(1,z+.1))end function j.UpdateKeybindFrame(L)if not j.KeybindFrame then return end local R=0 for L,B in pairs(j.KeybindToggles)do local z=false repeat if not B.Holder.Visible then z=true break end local L=B.Label.Size.X.Offset+B.Label.Position.X.Offset if L>R then R=L end z=true until true if not z then break end end j.KeybindFrame.Size=UDim2.fromOffset(R+18*j.DPIScale,0)end function j.UpdateDependencyBoxes(L)for L,R in pairs(j.DependencyBoxes)do R:Update(true)end if j.Searching then j:UpdateSearch(j.SearchText)end end local function D(L,R)local B=0 for L,z in pairs(L.Elements)do local b=false repeat if z.Type=="Divider"then z.Holder.Visible=false b=true break elseif z.SubButton then local L=false if(z.Text:lower()):match(R)and z.Visible then L=true else z.Base.Visible=false end if(z.SubButton.Text:lower()):match(R)and z.SubButton.Visible then L=true else z.SubButton.Base.Visible=false end z.Holder.Visible=L if L then B=B+1 end b=true break end if z.Text and((z.Text:lower()):match(R)and z.Visible)then z.Holder.Visible=true B=B+1 else z.Holder.Visible=false end b=true until true if not b then break end end for L,z in pairs(L.DependencyBoxes)do local b=false repeat if not z.Visible then b=true break end B=B+D(z,R)b=true until true if not b then break end end return B end local function W(L)for L,R in pairs(L.Elements)do R.Holder.Visible=typeof(R.Visible)=="boolean"and R.Visible or true if R.SubButton then R.Base.Visible=R.Visible R.SubButton.Base.Visible=R.SubButton.Visible end end L:Resize()L.Holder.Visible=true for L,R in pairs(L.DependencyBoxes)do local B=false repeat if not R.Visible then B=true break end W(R)B=true until true if not B then break end end end function j.UpdateSearch(R,L)j.SearchText=L if j.LastSearchTab then for L,R in pairs(j.LastSearchTab.Groupboxes)do for L,R in pairs(R.Elements)do R.Holder.Visible=typeof(R.Visible)=="boolean"and R.Visible or true if R.SubButton then R.Base.Visible=R.Visible R.SubButton.Base.Visible=R.SubButton.Visible end end for L,R in pairs(R.DependencyBoxes)do local B=false repeat if not R.Visible then B=true break end W(R)B=true until true if not B then break end end R:Resize()R.Holder.Visible=true end for L,R in pairs(j.LastSearchTab.Tabboxes)do for L,R in pairs(R.Tabs)do for L,R in pairs(R.Elements)do R.Holder.Visible=typeof(R.Visible)=="boolean"and R.Visible or true if R.SubButton then R.Base.Visible=R.Visible R.SubButton.Base.Visible=R.SubButton.Visible end end for L,R in pairs(R.DependencyBoxes)do local B=false repeat if not R.Visible then B=true break end W(R)B=true until true if not B then break end end R.ButtonHolder.Visible=true end R.ActiveTab:Resize()R.Holder.Visible=true end for L,R in pairs(j.LastSearchTab.DependencyGroupboxes)do local B=false repeat if not R.Visible then B=true break end for L,R in pairs(R.Elements)do R.Holder.Visible=typeof(R.Visible)=="boolean"and R.Visible or true if R.SubButton then R.Base.Visible=R.Visible R.SubButton.Base.Visible=R.SubButton.Visible end end for L,R in pairs(R.DependencyBoxes)do local B=false repeat if not R.Visible then B=true break end W(R)B=true until true if not B then break end end R:Resize()R.Holder.Visible=true B=true until true if not B then break end end end local B=L:lower()if f(B)==""or j.ActiveTab.IsKeyTab then j.Searching=false j.LastSearchTab=nil return end j.Searching=true for L,R in pairs(j.ActiveTab.Groupboxes)do local z=0 for L,R in pairs(R.Elements)do local b=false repeat if R.Type=="Divider"then R.Holder.Visible=false b=true break elseif R.SubButton then local L=false if(R.Text:lower()):match(B)and R.Visible then L=true else R.Base.Visible=false end if(R.SubButton.Text:lower()):match(B)and R.SubButton.Visible then L=true else R.SubButton.Base.Visible=false end R.Holder.Visible=L if L then z=z+1 end b=true break end if R.Text and((R.Text:lower()):match(B)and R.Visible)then R.Holder.Visible=true z=z+1 else R.Holder.Visible=false end b=true until true if not b then break end end for L,R in pairs(R.DependencyBoxes)do local b=false repeat if not R.Visible then b=true break end z=z+D(R,B)b=true until true if not b then break end end if z>0 then R:Resize()end R.Holder.Visible=z>0 end for L,R in pairs(j.ActiveTab.Tabboxes)do local z=0 local b={}for L,R in pairs(R.Tabs)do(b)[R]=0 for L,z in pairs(R.Elements)do local c=false repeat if z.Type=="Divider"then z.Holder.Visible=false c=true break elseif z.SubButton then local L=false if(z.Text:lower()):match(B)and z.Visible then L=true else z.Base.Visible=false end if(z.SubButton.Text:lower()):match(B)and z.SubButton.Visible then L=true else z.SubButton.Base.Visible=false end z.Holder.Visible=L if L then(b)[R]=(b)[R]+1 end c=true break end if z.Text and((z.Text:lower()):match(B)and z.Visible)then z.Holder.Visible=true;(b)[R]=(b)[R]+1 else z.Holder.Visible=false end c=true until true if not c then break end end for L,z in pairs(R.DependencyBoxes)do local c=false repeat if not z.Visible then c=true break end;(b)[R]=(b)[R]+D(z,B)c=true until true if not c then break end end end for L,B in pairs(b)do L.ButtonHolder.Visible=B>0 if B>0 then z=z+1 if R.ActiveTab==L then L:Resize()elseif(b)[R.ActiveTab]==0 then L:Show()end end end R.Holder.Visible=z>0 end for L,R in pairs(j.ActiveTab.DependencyGroupboxes)do local z=false repeat if not R.Visible then z=true break end local L=0 for R,z in pairs(R.Elements)do local b=false repeat if z.Type=="Divider"then z.Holder.Visible=false b=true break elseif z.SubButton then local R=false if(z.Text:lower()):match(B)and z.Visible then R=true else z.Base.Visible=false end if(z.SubButton.Text:lower()):match(B)and z.SubButton.Visible then R=true else z.SubButton.Base.Visible=false end z.Holder.Visible=R if R then L=L+1 end b=true break end if z.Text and((z.Text:lower()):match(B)and z.Visible)then z.Holder.Visible=true L=L+1 else z.Holder.Visible=false end b=true until true if not b then break end end for R,z in pairs(R.DependencyBoxes)do local b=false repeat if not z.Visible then b=true break end L=L+D(z,B)b=true until true if not b then break end end if L>0 then R:Resize()end R.Holder.Visible=L>0 z=true until true if not z then break end end j.LastSearchTab=j.ActiveTab end function j.AddToRegistry(B,L,R)(j.Registry)[L]=R end function j.RemoveFromRegistry(R,L)(j.Registry)[L]=nil end function j.UpdateColorsUsingRegistry(L)for L,R in pairs(j.Registry)do for R,B in pairs(R)do if typeof(B)=="string"then(L)[R]=(j.Scheme)[B]elseif typeof(B)=="function"then(L)[R]=B()end end end end function j.UpdateDPI(B,L,R)if not(j.DPIRegistry)[L]then return end for R,B in pairs(R)do((j.DPIRegistry)[L])[R]=B and B or nil end end function j.SetDPIScale(R,L)j.DPIScale=L/100 j.MinSize=j.MinSize*j.DPIScale for L,R in pairs(j.DPIRegistry)do for B,z in pairs(R)do local b=false repeat if B=="DPIExclude"or B=="DPIOffset"then b=true break elseif B=="TextSize"then(L)[B]=e(z)else(L)[B]=p(z,(R.DPIOffset)[B])end b=true until true if not b then break end end end for L,R in pairs(j.Tabs)do local B=false repeat if R.IsKeyTab then B=true break end R:Resize(true)for L,R in pairs(R.Groupboxes)do R:Resize()end for L,R in pairs(R.Tabboxes)do for L,R in pairs(R.Tabs)do R:Resize()end end B=true until true if not B then break end end for L,R in pairs(P)do if R.Type=="Dropdown"then R:RecalculateListSize()elseif R.Type=="KeyPicker"then R:Update()end end j:UpdateKeybindFrame()for L,R in pairs(j.Notifications)do R:Resize()end end function j.GiveSignal(R,L)table.insert(j.Signals,L)return L end function IsValidCustomIcon(L)return typeof(L)=="string"and(L:match("rbxasset")or L:match("roblox%.com/asset/%?id=")or L:match("rbxthumb://type="))end local A,C=pcall(function()return(loadstring(game:HttpGet("https://raw.githubusercontent.com/deividcomsono/lucide-roblox-direct/refs/heads/main/source.lua")))()end)function j.GetIcon(R,L)if not A then return end local B,z=pcall(C.GetAsset,L)if not B then return end return z end function j.GetCustomIcon(R,L)if not IsValidCustomIcon(L)then return j:GetIcon(L)else return{Url=L,ImageRectOffset=Vector2.zero,ImageRectSize=Vector2.zero,Custom=true}end end function j.Validate(B,L,R)if typeof(L)~="table"then return R end for R,B in pairs(R)do local z=false repeat if typeof(R)=="number"then z=true break end if typeof(B)=="table"then(L)[R]=j:Validate((L)[R],B)elseif(L)[R]==nil then(L)[R]=B end z=true until true if not z then break end end return L end local function q(L,R)local B=(j.Registry)[R]or{}local z=(j.DPIRegistry)[R]or{}local b=z.DPIExclude or L.DPIExclude or{}local c=z.DPIOffset or L.DPIOffset or{}for L,v in pairs(L)do local U=false repeat if L=="DPIExclude"or L=="DPIOffset"then U=true break elseif(B)[L]then(B)[L]=nil elseif L~="Text"and((j.Scheme)[v]or typeof(v)=="function")then(B)[L]=v;(R)[L]=(j.Scheme)[v]or v()U=true break end if not(b)[L]then if L=="Position"or L=="Size"or L:match("Padding")then(z)[L]=v v=p(v,(c)[L])elseif L=="TextSize"then(z)[L]=v v=e(v)end end;(R)[L]=v U=true until true if not U then break end end if Y(B)>0 then(j.Registry)[R]=B end if Y(z)>0 then z.DPIExclude=b z.DPIOffset=c;(j.DPIRegistry)[R]=z end end local function u(L,R)local B=Instance.new(L)if(k)[L]then q((k)[L],B)end q(R,B)if R.Parent and not R.ZIndex then pcall(function()B.ZIndex=R.Parent.ZIndex end)end return B end local function F(L,R)local B,z=pcall(function()if not R then R=c end local B if typeof(R)=="function"then B=R()else B=R end L.Parent=B end)if not(B and L.Parent)then L.Parent=j.LocalPlayer:WaitForChild("PlayerGui",math.huge)end end local function Q(L,R)if R then F(L,c)return end pcall(H,L)F(L,g)end local l=u("ScreenGui",{Name="Obsidian",DisplayOrder=999,ResetOnSpawn=false})Q(l)j.ScreenGui=l l.DescendantRemoving:Connect(function(L)j:RemoveFromRegistry(L);(j.DPIRegistry)[L]=nil end)local Ll=u("TextButton",{BackgroundTransparency=1;Modal=false;Size=UDim2.fromScale(0,0),AnchorPoint=Vector2.zero,Text="",ZIndex=-999,Parent=l})local Rl do Rl=u("Frame",{AnchorPoint=Vector2.new(.5,.5);BackgroundColor3="White",Size=UDim2.fromOffset(9,1),Visible=false;ZIndex=999;Parent=l})u("Frame",{AnchorPoint=Vector2.new(.5,.5),BackgroundColor3="Dark";Position=UDim2.fromScale(.5,.5),Size=UDim2.new(1,2,1,2),ZIndex=998,Parent=Rl})local L=u("Frame",{AnchorPoint=Vector2.new(.5,.5);BackgroundColor3="White";Position=UDim2.fromScale(.5,.5);Size=UDim2.fromOffset(1,9);Parent=Rl})u("Frame",{AnchorPoint=Vector2.new(.5,.5);BackgroundColor3="Dark",Position=UDim2.fromScale(.5,.5),Size=UDim2.new(1,2,1,2),ZIndex=998;Parent=L})end local Bl local zl do Bl=u("Frame",{AnchorPoint=Vector2.new(1,0);BackgroundTransparency=1;Position=UDim2.new(1,-6,0,6),Size=UDim2.new(0,300,1,-6),Parent=l})zl=u("UIListLayout",{HorizontalAlignment=Enum.HorizontalAlignment.Right,Padding=UDim.new(0,6);Parent=Bl})end function j.GetBetterColor(B,L,R)R=R*(j.IsLightTheme and-4 or 2)return Color3.fromRGB(math.clamp(L.R*255+R,0,255),math.clamp(L.G*255+R,0,255),math.clamp(L.B*255+R,0,255))end function j.GetDarkerColor(R,L)local B,z,b=L:ToHSV()return Color3.fromHSV(B,z,b/2)end function j.GetKeyString(R,L)if L.EnumType==Enum.KeyCode and(L.Value>33 and L.Value<127)then return string.char(L.Value)end return L.Name end function j.GetTextBounds(b,L,R,B,z)local c=Instance.new("GetTextBoundsParams")c.Text=L c.RichText=true c.Font=R c.Size=B c.Width=z or workspace.CurrentCamera.ViewportSize.X-32 local v=K:GetTextBoundsAsync(c)return v.X,v.Y end function j.MouseIsOverFrame(B,L,R)local z,b=L.AbsolutePosition,L.AbsoluteSize return R.X>=z.X and(R.X<=z.X+b.X and(R.Y>=z.Y and R.Y<=z.Y+b.Y))end function j.SafeCallback(R,L,...)if not(L and typeof(L)=="function")then return end local B=table.pack(xpcall(L,function(L)task.defer(error,debug.traceback(L,2))if j.NotifyOnError then j:Notify(L)end return L end,...))if not(B)[1]then return nil end return table.unpack(B,2,B.n)end function j.MakeDraggable(b,L,R,B,z)local c local v local U=false local w R.InputBegan:Connect(function(R)if not O(R)or z and j.CantDragForced then return end c=R.Position v=L.Position U=true w=R.Changed:Connect(function()if R.UserInputState~=Enum.UserInputState.End then return end U=false if w and w.Connected then w:Disconnect()w=nil end end)end)j:GiveSignal(o.InputChanged:Connect(function(R)if not B and not j.Toggled or z and j.CantDragForced or not(l and l.Parent)then U=false if w and w.Connected then w:Disconnect()w=nil end return end if U and Z(R)then local B=R.Position-c L.Position=UDim2.new(v.X.Scale,v.X.Offset+B.X,v.Y.Scale,v.Y.Offset+B.Y)end end))end function j.MakeResizable(z,L,R,B)local b local c local v=false local U R.InputBegan:Connect(function(R)if not O(R)then return end b=R.Position c=L.Size v=true U=R.Changed:Connect(function()if R.UserInputState~=Enum.UserInputState.End then return end v=false if U and U.Connected then U:Disconnect()U=nil end end)end)j:GiveSignal(o.InputChanged:Connect(function(R)if not L.Visible or not(l and l.Parent)then v=false if U and U.Connected then U:Disconnect()U=nil end return end if v and Z(R)then local z=R.Position-b L.Size=UDim2.new(c.X.Scale,math.clamp(c.X.Offset+z.X,j.MinSize.X,math.huge),c.Y.Scale,math.clamp(c.Y.Offset+z.Y,j.MinSize.Y,math.huge))if B then j:SafeCallback(B)end end end))end function j.MakeCover(B,L,R)local z=(m)[R]or{0;0}local b=(M)[R]or{1;.5}local c=u("Frame",{AnchorPoint=Vector2.new((z)[1],(z)[2]);BackgroundColor3=L.BackgroundColor3,Position=UDim2.fromScale((z)[1],(z)[2]),Size=UDim2.fromScale((b)[1],(b)[2]);Parent=L})return c end function j.MakeLine(B,L,R)local z=u("Frame",{AnchorPoint=R.AnchorPoint or Vector2.zero;BackgroundColor3="OutlineColor",Position=R.Position;Size=R.Size;ZIndex=R.ZIndex or 1,Parent=L})return z end function j.MakeOutline(z,L,R,B)local b=u("Frame",{BackgroundColor3="Dark",Position=UDim2.fromOffset(-2,-2),Size=UDim2.new(1,4,1,4);ZIndex=B;Parent=L})local c=u("Frame",{BackgroundColor3="OutlineColor",Position=UDim2.fromOffset(1,1),Size=UDim2.new(1,-2,1,-2),ZIndex=B,Parent=b})if R and R>0 then u("UICorner",{CornerRadius=UDim.new(.03,R+1);Parent=b})u("UICorner",{CornerRadius=UDim.new(.03,R),Parent=c})end return b end function j.AddDraggableButton(B,L,R)local z={}local b=u("TextButton",{BackgroundColor3="BackgroundColor";Position=UDim2.fromOffset(6,6);TextSize=16,ZIndex=10,Parent=l;DPIExclude={Position=true}})u("UICorner",{CornerRadius=UDim.new(0,j.CornerRadius-1),Parent=b})j:MakeOutline(b,j.CornerRadius,9)z.Button=b b.MouseButton1Click:Connect(function()j:SafeCallback(R,z)end)j:MakeDraggable(b,b,true)function z.SetText(R,L)local B,z=j:GetTextBounds(L,j.Scheme.Font,16)b.Text=L b.Size=UDim2.fromOffset((B*j.DPIScale)*2,(z*j.DPIScale)*2)j:UpdateDPI(b,{Size=UDim2.fromOffset(B*2,z*2)})end z:SetText(L)return z end function j.AddDraggableMenu(R,L)local B=j:MakeOutline(l,j.CornerRadius,10)B.AutomaticSize=Enum.AutomaticSize.Y B.Position=UDim2.fromOffset(6,6)B.Size=UDim2.fromOffset(0,0)j:UpdateDPI(B,{Position=false,Size=false})local z=u("Frame",{BackgroundColor3="BackgroundColor",Position=UDim2.fromOffset(2,2),Size=UDim2.new(1,-4,1,-4),Parent=B})u("UICorner",{CornerRadius=UDim.new(.03,j.CornerRadius-1),Parent=z})j:MakeLine(z,{Position=UDim2.fromOffset(0,34);Size=UDim2.new(1,0,0,1)})local b=u("TextLabel",{BackgroundTransparency=1;Size=UDim2.new(1,0,0,34),Text=L,TextSize=15,TextXAlignment=Enum.TextXAlignment.Left;Parent=z})u("UIPadding",{PaddingLeft=UDim.new(0,12),PaddingRight=UDim.new(0,12),Parent=b})local c=u("Frame",{BackgroundTransparency=1,Position=UDim2.fromOffset(0,35),Size=UDim2.new(1,0,1,-35),Parent=z})u("UIListLayout",{Padding=UDim.new(0,7);Parent=c})u("UIPadding",{PaddingBottom=UDim.new(0,7),PaddingLeft=UDim.new(0,7);PaddingRight=UDim.new(0,7);PaddingTop=UDim.new(0,7);Parent=c})j:MakeDraggable(B,b,true)return B,c end do local L=j:MakeOutline(l,j.CornerRadius,10)L.AutomaticSize=Enum.AutomaticSize.Y L.Position=UDim2.fromOffset(6,6)L.Size=UDim2.fromOffset(0,0)L.Visible=false j:UpdateDPI(L,{Position=false;Size=false})local R=u("Frame",{BackgroundColor3="BackgroundColor";Position=UDim2.fromOffset(2,2),Size=UDim2.new(1,-4,1,-4),Parent=L})u("UICorner",{CornerRadius=UDim.new(0,j.CornerRadius-1);Parent=R})local B=u("TextLabel",{BackgroundTransparency=1,Size=UDim2.new(1,0,0,32);Position=UDim2.fromOffset(0,-8*j.DPIScale+7);Text="",TextSize=15;TextXAlignment=Enum.TextXAlignment.Left;Parent=R})u("UIPadding",{PaddingLeft=UDim.new(0,12),PaddingRight=UDim.new(0,12),Parent=B})j:MakeDraggable(L,B,true)local function z()local R,z=j:GetTextBounds(B.Text,j.Scheme.Font,15)L.Size=UDim2.fromOffset((((12+R)+12)+4)*j.DPIScale,(z*j.DPIScale)*2+4)j:UpdateDPI(L,{Size=UDim2.fromOffset(((12+R)+12)+4,z*2+4)})end function j.SetWatermarkVisibility(B,R)L.Visible=R if R then z()end end function j.SetWatermark(R,L)B.Text=L z()end end local bl function j.AddContextMenu(c,L,R,B,z,b)local v if z then v=u("ScrollingFrame",{AutomaticCanvasSize=z==2 and Enum.AutomaticSize.Y or Enum.AutomaticSize.None;AutomaticSize=z==1 and Enum.AutomaticSize.Y or Enum.AutomaticSize.None,BackgroundColor3="BackgroundColor";BorderColor3="OutlineColor";BorderSizePixel=1,BottomImage="rbxasset://textures/ui/Scroll/scroll-middle.png";CanvasSize=UDim2.fromOffset(0,0),ScrollBarImageColor3="OutlineColor",ScrollBarThickness=z==2 and 2 or 0;Size=typeof(R)=="function"and R()or R,TopImage="rbxasset://textures/ui/Scroll/scroll-middle.png",Visible=false;ZIndex=10;Parent=l,DPIExclude={Position=true}})else v=u("Frame",{BackgroundColor3="BackgroundColor",BorderColor3="OutlineColor";BorderSizePixel=1;Size=typeof(R)=="function"and R()or R,Visible=false,ZIndex=10;Parent=l;DPIExclude={Position=true}})end local U={Active=false,Holder=L,Menu=v,List=nil,Signal=nil,Size=R}if z then U.List=u("UIListLayout",{Parent=v})end function U.Open(R)if bl==U then return elseif bl then bl:Close()end bl=U U.Active=true if typeof(B)=="function"then v.Position=UDim2.fromOffset(math.floor(L.AbsolutePosition.X+((B()))[1]),math.floor(L.AbsolutePosition.Y+((B()))[2]))else v.Position=UDim2.fromOffset(math.floor(L.AbsolutePosition.X+(B)[1]),math.floor(L.AbsolutePosition.Y+(B)[2]))end if typeof(U.Size)=="function"then v.Size=U.Size()else v.Size=p(U.Size)end if typeof(b)=="function"then j:SafeCallback(b,true)end v.Visible=true U.Signal=(L:GetPropertyChangedSignal("AbsolutePosition")):Connect(function()if typeof(B)=="function"then v.Position=UDim2.fromOffset(math.floor(L.AbsolutePosition.X+((B()))[1]),math.floor(L.AbsolutePosition.Y+((B()))[2]))else v.Position=UDim2.fromOffset(math.floor(L.AbsolutePosition.X+(B)[1]),math.floor(L.AbsolutePosition.Y+(B)[2]))end end)end function U.Close(L)if bl~=U then return end v.Visible=false if U.Signal then U.Signal:Disconnect()U.Signal=nil end U.Active=false bl=nil if typeof(b)=="function"then j:SafeCallback(b,false)end end function U.Toggle(L)if U.Active then U:Close()else U:Open()end end function U.SetSize(R,L)U.Size=L v.Size=typeof(L)=="function"and L()or L end return U end j:GiveSignal(o.InputBegan:Connect(function(L)if O(L,true)then local R=L.Position if bl and not(j:MouseIsOverFrame(bl.Menu,R)or j:MouseIsOverFrame(bl.Holder,R))then bl:Close()end end end))local cl=u("TextLabel",{BackgroundColor3="BackgroundColor";BorderColor3="OutlineColor",BorderSizePixel=1,TextSize=14,TextWrapped=true,Visible=false,ZIndex=20,Parent=l});(cl:GetPropertyChangedSignal("AbsolutePosition")):Connect(function()local L,R=j:GetTextBounds(cl.Text,cl.FontFace,cl.TextSize,(workspace.CurrentCamera.ViewportSize.X-cl.AbsolutePosition.X)-4)cl.Size=UDim2.fromOffset(L+8*j.DPIScale,R+4*j.DPIScale)j:UpdateDPI(cl,{Size=UDim2.fromOffset(L,R),DPIOffset={Size={8;4}}})end)local vl function j.AddTooltip(z,L,R,B)local b={Disabled=false;Hovering=false;Signals={}}local function c()if vl==B or bl and j:MouseIsOverFrame(bl.Menu,a)or b.Disabled and typeof(R)~="string"or not b.Disabled and typeof(L)~="string"then return end vl=B cl.Text=b.Disabled and R or L cl.Visible=true while j.Toggled and(j:MouseIsOverFrame(B,a)and not(bl and j:MouseIsOverFrame(bl.Menu,a)))do cl.Position=UDim2.fromOffset(a.X+(j.ShowCustomCursor and 8 or 14),a.Y+(j.ShowCustomCursor and 8 or 12))U.RenderStepped:Wait()end cl.Visible=false vl=nil end table.insert(b.Signals,B.MouseEnter:Connect(c))table.insert(b.Signals,B.MouseMoved:Connect(c))table.insert(b.Signals,B.MouseLeave:Connect(function()if vl~=B then return end cl.Visible=false vl=nil end))function b.Destroy(L)for L=#b.Signals,1,-1 do local R=table.remove(b.Signals,L)R:Disconnect()end if vl==B then cl.Visible=false vl=nil end end return b end function j.OnUnload(R,L)table.insert(j.UnloadSignals,L)end function j.Unload(L)for L=#j.Signals,1,-1 do local R=table.remove(j.Signals,L)R:Disconnect()end for L,R in pairs(j.UnloadSignals)do j:SafeCallback(R)end j.Unloaded=true l:Destroy();(s()).Library=nil end local Ul=j:GetIcon("check")local wl=j:GetIcon("chevron-up")local ol=j:GetIcon("move-diagonal-2")local Kl=j:GetIcon("key")local il=j:GetIcon("move")function j.SetIconModule(R,L)A=true C=L Ul=j:GetIcon("check")wl=j:GetIcon("chevron-up")ol=j:GetIcon("move-diagonal-2")Kl=j:GetIcon("key")il=j:GetIcon("move")end local Gl={}do local L={}function L.AddKeyPicker(B,L,R)R=j:Validate(R,k.KeyPicker)local z=B local b=z.TextLabel local c={Text=R.Text,Value=R.Default,Modifiers=R.DefaultModifiers,DisplayValue=R.Default;Toggled=false,Mode=R.Mode;SyncToggleState=R.SyncToggleState;Callback=R.Callback;ChangedCallback=R.ChangedCallback,Changed=R.Changed,Clicked=R.Clicked,Type="KeyPicker"}if c.Mode=="Press"then assert(z.Type=="Label","KeyPicker with the mode 'Press' can be only applied on Labels.")c.SyncToggleState=false R.Modes={"Press"}R.Mode="Press"end if c.SyncToggleState then R.Modes={"Toggle"}R.Mode="Toggle"end local v=false local U={MB1=Enum.UserInputType.MouseButton1;MB2=Enum.UserInputType.MouseButton2;MB3=Enum.UserInputType.MouseButton3}local w={[Enum.UserInputType.MouseButton1]="MB1",[Enum.UserInputType.MouseButton2]="MB2",[Enum.UserInputType.MouseButton3]="MB3"}local K={LAlt=Enum.KeyCode.LeftAlt;RAlt=Enum.KeyCode.RightAlt;LCtrl=Enum.KeyCode.LeftControl;RCtrl=Enum.KeyCode.RightControl,LShift=Enum.KeyCode.LeftShift,RShift=Enum.KeyCode.RightShift;Tab=Enum.KeyCode.Tab,CapsLock=Enum.KeyCode.CapsLock}local i={[Enum.KeyCode.LeftAlt]="LAlt";[Enum.KeyCode.RightAlt]="RAlt",[Enum.KeyCode.LeftControl]="LCtrl",[Enum.KeyCode.RightControl]="RCtrl";[Enum.KeyCode.LeftShift]="LShift";[Enum.KeyCode.RightShift]="RShift";[Enum.KeyCode.Tab]="Tab";[Enum.KeyCode.CapsLock]="CapsLock"}local G=function(L)return L.UserInputType==Enum.UserInputType.Keyboard and(i)[L.KeyCode]~=nil end local s=function()local L={}for R,B in K do local z=false repeat if table.find(L,R)then z=true break end if not o:IsKeyDown(B)then z=true break end table.insert(L,R)z=true until true if not z then break end end return L end local h=function(L)if not(typeof(L)=="table"and Y(L)>0)then return true end local R=s()local B=true for L,z in L do local b=false repeat if table.find(R,z)then b=true break end B=false break until true if not b then break end end return B end local H=function(L)if not L then return false end if(w)[L.UserInputType]~=nil then return o:IsMouseButtonPressed(L.UserInputType)and not o:GetFocusedTextBox()elseif L.UserInputType==Enum.UserInputType.Keyboard then return o:IsKeyDown(L.KeyCode)and not o:GetFocusedTextBox()else return false end end local g=function(L)local R={}for L,B in L do table.insert(R,(K)[B])end return R end local x=function(L)if typeof(L)~="table"then return{}end local R={}for L,B in L do local z=false repeat if not(K)[B]then z=true break end table.insert(R,B)z=true until true if not z then break end end return R end c.Modifiers=x(c.Modifiers)if typeof(c.Value)=="EnumItem"then if c.Value.EnumType==Enum.UserInputType then c.Value=(w)[c.Value]or"Unknown"elseif c.Value.EnumType==Enum.KeyCode then c.Value=c.Value.Name else c.Value=c.Value.Name end c.DisplayValue=c.Value end local a=u("TextButton",{BackgroundColor3="MainColor";BorderColor3="OutlineColor";BorderSizePixel=1,Size=UDim2.fromOffset(18,18),Text=c.Value;TextSize=14,Parent=b})u("UICorner",{CornerRadius=UDim.new(0,5),Parent=a})u("UIStroke",{ApplyStrokeMode=Enum.ApplyStrokeMode.Border;Color=Color3.fromRGB(40,40,40);Parent=a})local J={Normal=c.Mode~="Toggle"}do local L=u("TextButton",{BackgroundTransparency=1,Size=UDim2.new(1,0,0,16),Text="",Visible=not R.NoUI,Parent=j.KeybindContainer})local B=u("TextLabel",{BackgroundTransparency=1;Size=UDim2.fromScale(1,1),Text="";TextSize=14,TextTransparency=.5,Parent=L,DPIExclude={Size=true}})local z=u("Frame",{BackgroundColor3="MainColor",Size=UDim2.fromOffset(14,14);SizeConstraint=Enum.SizeConstraint.RelativeYY;Parent=L})u("UICorner",{CornerRadius=UDim.new(0,5),Parent=z})u("UIStroke",{Color="OutlineColor";Parent=z})local b=u("ImageLabel",{Image=Ul and Ul.Url or"";ImageColor3="FontColor";ImageRectOffset=Ul and Ul.ImageRectOffset or Vector2.zero;ImageRectSize=Ul and Ul.ImageRectSize or Vector2.zero;ImageTransparency=1;Position=UDim2.fromOffset(2,2),Size=UDim2.new(1,-4,1,-4);Parent=z})function J.Display(R,L)B.TextTransparency=L and 0 or.5 b.ImageTransparency=L and 0 or 1 end function J.SetText(R,L)local z=j:GetTextBounds(L,B.FontFace,B.TextSize)B.Text=L B.Size=UDim2.new(0,z,1,0)end function J.SetVisibility(B,R)L.Visible=R end function J.SetNormal(b,R)J.Normal=R L.Active=not R B.Position=R and UDim2.fromOffset(0,0)or UDim2.fromOffset(22*j.DPIScale,0)z.Visible=not R end L.MouseButton1Click:Connect(function()if J.Normal then return end c.Toggled=not c.Toggled c:DoClick()end)J.Holder=L J.Label=B J.Checkbox=z J.Loaded=true table.insert(j.KeybindToggles,J)end local T=j:AddContextMenu(a,UDim2.fromOffset(62,0),function()return{a.AbsoluteSize.X+1.5,.5}end,1)c.Menu=T local y={}for L,R in pairs(R.Modes)do local B={}local z=u("TextButton",{BackgroundColor3="MainColor";BackgroundTransparency=1;Size=UDim2.new(1,0,0,21);Text=R,TextSize=14,TextTransparency=.5;Parent=T.Menu})function B.Select(L)for L,R in pairs(y)do R:Deselect()end c.Mode=R z.BackgroundTransparency=0 z.TextTransparency=0 T:Close()end function B.Deselect(L)c.Mode=nil z.BackgroundTransparency=1 z.TextTransparency=.5 end z.MouseButton1Click:Connect(function()B:Select()end)if c.Mode==R then B:Select()end;(y)[R]=B end function c.Display(R,L)if j.Unloaded then return end local B,z=j:GetTextBounds(L or c.DisplayValue,a.FontFace,a.TextSize,b.AbsoluteSize.X)a.Text=L or c.DisplayValue a.Size=UDim2.fromOffset(B+9*j.DPIScale,z+4*j.DPIScale)end function c.Update(L)c:Display()if R.NoUI then return end if c.Mode=="Toggle"and(z.Type=="Toggle"and z.Disabled)then J:SetVisibility(false)return end local B=c:GetState()local b=j.ShowToggleFrameInKeybinds and c.Mode=="Toggle"if J.Loaded then if b then J:SetNormal(false)else J:SetNormal(true)end J:SetText(("[%s] %s (%s)"):format(c.DisplayValue,c.Text,c.Mode))J:SetVisibility(true)J:Display(B)end j:UpdateKeybindFrame()end function c.GetState(L)if c.Mode=="Always"then return true elseif c.Mode=="Hold"then local L=c.Value if L=="None"then return false end if not h(c.Modifiers)then return false end if(U)[L]~=nil then return o:IsMouseButtonPressed((U)[L])and not o:GetFocusedTextBox()else return o:IsKeyDown((Enum.KeyCode)[L])and not o:GetFocusedTextBox()end else return c.Toggled end end function c.OnChanged(R,L)c.Changed=L end function c.OnClick(R,L)c.Clicked=L end function c.DoClick(L)if c.Mode=="Press"then if c.Toggled and R.WaitForCallback==true then return end c.Toggled=true end if z.Type=="Toggle"and c.SyncToggleState then z:SetValue(c.Toggled)end j:SafeCallback(c.Callback,c.Toggled)j:SafeCallback(c.Clicked,c.Toggled)if c.Mode=="Press"then c.Toggled=false end end function c.SetValue(B,L,R)local z,b,v=(L)[1],(L)[2],(L)[3]local w,o=pcall(function()if z=="None"then z=nil return nil end if(U)[z]==nil then return(Enum.KeyCode)[z]end return(U)[z]end)if z==nil then c.Value="None"elseif w then c.Value=z else c.Value="Unknown"end c.Modifiers=x(((typeof(v)=="table"and{v}or{c.Modifiers}))[1])c.DisplayValue=((Y(c.Modifiers)>0 and{table.concat(c.Modifiers," + ")..(" + "..c.Value)}or{c.Value}))[1]if(y)[b]then(y)[b]:Select()end local K=g(c.Modifiers)j:SafeCallback(c.ChangedCallback,o,K)j:SafeCallback(c.Changed,o,K)c:Update()if not R then task.spawn(function()if d and not d.Loading then d:Save(d:GetAutoloadConfig())end end)end end function c.SetText(R,L)J:SetText(L)c:Update()end a.MouseButton1Click:Connect(function()if v then return end v=true a.Text="..."a.Size=UDim2.fromOffset(29*j.DPIScale,18*j.DPIScale)local L local R={}local B=function()L=o.InputBegan:Wait()if o:GetFocusedTextBox()then return true end end repeat task.wait()a.Text="..."a.Size=UDim2.fromOffset(29*j.DPIScale,18*j.DPIScale)if B()then v=false c:Update()return end if L.KeyCode==Enum.KeyCode.Escape then break end if G(L)then local z=false repeat task.wait()if o:IsKeyDown(L.KeyCode)then task.wait(.075)if o:IsKeyDown(L.KeyCode)then if not table.find(R,(i)[L.KeyCode])then(R)[#R+1]=(i)[L.KeyCode]c:Display(table.concat(R," + ").." + ...")end if B()then z=true break end if L.KeyCode==Enum.KeyCode.Escape then break end if not G(L)then break end else if not table.find(R,(i)[L.KeyCode])then break end end end until false if z then v=false c:Update()return end end break until false local z="Unknown"if(w)[L.UserInputType]~=nil then z=(w)[L.UserInputType]elseif L.UserInputType==Enum.UserInputType.Keyboard then z=L.KeyCode==Enum.KeyCode.Escape and"None"or L.KeyCode.Name end R=(L.KeyCode==Enum.KeyCode.Escape or z=="Unknown")and{}or R c.Toggled=false c:SetValue({z;c.Mode,R})repeat task.wait()until not H(L)or o:GetFocusedTextBox()v=false end)a.MouseButton2Click:Connect(T.Toggle)j:GiveSignal(o.InputBegan:Connect(function(L)if c.Mode=="Always"or c.Value=="Unknown"or c.Value=="None"or v or o:GetFocusedTextBox()then return end local R=c.Value local B=h(c.Modifiers)local z=false if R and(B==true and((w)[L.UserInputType]==R or L.UserInputType==Enum.UserInputType.Keyboard and L.KeyCode.Name==R))then z=true end if c.Mode=="Toggle"then if z then c.Toggled=not c.Toggled c:DoClick()end elseif c.Mode=="Press"then if z then c:DoClick()end end c:Update()end))j:GiveSignal(o.InputEnded:Connect(function()if c.Value=="Unknown"or c.Value=="None"or v or o:GetFocusedTextBox()then return end c:Update()end))c:Update()if z.Addons then table.insert(z.Addons,c)end;(P)[L]=c return B end local R={}for L=0,1,.1 do table.insert(R,ColorSequenceKeypoint.new(L,Color3.fromHSV(L,1,1)))end function L.AddColorPicker(z,L,B)B=j:Validate(B,k.ColorPicker)local b=z local c=b.TextLabel local v={Value=B.Default;Transparency=B.Transparency or 0;Title=B.Title,Callback=B.Callback,Changed=B.Changed;Type="ColorPicker"}v.Hue,v.Sat,v.Vib=v.Value:ToHSV()local w=u("TextButton",{BackgroundColor3=v.Value;BorderColor3=j:GetDarkerColor(v.Value),BorderSizePixel=1,Size=UDim2.fromOffset(18,18),Text="",Parent=c})local o=u("ImageLabel",{Image=N.GetAsset("TransparencyTexture"),ImageTransparency=1-v.Transparency,ScaleType=Enum.ScaleType.Tile,Size=UDim2.fromScale(1,1),TileSize=UDim2.fromOffset(9,9),Parent=w})u("UICorner",{CornerRadius=UDim.new(0,5),Parent=w})u("UIStroke",{ApplyStrokeMode=Enum.ApplyStrokeMode.Border,Color=Color3.fromRGB(40,40,40);Parent=w})local K=j:AddContextMenu(w,UDim2.fromOffset(B.Transparency and 256 or 234,0),function()return{.5;w.AbsoluteSize.Y+1.5}end,1)K.List.Padding=UDim.new(0,8)v.ColorMenu=K u("UIPadding",{PaddingBottom=UDim.new(0,6);PaddingLeft=UDim.new(0,6),PaddingRight=UDim.new(0,6);PaddingTop=UDim.new(0,6);Parent=K.Menu})if typeof(v.Title)=="string"then u("TextLabel",{BackgroundTransparency=1,Size=UDim2.new(1,0,0,8);Text=v.Title;TextSize=14;TextXAlignment=Enum.TextXAlignment.Left;Parent=K.Menu})end local i=u("Frame",{BackgroundTransparency=1,Size=UDim2.new(1,0,0,200),Parent=K.Menu})u("UIListLayout",{FillDirection=Enum.FillDirection.Horizontal,Padding=UDim.new(0,6),Parent=i})local G=u("ImageButton",{BackgroundColor3=v.Value,Image=N.GetAsset("SaturationMap");Size=UDim2.fromOffset(200,200);Parent=i})local s=u("Frame",{AnchorPoint=Vector2.new(.5,.5),BackgroundColor3="White";Size=UDim2.fromOffset(6,6);Parent=G})u("UICorner",{CornerRadius=UDim.new(1,0),Parent=s})u("UIStroke",{Color="Dark",Parent=s})local H=u("TextButton",{Size=UDim2.fromOffset(16,200),Text="",Parent=i})u("UIGradient",{Color=ColorSequence.new(R);Rotation=90;Parent=H})local g=u("Frame",{AnchorPoint=Vector2.new(.5,.5);BackgroundColor3="White",BorderColor3="Dark",BorderSizePixel=1;Position=UDim2.fromScale(.5,v.Hue);Size=UDim2.new(1,2,0,1),Parent=H})local x,J,T if B.Transparency then x=u("ImageButton",{Image=N.GetAsset("TransparencyTexture");ScaleType=Enum.ScaleType.Tile;Size=UDim2.fromOffset(16,200),TileSize=UDim2.fromOffset(8,8),Parent=i})J=u("Frame",{BackgroundColor3=v.Value;Size=UDim2.fromScale(1,1),Parent=x})u("UIGradient",{Rotation=90,Transparency=NumberSequence.new({NumberSequenceKeypoint.new(0,0),NumberSequenceKeypoint.new(1,1)});Parent=J})T=u("Frame",{AnchorPoint=Vector2.new(.5,.5),BackgroundColor3="White",BorderColor3="Dark",BorderSizePixel=1,Position=UDim2.fromScale(.5,v.Transparency),Size=UDim2.new(1,2,0,1),Parent=x})end local y=u("Frame",{BackgroundTransparency=1;Size=UDim2.new(1,0,0,20),Parent=K.Menu})u("UIListLayout",{FillDirection=Enum.FillDirection.Horizontal;HorizontalFlex=Enum.UIFlexAlignment.Fill;Padding=UDim.new(0,8),Parent=y})local m=u("TextBox",{BackgroundColor3="MainColor";BorderColor3="OutlineColor";BorderSizePixel=1;ClearTextOnFocus=false,Size=UDim2.fromScale(1,1);Text="#??????",TextSize=14,Parent=y})local M=u("TextBox",{BackgroundColor3="MainColor";BorderColor3="OutlineColor",BorderSizePixel=1;ClearTextOnFocus=false;Size=UDim2.fromScale(1,1);Text="?, ?, ?";TextSize=14,Parent=y})local p=j:AddContextMenu(w,UDim2.fromOffset(93,0),function()return{w.AbsoluteSize.X+1.5;.5}end,1)v.ContextMenu=p do local function L(L,R)local B=u("TextButton",{BackgroundTransparency=1,Size=UDim2.new(1,0,0,21);Text=L,TextSize=14;Parent=p.Menu})B.MouseButton1Click:Connect(function()j:SafeCallback(R)p:Close()end)end L("Copy color",function()j.CopiedColor={v.Value;v.Transparency}end)L("Paste color",function()v:SetValueRGB((j.CopiedColor)[1],(j.CopiedColor)[2])end)if h then L("Copy Hex",function()h(tostring(v.Value:ToHex()))end)L("Copy RGB",function()h(table.concat({math.floor(v.Value.R*255);math.floor(v.Value.G*255);math.floor(v.Value.B*255)},", "))end)end end function v.SetHSVFromRGB(R,L)v.Hue,v.Sat,v.Vib=L:ToHSV()end function v.Display(L)if j.Unloaded then return end v.Value=Color3.fromHSV(v.Hue,v.Sat,v.Vib)w.BackgroundColor3=v.Value w.BorderColor3=j:GetDarkerColor(v.Value)o.ImageTransparency=1-v.Transparency G.BackgroundColor3=Color3.fromHSV(v.Hue,1,1)if J then J.BackgroundColor3=v.Value end s.Position=UDim2.fromScale(v.Sat,1-v.Vib)g.Position=UDim2.fromScale(.5,v.Hue)if T then T.Position=UDim2.fromScale(.5,v.Transparency)end m.Text="#"..v.Value:ToHex()M.Text=table.concat({math.floor(v.Value.R*255),math.floor(v.Value.G*255);math.floor(v.Value.B*255)},", ")end function v.Update(L)v:Display()j:SafeCallback(v.Callback,v.Value)j:SafeCallback(v.Changed,v.Value)end function v.OnChanged(R,L)v.Changed=L end function v.SetValue(b,L,R,z)local c=Color3.fromHSV((L)[1],(L)[2],(L)[3])v.Transparency=B.Transparency and R or 0 v:SetHSVFromRGB(c)v:Update()if not z then task.spawn(function()if d and not d.Loading then d:Save(d:GetAutoloadConfig())end end)end end function v.SetValueRGB(b,L,R,z)v.Transparency=B.Transparency and R or 0 v:SetHSVFromRGB(L)v:Update()if not z then task.spawn(function()if d and not d.Loading then d:Save(d:GetAutoloadConfig())end end)end end w.MouseButton1Click:Connect(K.Toggle)w.MouseButton2Click:Connect(p.Toggle)G.InputBegan:Connect(function(L)while r(L)do local L=G.AbsolutePosition.X local R=L+G.AbsoluteSize.X local B=math.clamp(a.X,L,R)local z=G.AbsolutePosition.Y local b=z+G.AbsoluteSize.Y local c=math.clamp(a.Y,z,b)local w=v.Sat local o=v.Vib v.Sat=(B-L)/(R-L)v.Vib=1-(c-z)/(b-z)if v.Sat~=w or v.Vib~=o then v:Update()end U.RenderStepped:Wait()end end)H.InputBegan:Connect(function(L)while r(L)do local L=H.AbsolutePosition.Y local R=L+H.AbsoluteSize.Y local B=math.clamp(a.Y,L,R)local z=v.Hue v.Hue=(B-L)/(R-L)if v.Hue~=z then v:Update()end U.RenderStepped:Wait()end end)if x then x.InputBegan:Connect(function(L)while r(L)do local L=x.AbsolutePosition.Y local R=x.AbsolutePosition.Y+x.AbsoluteSize.Y local B=math.clamp(a.Y,L,R)local z=v.Transparency v.Transparency=(B-L)/(R-L)if v.Transparency~=z then v:Update()end U.RenderStepped:Wait()end end)end m.FocusLost:Connect(function(L)if not L then return end local R,B=pcall(Color3.fromHex,m.Text)if R and typeof(B)=="Color3"then v.Hue,v.Sat,v.Vib=B:ToHSV()end v:Update()end)M.FocusLost:Connect(function(L)if not L then return end local R,B,z=M.Text:match("(%d+),%s*(%d+),%s*(%d+)")if R and(B and z)then v:SetHSVFromRGB(Color3.fromRGB(R,B,z))end v:Update()end)v:Display()if b.Addons then table.insert(b.Addons,v)end;(P)[L]=v return z end Gl.__index=L Gl.__namecall=function(R,B,...)return(L)[B](...)end end local sl={}do local L={}function L.AddDivider(L)local R=L local B=R.Container local z=u("Frame",{BackgroundColor3="MainColor";BorderColor3="OutlineColor",BorderSizePixel=1,Size=UDim2.new(1,0,0,2);Parent=B})R:Resize()table.insert(R.Elements,{Holder=z,Type="Divider"})end function L.AddLabel(L,...)local R={}local B={}local z=select(1,...)local b=select(2,...)if typeof(z)=="table"or typeof(b)=="table"then local L=typeof(z)=="table"and z or b R.Text=L.Text or""R.DoesWrap=L.DoesWrap or false R.Size=L.Size or 14 R.Visible=L.Visible or true R.Idx=typeof(b)=="table"and z or nil else R.Text=z or""R.DoesWrap=b or false R.Size=14 R.Visible=true R.Idx=select(3,...)or nil end local c=L local v=c.Container local U={Text=R.Text,DoesWrap=R.DoesWrap;Addons=B,Visible=R.Visible,Type="Label"}local w=u("TextLabel",{BackgroundTransparency=1;Size=UDim2.new(1,0,0,18);Text=U.Text;TextSize=R.Size;TextWrapped=U.DoesWrap;TextXAlignment=c.IsKeyTab and Enum.TextXAlignment.Center or Enum.TextXAlignment.Left,Parent=v})function U.SetVisible(R,L)U.Visible=L w.Visible=U.Visible c:Resize()end function U.SetText(R,L)U.Text=L w.Text=L if U.DoesWrap then local L,R=j:GetTextBounds(U.Text,w.FontFace,w.TextSize,w.AbsoluteSize.X)w.Size=UDim2.new(1,0,0,R+4*j.DPIScale)end c:Resize()end if U.DoesWrap then local L,R=j:GetTextBounds(U.Text,w.FontFace,w.TextSize,w.AbsoluteSize.X)w.Size=UDim2.new(1,0,0,R+4*j.DPIScale)else u("UIListLayout",{FillDirection=Enum.FillDirection.Horizontal,HorizontalAlignment=Enum.HorizontalAlignment.Right;Padding=UDim.new(0,6),Parent=w})end if R.DoesWrap then local L=w.AbsoluteSize;(w:GetPropertyChangedSignal("AbsoluteSize")):Connect(function()if w.AbsoluteSize==L then return end local R,B=j:GetTextBounds(U.Text,w.FontFace,w.TextSize,w.AbsoluteSize.X)w.Size=UDim2.new(1,0,0,B+4*j.DPIScale)L=w.AbsoluteSize c:Resize()end)end c:Resize()U.TextLabel=w U.Container=v if not R.DoesWrap then setmetatable(U,Gl)end U.Holder=w table.insert(c.Elements,U)if R.Idx then(J)[R.Idx]=U else table.insert(J,U)end return U end function L.AddButton(L,...)local function R(...)local L={}local R=select(1,...)local B=select(2,...)if typeof(R)=="table"or typeof(B)=="table"then local z=typeof(R)=="table"and R or B L.Text=z.Text or""L.Func=z.Func or function() end L.DoubleClick=z.DoubleClick L.Tooltip=z.Tooltip L.DisabledTooltip=z.DisabledTooltip L.Risky=z.Risky or false L.Disabled=z.Disabled or false L.Visible=z.Visible or true L.Idx=typeof(B)=="table"and R or nil else L.Text=R or""L.Func=B or function() end L.DoubleClick=false L.Tooltip=nil L.DisabledTooltip=nil L.Risky=false L.Disabled=false L.Visible=true L.Idx=select(3,...)or nil end return L end local B=R(...)local z=L local b=z.Container local c={Text=B.Text,Func=B.Func;DoubleClick=B.DoubleClick,Tooltip=B.Tooltip;DisabledTooltip=B.DisabledTooltip,TooltipTable=nil;Risky=B.Risky;Disabled=B.Disabled;Visible=B.Visible;Tween=nil;Type="Button"}local v=u("Frame",{BackgroundTransparency=1,Size=UDim2.new(1,0,0,21),Parent=b})u("UIListLayout",{FillDirection=Enum.FillDirection.Horizontal;HorizontalFlex=Enum.UIFlexAlignment.Fill;Padding=UDim.new(0,9);Parent=v})local function w(L)local R=u("TextButton",{Active=not L.Disabled;BackgroundColor3=L.Disabled and"BackgroundColor"or"MainColor",Size=UDim2.fromScale(1,1),Text=L.Text,TextSize=14;TextTransparency=.4,Visible=L.Visible;Parent=v})local B=u("UIStroke",{Color="OutlineColor",Transparency=L.Disabled and.5 or 0;Parent=R})u("UICorner",{CornerRadius=UDim.new(0,4),Parent=R})return R,B end local function o(L)L.Base.MouseEnter:Connect(function()if L.Disabled then return end L.Tween=G:Create(L.Base,j.TweenInfo,{TextTransparency=0,BackgroundColor3=Color3.fromRGB(35,22,45)})L.Tween:Play()if L.Stroke then(G:Create(L.Stroke,j.TweenInfo,{Color=Color3.fromRGB(255,128,0);Transparency=.3})):Play()end end)L.Base.MouseLeave:Connect(function()if L.Disabled then return end L.Tween=G:Create(L.Base,j.TweenInfo,{TextTransparency=.4,BackgroundColor3=j.Scheme.MainColor})L.Tween:Play()if L.Stroke then(G:Create(L.Stroke,j.TweenInfo,{Color=j.Scheme.OutlineColor,Transparency=0})):Play()end end)L.Base.MouseButton1Click:Connect(function()if L.Disabled or L.Locked then return end if L.DoubleClick then L.Locked=true L.Base.Text="Are you sure?"L.Base.TextColor3=j.Scheme.AccentColor;(j.Registry)[L.Base].TextColor3="AccentColor"local R=E(L.Base.MouseButton1Click,.5)L.Base.Text=L.Text L.Base.TextColor3=L.Risky and j.Scheme.Red or j.Scheme.FontColor;(j.Registry)[L.Base].TextColor3=L.Risky and"Red"or"FontColor"if R then j:SafeCallback(L.Func)end U.RenderStepped:Wait()L.Locked=false return end j:SafeCallback(L.Func)end)end c.Base,c.Stroke=w(c)o(c)function c.AddButton(L,...)local B=R(...)local b={Text=B.Text,Func=B.Func,DoubleClick=B.DoubleClick;Tooltip=B.Tooltip;DisabledTooltip=B.DisabledTooltip;TooltipTable=nil;Risky=B.Risky;Disabled=B.Disabled,Visible=B.Visible;Tween=nil;Type="SubButton"}c.SubButton=b b.Base,b.Stroke=w(b)o(b)function b.UpdateColors(L)if j.Unloaded then return end t(b.Tween)b.Base.BackgroundColor3=b.Disabled and j.Scheme.BackgroundColor or j.Scheme.MainColor b.Base.TextTransparency=b.Disabled and.8 or.4 b.Stroke.Transparency=b.Disabled and.5 or 0;(j.Registry)[b.Base].BackgroundColor3=b.Disabled and"BackgroundColor"or"MainColor"end function b.SetDisabled(R,L)b.Disabled=L if b.TooltipTable then b.TooltipTable.Disabled=b.Disabled end b.Base.Active=not b.Disabled b:UpdateColors()end function b.SetVisible(R,L)b.Visible=L b.Base.Visible=b.Visible z:Resize()end function b.SetText(R,L)b.Text=L b.Base.Text=L end if typeof(b.Tooltip)=="string"or typeof(b.DisabledTooltip)=="string"then b.TooltipTable=j:AddTooltip(b.Tooltip,b.DisabledTooltip,b.Base)b.TooltipTable.Disabled=b.Disabled end if b.Risky then b.Base.TextColor3=j.Scheme.Red;(j.Registry)[b.Base].TextColor3="Red"end b:UpdateColors()if B.Idx then(T)[B.Idx]=b else table.insert(T,b)end return b end function c.UpdateColors(L)if j.Unloaded then return end t(c.Tween)c.Base.BackgroundColor3=c.Disabled and j.Scheme.BackgroundColor or j.Scheme.MainColor c.Base.TextTransparency=c.Disabled and.8 or.4 c.Stroke.Transparency=c.Disabled and.5 or 0;(j.Registry)[c.Base].BackgroundColor3=c.Disabled and"BackgroundColor"or"MainColor"end function c.SetDisabled(R,L)c.Disabled=L if c.TooltipTable then c.TooltipTable.Disabled=c.Disabled end c.Base.Active=not c.Disabled c:UpdateColors()end function c.SetVisible(R,L)c.Visible=L v.Visible=c.Visible z:Resize()end function c.SetText(R,L)c.Text=L c.Base.Text=L end if typeof(c.Tooltip)=="string"or typeof(c.DisabledTooltip)=="string"then c.TooltipTable=j:AddTooltip(c.Tooltip,c.DisabledTooltip,c.Base)c.TooltipTable.Disabled=c.Disabled end if c.Risky then c.Base.TextColor3=j.Scheme.Red;(j.Registry)[c.Base].TextColor3="Red"end c:UpdateColors()z:Resize()c.Holder=v table.insert(z.Elements,c)if B.Idx then(T)[B.Idx]=c else table.insert(T,c)end return c end function L.AddCheckbox(B,L,R)R=j:Validate(R,k.Toggle)local z=B local b=z.Container local c={Text=R.Text,Value=R.Default,Tooltip=R.Tooltip;DisabledTooltip=R.DisabledTooltip;TooltipTable=nil,Callback=R.Callback,Changed=R.Changed;Risky=R.Risky;Disabled=R.Disabled;Visible=R.Visible,Addons={},Type="Toggle"}local v=u("TextButton",{Active=not c.Disabled;BackgroundTransparency=1;Size=UDim2.new(1,0,0,18),Text="";Visible=c.Visible,Parent=b})local U=u("TextLabel",{BackgroundTransparency=1;Position=UDim2.fromOffset(26,0);Size=UDim2.new(1,-26,1,0),Text=c.Text;TextSize=14;TextTransparency=.4,TextXAlignment=Enum.TextXAlignment.Left;Parent=v})u("UIListLayout",{FillDirection=Enum.FillDirection.Horizontal;HorizontalAlignment=Enum.HorizontalAlignment.Right;Padding=UDim.new(0,6),Parent=U})local w=u("Frame",{BackgroundColor3="MainColor";Size=UDim2.fromScale(1,1);SizeConstraint=Enum.SizeConstraint.RelativeYY;Parent=v})u("UICorner",{CornerRadius=UDim.new(0,j.CornerRadius/2),Parent=w})local o=u("UIStroke",{Color="OutlineColor",Parent=w})local K=u("ImageLabel",{Image=Ul and Ul.Url or"";ImageColor3="FontColor";ImageRectOffset=Ul and Ul.ImageRectOffset or Vector2.zero;ImageRectSize=Ul and Ul.ImageRectSize or Vector2.zero;ImageTransparency=1,Position=UDim2.fromOffset(2,2);Size=UDim2.new(1,-4,1,-4),Parent=w})function c.UpdateColors(L)c:Display()end function c.Display(L)if j.Unloaded then return end o.Transparency=c.Disabled and.5 or 0 if c.Disabled then U.TextTransparency=.8 K.ImageTransparency=c.Value and.8 or 1 w.BackgroundColor3=j.Scheme.BackgroundColor;(j.Registry)[w].BackgroundColor3="BackgroundColor"return end;(G:Create(U,j.TweenInfo,{TextTransparency=c.Value and 0 or.4})):Play();(G:Create(K,j.TweenInfo,{ImageTransparency=c.Value and 0 or 1})):Play()w.BackgroundColor3=j.Scheme.MainColor;(j.Registry)[w].BackgroundColor3="MainColor"end function c.OnChanged(R,L)c.Changed=L end function c.SetValue(B,L,R)if c.Disabled then return end c.Value=L c:Display()for L,R in pairs(c.Addons)do if R.Type=="KeyPicker"and R.SyncToggleState then R.Toggled=c.Value R:Update()end end j:SafeCallback(c.Callback,c.Value)j:SafeCallback(c.Changed,c.Value)j:UpdateDependencyBoxes()if not R then task.spawn(function()if d and not d.Loading then d:Save(d:GetAutoloadConfig())end end)end end function c.SetDisabled(R,L)c.Disabled=L if c.TooltipTable then c.TooltipTable.Disabled=c.Disabled end for L,R in pairs(c.Addons)do if R.Type=="KeyPicker"and R.SyncToggleState then R:Update()end end v.Active=not c.Disabled c:Display()end function c.SetVisible(R,L)c.Visible=L v.Visible=c.Visible z:Resize()end function c.SetText(R,L)c.Text=L U.Text=L end v.MouseButton1Click:Connect(function()if c.Disabled then return end c:SetValue(not c.Value)end)if typeof(c.Tooltip)=="string"or typeof(c.DisabledTooltip)=="string"then c.TooltipTable=j:AddTooltip(c.Tooltip,c.DisabledTooltip,v)c.TooltipTable.Disabled=c.Disabled end if c.Risky then U.TextColor3=j.Scheme.Red;(j.Registry)[U].TextColor3="Red"end c:Display()z:Resize()c.TextLabel=U c.Container=b setmetatable(c,Gl)c.Holder=v table.insert(z.Elements,c);(y)[L]=c return c end function L.AddToggle(z,R,B)if j.ForceCheckbox then return L.AddCheckbox(z,R,B)end B=j:Validate(B,k.Toggle)local b=z local c=b.Container local v={Text=B.Text;Value=B.Default,Tooltip=B.Tooltip;DisabledTooltip=B.DisabledTooltip,TooltipTable=nil;Callback=B.Callback;Changed=B.Changed,Risky=B.Risky,Disabled=B.Disabled;Visible=B.Visible,Addons={};Type="Toggle"}local U=u("TextButton",{Active=not v.Disabled;BackgroundTransparency=1,Size=UDim2.new(1,0,0,18);Text="";Visible=v.Visible;Parent=c})local w=u("TextLabel",{BackgroundTransparency=1,Size=UDim2.new(1,-40,1,0),Text=v.Text;TextSize=14,TextTransparency=.4,TextXAlignment=Enum.TextXAlignment.Left;Parent=U})u("UIListLayout",{FillDirection=Enum.FillDirection.Horizontal;HorizontalAlignment=Enum.HorizontalAlignment.Right;Padding=UDim.new(0,6);Parent=w})local o=u("Frame",{AnchorPoint=Vector2.new(1,0);BackgroundColor3="MainColor";Position=UDim2.fromScale(1,0),Size=UDim2.fromOffset(32,18);Parent=U})u("UICorner",{CornerRadius=UDim.new(1,0);Parent=o})u("UIPadding",{PaddingBottom=UDim.new(0,2);PaddingLeft=UDim.new(0,2),PaddingRight=UDim.new(0,2);PaddingTop=UDim.new(0,2),Parent=o})local K=u("UIStroke",{Color="OutlineColor";Parent=o})local i=u("Frame",{BackgroundColor3="FontColor",Size=UDim2.fromScale(1,1);SizeConstraint=Enum.SizeConstraint.RelativeYY;Parent=o})u("UICorner",{CornerRadius=UDim.new(1,0),Parent=i})function v.UpdateColors(L)v:Display()end function v.Display(L)if j.Unloaded then return end local R=v.Value and 1 or 0 o.BackgroundTransparency=v.Disabled and.75 or 0 K.Transparency=v.Disabled and.75 or 0 o.BackgroundColor3=v.Value and j.Scheme.AccentColor or j.Scheme.MainColor K.Color=v.Value and j.Scheme.AccentColor or j.Scheme.OutlineColor;(j.Registry)[o].BackgroundColor3=v.Value and"AccentColor"or"MainColor";(j.Registry)[K].Color=v.Value and"AccentColor"or"OutlineColor"if v.Disabled then w.TextTransparency=.8 i.AnchorPoint=Vector2.new(R,0)i.Position=UDim2.fromScale(R,0)i.BackgroundColor3=j:GetDarkerColor(j.Scheme.FontColor);(j.Registry)[i].BackgroundColor3=function()return j:GetDarkerColor(j.Scheme.FontColor)end return end;(G:Create(w,j.TweenInfo,{TextTransparency=v.Value and 0 or.4})):Play();(G:Create(i,j.TweenInfo,{AnchorPoint=Vector2.new(R,0),Position=UDim2.fromScale(R,0)})):Play()i.BackgroundColor3=j.Scheme.FontColor;(j.Registry)[i].BackgroundColor3="FontColor"end function v.OnChanged(R,L)v.Changed=L end function v.SetValue(R,L)if v.Disabled then return end v.Value=L v:Display()for L,R in pairs(v.Addons)do if R.Type=="KeyPicker"and R.SyncToggleState then R.Toggled=v.Value R:Update()end end j:SafeCallback(v.Callback,v.Value)j:SafeCallback(v.Changed,v.Value)j:UpdateDependencyBoxes()task.spawn(function()if d and not d.Loading then d:Save(d:GetAutoloadConfig())end end)end function v.SetDisabled(R,L)v.Disabled=L if v.TooltipTable then v.TooltipTable.Disabled=v.Disabled end for L,R in pairs(v.Addons)do if R.Type=="KeyPicker"and R.SyncToggleState then R:Update()end end U.Active=not v.Disabled v:Display()end function v.SetVisible(R,L)v.Visible=L U.Visible=v.Visible b:Resize()end function v.SetText(R,L)v.Text=L w.Text=L end U.MouseButton1Click:Connect(function()if v.Disabled then return end v:SetValue(not v.Value)end)if typeof(v.Tooltip)=="string"or typeof(v.DisabledTooltip)=="string"then v.TooltipTable=j:AddTooltip(v.Tooltip,v.DisabledTooltip,U)v.TooltipTable.Disabled=v.Disabled end if v.Risky then w.TextColor3=j.Scheme.Red;(j.Registry)[w].TextColor3="Red"end v:Display()b:Resize()v.TextLabel=w v.Container=c setmetatable(v,Gl)v.Holder=U table.insert(b.Elements,v);(y)[R]=v return v end function L.AddInput(B,L,R)R=j:Validate(R,k.Input)local z=B local b=z.Container local c={Text=R.Text,Value=R.Default,Finished=R.Finished;Numeric=R.Numeric,ClearTextOnFocus=R.ClearTextOnFocus,Placeholder=R.Placeholder;AllowEmpty=R.AllowEmpty;EmptyReset=R.EmptyReset;Tooltip=R.Tooltip;DisabledTooltip=R.DisabledTooltip;TooltipTable=nil,Callback=R.Callback;Changed=R.Changed;Disabled=R.Disabled,Visible=R.Visible;Type="Input"}local v=u("Frame",{BackgroundTransparency=1;Size=UDim2.new(1,0,0,39),Visible=c.Visible,Parent=b})local U=u("TextLabel",{BackgroundTransparency=1;Size=UDim2.new(1,0,0,14),Text=c.Text;TextSize=14;TextXAlignment=Enum.TextXAlignment.Left;Parent=v})local w=u("TextBox",{AnchorPoint=Vector2.new(0,1);BackgroundColor3="MainColor",BorderColor3="OutlineColor",BorderSizePixel=1;ClearTextOnFocus=not c.Disabled and c.ClearTextOnFocus,PlaceholderText=c.Placeholder;Position=UDim2.fromScale(0,1);Size=UDim2.new(1,0,0,21);Text=c.Value,TextEditable=not c.Disabled,TextScaled=true;TextXAlignment=Enum.TextXAlignment.Left,Parent=v})u("UIPadding",{PaddingBottom=UDim.new(0,3);PaddingLeft=UDim.new(0,8);PaddingRight=UDim.new(0,8),PaddingTop=UDim.new(0,4);Parent=w})u("UIStroke",{ApplyStrokeMode=Enum.ApplyStrokeMode.Border,Color=Color3.fromRGB(40,40,40);Parent=w})u("UICorner",{CornerRadius=UDim.new(0,5);Parent=w})function c.UpdateColors(L)if j.Unloaded then return end U.TextTransparency=c.Disabled and.8 or 0 w.TextTransparency=c.Disabled and.8 or 0 end function c.OnChanged(R,L)c.Changed=L end function c.SetValue(z,L,B)if not c.AllowEmpty and f(L)==""then L=c.EmptyReset end if R.MaxLength and#L>R.MaxLength then L=L:sub(1,R.MaxLength)end if c.Numeric then if#L>0 and not tonumber(L)then L=c.Value end end c.Value=L w.Text=L if not c.Disabled then j:SafeCallback(c.Callback,c.Value)j:SafeCallback(c.Changed,c.Value)end if not B then task.spawn(function()if d and not d.Loading then d:Save(d:GetAutoloadConfig())end end)end end function c.SetDisabled(R,L)c.Disabled=L if c.TooltipTable then c.TooltipTable.Disabled=c.Disabled end w.ClearTextOnFocus=not c.Disabled and c.ClearTextOnFocus w.TextEditable=not c.Disabled c:UpdateColors()end function c.SetVisible(R,L)c.Visible=L v.Visible=c.Visible z:Resize()end function c.SetText(R,L)c.Text=L U.Text=L end if c.Finished then w.FocusLost:Connect(function(L)if not L then return end c:SetValue(w.Text)end)else(w:GetPropertyChangedSignal("Text")):Connect(function()c:SetValue(w.Text)end)end if typeof(c.Tooltip)=="string"or typeof(c.DisabledTooltip)=="string"then c.TooltipTable=j:AddTooltip(c.Tooltip,c.DisabledTooltip,w)c.TooltipTable.Disabled=c.Disabled end z:Resize()c.Holder=v table.insert(z.Elements,c);(P)[L]=c return c end function L.AddSlider(B,L,R)R=j:Validate(R,k.Slider)local z=B local b=z.Container local c={Text=R.Text,Value=R.Default;Min=R.Min,Max=R.Max,Prefix=R.Prefix,Suffix=R.Suffix;Compact=R.Compact,Rounding=R.Rounding;Tooltip=R.Tooltip,DisabledTooltip=R.DisabledTooltip,TooltipTable=nil,Callback=R.Callback;Changed=R.Changed;Disabled=R.Disabled;Visible=R.Visible;Type="Slider"}local v=u("Frame",{BackgroundTransparency=1,Size=UDim2.new(1,0,0,R.Compact and 13 or 31),Visible=c.Visible;Parent=b})local w if not R.Compact then w=u("TextLabel",{BackgroundTransparency=1,Size=UDim2.new(1,0,0,14),Text=c.Text,TextSize=14;TextXAlignment=Enum.TextXAlignment.Left,Parent=v})end local o=u("TextButton",{Active=not c.Disabled;AnchorPoint=Vector2.new(0,1);BackgroundColor3="MainColor",BorderColor3="OutlineColor",BorderSizePixel=1;Position=UDim2.fromScale(0,1),Size=UDim2.new(1,0,0,13),Text="";Parent=v})u("UICorner",{CornerRadius=UDim.new(0,4),Parent=o})u("UIStroke",{ApplyStrokeMode=Enum.ApplyStrokeMode.Border;Color=Color3.fromRGB(40,40,40);Parent=o})local K=u("TextLabel",{BackgroundTransparency=1;Size=UDim2.fromScale(1,1),Text="",TextSize=14,ZIndex=2,Parent=o})u("UIStroke",{ApplyStrokeMode=Enum.ApplyStrokeMode.Contextual,Color="Dark",LineJoinMode=Enum.LineJoinMode.Miter;Parent=K})local i=u("Frame",{BackgroundColor3="AccentColor";Size=UDim2.fromScale(.5,1);Parent=o;DPIExclude={Size=true}})u("UICorner",{CornerRadius=UDim.new(0,5),Parent=i})function c.UpdateColors(L)if j.Unloaded then return end if w then w.TextTransparency=c.Disabled and.8 or 0 end K.TextTransparency=c.Disabled and.8 or 0 i.BackgroundColor3=c.Disabled and j.Scheme.OutlineColor or j.Scheme.AccentColor;(j.Registry)[i].BackgroundColor3=c.Disabled and"OutlineColor"or"AccentColor"end function c.Display(L)if j.Unloaded then return end local B=nil if R.FormatDisplayValue then B=R.FormatDisplayValue(c,c.Value)end if B then K.Text=tostring(B)else if R.Compact then K.Text=string.format("%s: %s%s%s",c.Text,c.Prefix,c.Value,c.Suffix)elseif R.HideMax then K.Text=string.format("%s%s%s",c.Prefix,c.Value,c.Suffix)else K.Text=string.format("%s%s%s/%s%s%s",c.Prefix,c.Value,c.Suffix,c.Prefix,c.Max,c.Suffix)end end local z=(c.Value-c.Min)/(c.Max-c.Min)i.Size=UDim2.fromScale(z,1)end function c.OnChanged(R,L)c.Changed=L end function c.SetMax(R,L)assert(L>c.Min,"Max value cannot be less than the current min value.")c:SetValue(math.clamp(c.Value,c.Min,L))c.Max=L c:Display()end function c.SetMin(R,L)assert(L<c.Max,"Min value cannot be greater than the current max value.")c:SetValue(math.clamp(c.Value,L,c.Max))c.Min=L c:Display()end function c.SetValue(B,L,R)if c.Disabled then return end local z=tonumber(L)if not z or z==c.Value then return end z=math.clamp(z,c.Min,c.Max)c.Value=z c:Display()j:SafeCallback(c.Callback,c.Value)j:SafeCallback(c.Changed,c.Value)if not R then task.spawn(function()if d and not d.Loading then d:Save(d:GetAutoloadConfig())end end)end end function c.SetDisabled(R,L)c.Disabled=L if c.TooltipTable then c.TooltipTable.Disabled=c.Disabled end o.Active=not c.Disabled c:UpdateColors()end function c.SetVisible(R,L)c.Visible=L v.Visible=c.Visible z:Resize()end function c.SetText(R,L)c.Text=L if w then w.Text=L return end c:Display()end function c.SetPrefix(R,L)c.Prefix=L c:Display()end function c.SetSuffix(R,L)c.Suffix=L c:Display()end o.InputBegan:Connect(function(L)if not O(L)or c.Disabled then return end for L,R in pairs(j.ActiveTab.Sides)do R.ScrollingEnabled=false end while r(L)do local L=a.X local R=math.clamp((L-o.AbsolutePosition.X)/o.AbsoluteSize.X,0,1)local B=c.Value c.Value=V(c.Min+(c.Max-c.Min)*R,c.Rounding)c:Display()if c.Value~=B then j:SafeCallback(c.Callback,c.Value)j:SafeCallback(c.Changed,c.Value)task.spawn(function()if d and not d.Loading then d:Save(d:GetAutoloadConfig())end end)end U.RenderStepped:Wait()end for L,R in pairs(j.ActiveTab.Sides)do R.ScrollingEnabled=true end end)if typeof(c.Tooltip)=="string"or typeof(c.DisabledTooltip)=="string"then c.TooltipTable=j:AddTooltip(c.Tooltip,c.DisabledTooltip,o)c.TooltipTable.Disabled=c.Disabled end c:UpdateColors()c:Display()z:Resize()c.Holder=v table.insert(z.Elements,c);(P)[L]=c return c end function L.AddDropdown(B,L,R)R=j:Validate(R,k.Dropdown)local z=B local b=z.Container if R.SpecialType=="Player"then R.Values=S(R.ExcludeLocalPlayer)R.AllowNull=true elseif R.SpecialType=="Team"then R.Values=I()R.AllowNull=true end local c={Text=typeof(R.Text)=="string"and R.Text or nil,Value=R.Multi and{}or nil,Values=R.Values;DisabledValues=R.DisabledValues,Multi=R.Multi,SpecialType=R.SpecialType,ExcludeLocalPlayer=R.ExcludeLocalPlayer,Tooltip=R.Tooltip;DisabledTooltip=R.DisabledTooltip,TooltipTable=nil,Callback=R.Callback;Changed=R.Changed;Disabled=R.Disabled,Visible=R.Visible,Type="Dropdown"}local v=u("Frame",{BackgroundTransparency=1;Size=UDim2.new(1,0,0,c.Text and 39 or 21);Visible=c.Visible,Parent=b})local U=u("TextLabel",{BackgroundTransparency=1;Size=UDim2.new(1,0,0,14);Text=c.Text,TextSize=14;TextXAlignment=Enum.TextXAlignment.Left;Visible=not(not R.Text);Parent=v})local w=u("TextButton",{Active=not c.Disabled;AnchorPoint=Vector2.new(0,1),BackgroundColor3="MainColor";BorderColor3="OutlineColor",BorderSizePixel=1;Position=UDim2.fromScale(0,1),Size=UDim2.new(1,0,0,21);Text="---",TextSize=14;TextXAlignment=Enum.TextXAlignment.Left;Parent=v})u("UIPadding",{PaddingLeft=UDim.new(0,8);PaddingRight=UDim.new(0,4);Parent=w})u("UICorner",{CornerRadius=UDim.new(0,5);Parent=w})u("UIStroke",{ApplyStrokeMode=Enum.ApplyStrokeMode.Border;Color=Color3.fromRGB(40,40,40);Parent=w})local o=u("ImageLabel",{AnchorPoint=Vector2.new(1,.5),Image=wl and wl.Url or"",ImageColor3="FontColor",ImageRectOffset=wl and wl.ImageRectOffset or Vector2.zero;ImageRectSize=wl and wl.ImageRectSize or Vector2.zero,ImageTransparency=.5;Position=UDim2.fromScale(1,.5);Size=UDim2.fromOffset(16,16);Parent=w})local K if R.Searchable then K=u("TextBox",{BackgroundTransparency=1;PlaceholderText="Search...",Position=UDim2.fromOffset(-8,0),Size=UDim2.new(1,-12,1,0);TextSize=14;TextXAlignment=Enum.TextXAlignment.Left;Visible=false,Parent=w})u("UIPadding",{PaddingLeft=UDim.new(0,8),Parent=K})end local i=j:AddContextMenu(w,function()return UDim2.fromOffset(w.AbsoluteSize.X,0)end,function()return{.5,w.AbsoluteSize.Y+1.5}end,2,function(L)w.TextTransparency=(L and K)and 1 or 0 o.ImageTransparency=L and 0 or.5 o.Rotation=L and 180 or 0 if K then K.Text=""K.Visible=L end end)c.Menu=i j:UpdateDPI(i.Menu,{Position=false;Size=false})function c.RecalculateListSize(B,L)local z=math.clamp((L or Y(c.Values))*(21*j.DPIScale),0,R.MaxVisibleDropdownItems*(21*j.DPIScale))i:SetSize(function()return UDim2.fromOffset(w.AbsoluteSize.X,z)end)end function c.UpdateColors(L)if j.Unloaded then return end U.TextTransparency=c.Disabled and.8 or 0 w.TextTransparency=c.Disabled and.8 or 0 o.ImageTransparency=c.Disabled and.8 or i.Active and 0 or.5 end function c.Display(L)if j.Unloaded then return end local B=""if R.Multi then for L,z in pairs(c.Values)do if(c.Value)[z]then B=B..((R.FormatDisplayValue and tostring(R.FormatDisplayValue(z))or tostring(z))..", ")end end B=B:sub(1,#B-2)else B=c.Value and tostring(c.Value)or""if B~=""and R.FormatDisplayValue then B=tostring(R.FormatDisplayValue(B))end end if#B>25 then B=B:sub(1,22).."..."end w.Text=B==""and"---"or B end function c.OnChanged(R,L)c.Changed=L end function c.GetActiveValues(L)if R.Multi then local L={}for R,B in pairs(c.Value)do table.insert(L,R)end return L end return c.Value and 1 or 0 end local G={}function c.BuildDropdownList(L)local B=c.Values local z=c.DisabledValues for L,R in pairs(G)do L:Destroy()end table.clear(G)local b=0 for L,B in pairs(B)do local v=false repeat if K and not((tostring(B)):lower()):match(K.Text:lower())then v=true break end b=b+1 local L=table.find(z,B)local U={}local w=u("TextButton",{BackgroundColor3="MainColor";BackgroundTransparency=1;LayoutOrder=L and 1 or 0;Size=UDim2.new(1,0,0,21),Text=tostring(B),TextSize=14;TextTransparency=.5;TextXAlignment=Enum.TextXAlignment.Left,Parent=i.Menu})u("UIPadding",{PaddingLeft=UDim.new(0,7),PaddingRight=UDim.new(0,7);Parent=w})local o if R.Multi then o=(c.Value)[B]else o=c.Value==B end function U.UpdateButton(z)if R.Multi then o=(c.Value)[B]else o=c.Value==B end w.BackgroundTransparency=o and 0 or 1 w.TextTransparency=L and.8 or o and 0 or.5 end if not L then w.MouseButton1Click:Connect(function()local L=not o if not(c:GetActiveValues()==1 and(not L and not R.AllowNull))then o=L if R.Multi then(c.Value)[B]=o and true or nil else c.Value=o and B or nil end for L,R in pairs(G)do R:UpdateButton()end end U:UpdateButton()c:Display()j:SafeCallback(c.Callback,c.Value)j:SafeCallback(c.Changed,c.Value)j:UpdateDependencyBoxes()task.spawn(function()if d and not d.Loading then d:Save(d:GetAutoloadConfig())end end)end)end U:UpdateButton()c:Display();(G)[w]=U v=true until true if not v then break end end c:RecalculateListSize(b)end function c.SetValue(z,L,B)if R.Multi then local R={}for L,B in pairs(L or{})do if B and table.find(c.Values,L)then(R)[L]=true end end c.Value=R else if table.find(c.Values,L)then c.Value=L elseif not L then c.Value=nil end end c:Display()for L,R in pairs(G)do R:UpdateButton()end if not c.Disabled then j:SafeCallback(c.Callback,c.Value)j:SafeCallback(c.Changed,c.Value)j:UpdateDependencyBoxes()end if not B then task.spawn(function()if d and not d.Loading then d:Save(d:GetAutoloadConfig())end end)end end function c.SetValues(R,L)c.Values=L c:BuildDropdownList()end function c.AddValues(R,L)if typeof(L)=="table"then for L,R in pairs(L)do table.insert(c.Values,R)end elseif typeof(L)=="string"then table.insert(c.Values,L)else return end c:BuildDropdownList()end function c.SetDisabledValues(R,L)c.DisabledValues=L c:BuildDropdownList()end function c.AddDisabledValues(R,L)if typeof(L)=="table"then for L,R in pairs(L)do table.insert(c.DisabledValues,R)end elseif typeof(L)=="string"then table.insert(c.DisabledValues,L)else return end c:BuildDropdownList()end function c.SetDisabled(R,L)c.Disabled=L if c.TooltipTable then c.TooltipTable.Disabled=c.Disabled end i:Close()w.Active=not c.Disabled c:UpdateColors()end function c.SetVisible(R,L)c.Visible=L v.Visible=c.Visible z:Resize()end function c.SetText(R,L)c.Text=L v.Size=UDim2.new(1,0,0,(L and 39 or 21)*j.DPIScale)U.Text=L and L or""U.Visible=not(not L)end w.MouseButton1Click:Connect(function()if c.Disabled then return end i:Toggle()end)if K then(K:GetPropertyChangedSignal("Text")):Connect(c.BuildDropdownList)end local s={}if typeof(R.Default)=="string"then local L=table.find(c.Values,R.Default)if L then table.insert(s,L)end elseif typeof(R.Default)=="table"then for L,R in next,R.Default do local B=table.find(c.Values,R)if B then table.insert(s,B)end end elseif(c.Values)[R.Default]~=nil then table.insert(s,R.Default)end if next(s)then for L=1,#s,1 do local B=(s)[L]if R.Multi then(c.Value)[(c.Values)[B]]=true else c.Value=(c.Values)[B]end if not R.Multi then break end end end if typeof(c.Tooltip)=="string"or typeof(c.DisabledTooltip)=="string"then c.TooltipTable=j:AddTooltip(c.Tooltip,c.DisabledTooltip,w)c.TooltipTable.Disabled=c.Disabled end c:UpdateColors()c:Display()c:BuildDropdownList()z:Resize()c.Holder=v table.insert(z.Elements,c);(P)[L]=c return c end function L.AddViewport(B,L,R)R=j:Validate(R,k.Viewport)local z=B local b=z.Container local c,v=false,false local U,w=nil,0 local K=R.Object if R.Clone and typeof(R.Object)=="Instance"then if R.Object.Archivable then K=K:Clone()else R.Object.Archivable=true K=K:Clone()R.Object.Archivable=false end end local i={Object=K,Camera=((not R.Camera and{Instance.new("Camera")}or{R.Camera}))[1],Interactive=R.Interactive;AutoFocus=R.AutoFocus,Visible=R.Visible;Type="Viewport"}assert(typeof(i.Object)=="Instance"and(i.Object:IsA("BasePart")or i.Object:IsA("Model")),"Instance must be a BasePart or Model.")assert(typeof(i.Camera)=="Instance"and i.Camera:IsA("Camera"),"Camera must be a valid Camera instance.")local function G(L)if L:IsA("BasePart")then return L.Size end return select(2,L:GetBoundingBox())end local function s()local L=G(i.Object)local R=math.max(L.X,L.Y,L.Z)local B=R*2 local z=(i.Object:GetPivot()).Position i.Camera.CFrame=CFrame.new(z+Vector3.new(0,R/2,B),z)end local h=u("Frame",{BackgroundTransparency=1,Size=UDim2.new(1,0,0,R.Height);Visible=i.Visible;Parent=b})local H=u("Frame",{AnchorPoint=Vector2.new(0,1),BackgroundColor3="MainColor";BorderColor3="OutlineColor",BorderSizePixel=1;Position=UDim2.fromScale(0,1);Size=UDim2.fromScale(1,1);Parent=h})u("UIPadding",{PaddingBottom=UDim.new(0,3);PaddingLeft=UDim.new(0,8);PaddingRight=UDim.new(0,8),PaddingTop=UDim.new(0,4),Parent=H})local g=u("ViewportFrame",{BackgroundTransparency=1,Size=UDim2.fromScale(1,1),Parent=H,CurrentCamera=i.Camera;Active=i.Interactive})g.MouseEnter:Connect(function()if not i.Interactive then return end for L,R in pairs(z.Tab.Sides)do R.ScrollingEnabled=false end end)g.MouseLeave:Connect(function()if not i.Interactive then return end for L,R in pairs(z.Tab.Sides)do R.ScrollingEnabled=true end end)g.InputBegan:Connect(function(L)if not i.Interactive then return end if L.UserInputType==Enum.UserInputType.MouseButton2 then c=true U=L.Position elseif L.UserInputType==Enum.UserInputType.Touch and not v then c=true U=L.Position end end)j:GiveSignal(o.InputEnded:Connect(function(L)if not i.Interactive then return end if L.UserInputType==Enum.UserInputType.MouseButton2 then c=false elseif L.UserInputType==Enum.UserInputType.Touch then c=false end end))j:GiveSignal(o.InputChanged:Connect(function(L)if not i.Interactive or not c or v then return end if L.UserInputType==Enum.UserInputType.MouseMovement or L.UserInputType==Enum.UserInputType.Touch then local R=L.Position-U U=L.Position local B=(i.Object:GetPivot()).Position local z=i.Camera local b=CFrame.fromAxisAngle(Vector3.new(0,1,0),-R.X*.01)z.CFrame=((CFrame.new(B)*b)*CFrame.new(-B))*z.CFrame local c=CFrame.fromAxisAngle(z.CFrame.RightVector,-R.Y*.01)local v=((CFrame.new(B)*c)*CFrame.new(-B))*z.CFrame if v.UpVector.Y>.1 then z.CFrame=v end end end))g.InputChanged:Connect(function(L)if not i.Interactive then return end if L.UserInputType==Enum.UserInputType.MouseWheel then local R=L.Position.Z*2 do local L=i.Camera L.CFrame=L.CFrame+i.Camera.CFrame.LookVector*R end end end)j:GiveSignal(o.TouchPinch:Connect(function(L,R,B,z)if not i.Interactive or not j:MouseIsOverFrame(g,(L)[1])then return end if z==Enum.UserInputState.Begin then v=true c=false w=((L)[1]-(L)[2]).Magnitude elseif z==Enum.UserInputState.Change then local R=((L)[1]-(L)[2]).Magnitude local B=(R-w)*.1 w=R do local L=i.Camera L.CFrame=L.CFrame+i.Camera.CFrame.LookVector*B end elseif z==Enum.UserInputState.End or z==Enum.UserInputState.Cancel then v=false end end))i.Object.Parent=g if i.AutoFocus then s()end function i.SetObject(B,L,R)assert(L,"Object cannot be nil.")if R then L=L:Clone()end if i.Object then i.Object:Destroy()end i.Object=L i.Object.Parent=g z:Resize()end function i.SetHeight(R,L)assert(L>0,"Height must be greater than 0.")h.Size=UDim2.new(1,0,0,L)z:Resize()end function i.Focus(L)if not i.Object then return end s()end function i.SetCamera(R,L)assert(L and(typeof(L)=="Instance"and L:IsA("Camera")),"Camera must be a valid Camera instance.")i.Camera=L g.CurrentCamera=L end function i.SetInteractive(R,L)i.Interactive=L g.Active=L end function i.SetVisible(R,L)i.Visible=L h.Visible=i.Visible z:Resize()end z:Resize()i.Holder=h table.insert(z.Elements,i);(P)[L]=i return i end function L.AddImage(B,L,R)R=j:Validate(R,k.Image)local z=B local b=z.Container local c={Image=R.Image,Color=R.Color,RectOffset=R.RectOffset;RectSize=R.RectSize,Height=R.Height,ScaleType=R.ScaleType;Transparency=R.Transparency;Visible=R.Visible,Type="Image"}local v=u("Frame",{BackgroundTransparency=1,Size=UDim2.new(1,0,0,R.Height);Visible=c.Visible;Parent=b})local U=u("Frame",{AnchorPoint=Vector2.new(0,1),BackgroundColor3="MainColor";BorderColor3="OutlineColor",BorderSizePixel=1,Position=UDim2.fromScale(0,1);Size=UDim2.fromScale(1,1);Parent=v})u("UIPadding",{PaddingBottom=UDim.new(0,3);PaddingLeft=UDim.new(0,8),PaddingRight=UDim.new(0,8);PaddingTop=UDim.new(0,4);Parent=U})local w={BackgroundTransparency=1,Size=UDim2.fromScale(1,1);Image=c.Image;ImageTransparency=c.Transparency,ImageColor3=c.Color,ImageRectOffset=c.RectOffset;ImageRectSize=c.RectSize;ScaleType=c.ScaleType;Parent=U}local o=j:GetCustomIcon(w.Image)assert(o,"Image must be a valid Roblox asset or a valid URL or a valid lucide icon.")w.Image=o.Url w.ImageRectOffset=o.ImageRectOffset w.ImageRectSize=o.ImageRectSize local K=u("ImageLabel",w)function c.SetHeight(R,L)assert(L>0,"Height must be greater than 0.")c.Height=L v.Size=UDim2.new(1,0,0,L)z:Resize()end function c.SetImage(R,L)assert(typeof(L)=="string","Image must be a string.")local B=j:GetCustomIcon(L)assert(B,"Image must be a valid Roblox asset or a valid URL or a valid lucide icon.")L=B.Url c.RectOffset=B.ImageRectOffset c.RectSize=B.ImageRectSize K.Image=L c.Image=L end function c.SetColor(R,L)assert(typeof(L)=="Color3","Color must be a Color3 value.")K.ImageColor3=L c.Color=L end function c.SetRectOffset(R,L)assert(typeof(L)=="Vector2","RectOffset must be a Vector2 value.")K.ImageRectOffset=L c.RectOffset=L end function c.SetRectSize(R,L)assert(typeof(L)=="Vector2","RectSize must be a Vector2 value.")K.ImageRectSize=L c.RectSize=L end function c.SetScaleType(R,L)assert(typeof(L)=="EnumItem"and L:IsA("ScaleType"),"ScaleType must be a valid Enum.ScaleType.")K.ScaleType=L c.ScaleType=L end function c.SetTransparency(R,L)assert(typeof(L)=="number","Transparency must be a number between 0 and 1.")assert(L>=0 and L<=1,"Transparency must be between 0 and 1.")K.ImageTransparency=L c.Transparency=L end function c.SetVisible(R,L)c.Visible=L v.Visible=c.Visible z:Resize()end z:Resize()c.Holder=v table.insert(z.Elements,c);(P)[L]=c return c end function L.AddVideo(B,L,R)R=j:Validate(R,k.Video)local z=B local b=z.Container local c={Video=R.Video,Looped=R.Looped,Playing=R.Playing;Volume=R.Volume,Height=R.Height,Visible=R.Visible,Type="Video"}local v=u("Frame",{BackgroundTransparency=1;Size=UDim2.new(1,0,0,R.Height),Visible=c.Visible;Parent=b})local U=u("Frame",{AnchorPoint=Vector2.new(0,1);BackgroundColor3="MainColor",BorderColor3="OutlineColor",BorderSizePixel=1;Position=UDim2.fromScale(0,1),Size=UDim2.fromScale(1,1),Parent=v})u("UIPadding",{PaddingBottom=UDim.new(0,3);PaddingLeft=UDim.new(0,8),PaddingRight=UDim.new(0,8);PaddingTop=UDim.new(0,4);Parent=U})local w=u("VideoFrame",{BackgroundTransparency=1;Size=UDim2.fromScale(1,1);Video=c.Video;Looped=c.Looped,Volume=c.Volume;Parent=U})w.Playing=c.Playing function c.SetHeight(R,L)assert(L>0,"Height must be greater than 0.")c.Height=L v.Size=UDim2.new(1,0,0,L)z:Resize()end function c.SetVideo(R,L)assert(typeof(L)=="string","Video must be a string.")w.Video=L c.Video=L end function c.SetLooped(R,L)assert(typeof(L)=="boolean","Looped must be a boolean.")w.Looped=L c.Looped=L end function c.SetVolume(R,L)assert(typeof(L)=="number","Volume must be a number between 0 and 10.")w.Volume=L c.Volume=L end function c.SetPlaying(R,L)assert(typeof(L)=="boolean","Playing must be a boolean.")w.Playing=L c.Playing=L end function c.Play(L)w.Playing=true c.Playing=true end function c.Pause(L)w.Playing=false c.Playing=false end function c.SetVisible(R,L)c.Visible=L v.Visible=c.Visible z:Resize()end z:Resize()c.Holder=v c.VideoFrame=w table.insert(z.Elements,c);(P)[L]=c return c end function L.AddUIPassthrough(B,L,R)R=j:Validate(R,k.UIPassthrough)local z=B local b=z.Container assert(R.Instance,"Instance must be provided.")assert(typeof(R.Instance)=="Instance"and R.Instance:IsA("GuiBase2d"),"Instance must inherit from GuiBase2d.")assert(typeof(R.Height)=="number"and R.Height>0,"Height must be a number greater than 0.")local c={Instance=R.Instance,Height=R.Height,Visible=R.Visible;Type="UIPassthrough"}local v=u("Frame",{BackgroundTransparency=1,Size=UDim2.new(1,0,0,R.Height);Visible=c.Visible,Parent=b})c.Instance.Parent=v z:Resize()function c.SetHeight(R,L)assert(typeof(L)=="number"and L>0,"Height must be a number greater than 0.")c.Height=L v.Size=UDim2.new(1,0,0,L)z:Resize()end function c.SetInstance(R,L)assert(L,"Instance must be provided.")assert(typeof(L)=="Instance"and L:IsA("GuiBase2d"),"Instance must inherit from GuiBase2d.")if c.Instance then c.Instance.Parent=nil end c.Instance=L c.Instance.Parent=v end function c.SetVisible(R,L)c.Visible=L v.Visible=c.Visible z:Resize()end c.Holder=v table.insert(z.Elements,c);(P)[L]=c return c end function L.AddDependencyBox(L)local R=L local B=R.Container local z local b do z=u("Frame",{BackgroundTransparency=1,Size=UDim2.fromScale(1,1);Visible=false,Parent=B})b=u("UIListLayout",{Padding=UDim.new(0,8);Parent=z})end local c={Visible=false,Dependencies={};Holder=z,Container=z;Elements={};DependencyBoxes={}}function c.Resize(L)z.Size=UDim2.new(1,0,0,b.AbsoluteContentSize.Y*j.DPIScale)R:Resize()end function c.Update(R,L)for L,R in pairs(c.Dependencies)do local B=(R)[1]local b=(R)[2]if B.Type=="Toggle"and B.Value~=b then z.Visible=false c.Visible=false return elseif B.Type=="Dropdown"then if typeof(B.Value)=="table"then if not(B.Value)[b]then z.Visible=false c.Visible=false return end else if B.Value~=b then z.Visible=false c.Visible=false return end end end end c.Visible=true z.Visible=true if not j.Searching then c:Resize()elseif not L then j:UpdateSearch(j.SearchText)end end function c.SetupDependencies(R,L)for L,R in pairs(L)do assert(typeof(R)=="table","Dependency should be a table.")assert((R)[1]~=nil,"Dependency is missing element.")assert((R)[2]~=nil,"Dependency is missing expected value.")end c.Dependencies=L c:Update()end;(z:GetPropertyChangedSignal("Visible")):Connect(function()c:Resize()end)setmetatable(c,sl)table.insert(R.DependencyBoxes,c)table.insert(j.DependencyBoxes,c)return c end function L.AddDependencyGroupbox(L)local R=L local B=R.Tab local z=R.BoxHolder local b=j:MakeOutline(z,j.CornerRadius)b.Size=UDim2.fromScale(1,0)b.Visible=false j:UpdateDPI(b,{Size=false})local c local v do c=u("Frame",{BackgroundColor3="BackgroundColor",Position=UDim2.fromOffset(2,2),Size=UDim2.new(1,-4,1,-4);Parent=b})u("UICorner",{CornerRadius=UDim.new(0,j.CornerRadius-1);Parent=c})v=u("UIListLayout",{Padding=UDim.new(0,8),Parent=c})u("UIPadding",{PaddingBottom=UDim.new(0,7),PaddingLeft=UDim.new(0,7),PaddingRight=UDim.new(0,7),PaddingTop=UDim.new(0,7);Parent=c})end local U={Visible=false;Dependencies={};BoxHolder=z;Holder=b,Container=c;Tab=B,Elements={},DependencyBoxes={}}function U.Resize(L)b.Size=UDim2.new(1,0,0,v.AbsoluteContentSize.Y+18*j.DPIScale)end function U.Update(R,L)for L,R in pairs(U.Dependencies)do local B=(R)[1]local z=(R)[2]if B.Type=="Toggle"and B.Value~=z then b.Visible=false U.Visible=false return elseif B.Type=="Dropdown"then if typeof(B.Value)=="table"then if not(B.Value)[z]then b.Visible=false U.Visible=false return end else if B.Value~=z then b.Visible=false U.Visible=false return end end end end U.Visible=true if not j.Searching then b.Visible=true U:Resize()elseif not L then j:UpdateSearch(j.SearchText)end end function U.SetupDependencies(R,L)for L,R in pairs(L)do assert(typeof(R)=="table","Dependency should be a table.")assert((R)[1]~=nil,"Dependency is missing element.")assert((R)[2]~=nil,"Dependency is missing expected value.")end U.Dependencies=L U:Update()end setmetatable(U,sl)table.insert(B.DependencyGroupboxes,U)table.insert(j.DependencyBoxes,U)return U end sl.__index=L sl.__namecall=function(R,B,...)return(L)[B](...)end end function j.SetFont(R,L)if typeof(L)=="EnumItem"then L=Font.fromEnum(L)end j.Scheme.Font=L j:UpdateColorsUsingRegistry()end function j.SetNotifySide(R,L)j.NotifySide=L if L:lower()=="left"then Bl.AnchorPoint=Vector2.new(0,0)Bl.Position=UDim2.fromOffset(6,6)zl.HorizontalAlignment=Enum.HorizontalAlignment.Left else Bl.AnchorPoint=Vector2.new(1,0)Bl.Position=UDim2.new(1,-6,0,6)zl.HorizontalAlignment=Enum.HorizontalAlignment.Right end end function j.Notify(L,...)local R={}local B=select(1,...)if typeof(B)=="table"then R.Title=tostring(B.Title)R.Description=tostring(B.Description)R.Time=B.Time or 5 R.SoundId=B.SoundId R.Steps=B.Steps R.Persist=B.Persist else R.Description=tostring(B)R.Time=select(2,...)or 5 R.SoundId=select(3,...)end R.Destroyed=false local z=false local b=nil if typeof(R.Time)=="Instance"then b=R.Time.Destroying:Connect(function()z=true b:Disconnect()b=nil end)end local c=u("Frame",{AutomaticSize=Enum.AutomaticSize.Y;BackgroundTransparency=1,Size=UDim2.fromScale(1,0);Visible=false,Parent=Bl,DPIExclude={Size=true}})local v=j:MakeOutline(c,j.CornerRadius,5)v.AutomaticSize=Enum.AutomaticSize.Y v.Position=j.NotifySide:lower()=="left"and UDim2.new(-1,-6,0,-2)or UDim2.new(1,6,0,-2)v.Size=UDim2.fromScale(1,0)j:UpdateDPI(v,{Position=false;Size=false})local U=u("Frame",{BackgroundColor3="MainColor";Position=UDim2.fromOffset(2,2),Size=UDim2.new(1,-4,1,-4);Parent=v})u("UICorner",{CornerRadius=UDim.new(0,j.CornerRadius-1),Parent=U})u("UIListLayout",{Padding=UDim.new(0,4);Parent=U})u("UIPadding",{PaddingBottom=UDim.new(0,8),PaddingLeft=UDim.new(0,8);PaddingRight=UDim.new(0,8);PaddingTop=UDim.new(0,8);Parent=U})local o local K local i=0 local s=0 local h if R.Title then o=u("TextLabel",{BackgroundTransparency=1;Text=R.Title;TextSize=15;TextXAlignment=Enum.TextXAlignment.Left;TextWrapped=true,Parent=U;DPIExclude={Size=true}})end if R.Description then K=u("TextLabel",{BackgroundTransparency=1;Text=R.Description;TextSize=14,TextXAlignment=Enum.TextXAlignment.Left;TextWrapped=true,Parent=U;DPIExclude={Size=true}})end function R.Resize(L)if o then local L,R=j:GetTextBounds(o.Text,o.FontFace,o.TextSize,Bl.AbsoluteSize.X-24*j.DPIScale)o.Size=UDim2.fromOffset(math.ceil(L),R)i=L end if K then local L,R=j:GetTextBounds(K.Text,K.FontFace,K.TextSize,Bl.AbsoluteSize.X-24*j.DPIScale)K.Size=UDim2.fromOffset(math.ceil(L),R)s=L end c.Size=UDim2.fromOffset((i>s and i or s)+24*j.DPIScale,0)end function R.ChangeTitle(B,L)if o then R.Title=tostring(L)o.Text=R.Title R:Resize()end end function R.ChangeDescription(B,L)if K then R.Description=tostring(L)K.Text=R.Description R:Resize()end end function R.ChangeStep(B,L)if h and R.Steps then L=math.clamp(L or 0,0,R.Steps)h.Size=UDim2.fromScale(L/R.Steps,1)end end function R.Destroy(L)R.Destroyed=true if b then b:Disconnect()end;(G:Create(v,j.NotifyTweenInfo,{Position=j.NotifySide:lower()=="left"and UDim2.new(-1,-6,0,-2)or UDim2.new(1,6,0,-2)})):Play()task.delay(j.NotifyTweenInfo.Time,function()(j.Notifications)[c]=nil c:Destroy()end)end R:Resize()local H=u("Frame",{BackgroundTransparency=1;Size=UDim2.new(1,0,0,7),Visible=R.Persist~=true and typeof(R.Time)~="Instance"or typeof(R.Steps)=="number",Parent=U})local g=u("Frame",{BackgroundColor3="BackgroundColor";BorderColor3="OutlineColor",BorderSizePixel=1,Position=UDim2.fromOffset(0,3);Size=UDim2.new(1,0,0,2);Parent=H})h=u("Frame",{BackgroundColor3="AccentColor";Size=UDim2.fromScale(1,1),Parent=g})if typeof(R.Time)=="Instance"then h.Size=UDim2.fromScale(0,1)end if R.SoundId then local L=R.SoundId if typeof(L)=="number"then L=string.format("rbxassetid://%d",L)end;(u("Sound",{SoundId=L,Volume=3;PlayOnRemove=true;Parent=w})):Destroy()end;(j.Notifications)[c]=R c.Visible=true;(G:Create(v,j.NotifyTweenInfo,{Position=UDim2.fromOffset(-2,-2)})):Play()task.delay(j.NotifyTweenInfo.Time,function()if R.Persist then return elseif typeof(R.Time)=="Instance"then repeat task.wait()until z or R.Destroyed else(G:Create(h,TweenInfo.new(R.Time,Enum.EasingStyle.Linear,Enum.EasingDirection.InOut),{Size=UDim2.fromScale(0,1)})):Play()task.wait(R.Time)end if not R.Destroyed then R:Destroy()end end)return R end function j.CreateWindow(R,L)L=j:Validate(L,k.Window)if L.GameName and L.GameName~=""then d:SetSubFolder(L.GameName)end local B=workspace.CurrentCamera.ViewportSize if U:IsStudio()and(B.X<=5 and B.Y<=5)then repeat B=workspace.CurrentCamera.ViewportSize task.wait()until B.X>5 and B.Y>5 end local z=B.X-64 local b=B.Y-64 j.MinSize=Vector2.new(math.min(j.MinSize.X,z),math.min(j.MinSize.Y,b))L.Size=UDim2.fromOffset(math.clamp(L.Size.X.Offset,j.MinSize.X,z),math.clamp(L.Size.Y.Offset,j.MinSize.Y,b))if typeof(L.Font)=="EnumItem"then L.Font=Font.fromEnum(L.Font)end j.CornerRadius=L.CornerRadius j:SetNotifySide(L.NotifySide)j.ShowCustomCursor=L.ShowCustomCursor j.Scheme.Font=L.Font j.ToggleKeybind=L.ToggleKeybind local c=L.SearchbarSize==UDim2.fromScale(1,1)local v local w local K local i local s local h local H local g local x local J=L.SidebarHighlightCallback local T={IsCompact=L.Compact;MinWidth=L.SidebarMinWidth,CompactWidth=L.SidebarCompactWidth,MinContentWidth=L.MinContentWidth or 260;CollapseThreshold=L.SidebarCollapseThreshold;CurrentWidth=nil;LastExpandedWidth=nil;MaxWidth=nil;GrabberHighlighted=false}if T.MinWidth<=T.CompactWidth then T.MinWidth=T.CompactWidth+32 end if T.CollapseThreshold<=0 then T.CollapseThreshold=.5 elseif T.CollapseThreshold>=1 then T.CollapseThreshold=.9 end local y=math.max(L.Size.X.Offset,T.MinWidth+T.MinContentWidth)local P=L.InitialSidebarWidth or math.floor(y*(L.InitialSidebarScale or.3))T.CurrentWidth=math.max(T.MinWidth,P)T.LastExpandedWidth=T.CurrentWidth local N={DividerLine=nil;TitleHolder=nil,WindowIcon=nil,WindowTitle=nil;RightWrapper=nil;TabsFrame=nil;ContainerFrame=nil,SidebarGrabber=nil,TabPadding={},TabLabels={}}local m=il and 38 or 0 local M={Active=false,StartWidth=0,StartX=0,TouchId=nil}local function p()return T.IsCompact and T.CompactWidth or T.CurrentWidth end local function e()local R=v and v.AbsoluteSize.X or L.Size.X.Offset if R<=0 then return end local B=R-T.MinContentWidth T.MaxWidth=math.max(T.MinWidth,B)T.CurrentWidth=math.clamp(T.CurrentWidth,T.MinWidth,T.MaxWidth)T.LastExpandedWidth=math.clamp(T.LastExpandedWidth or T.CurrentWidth,T.MinWidth,T.MaxWidth)end local function E(L)local R=N.DividerLine if not R then return end T.GrabberHighlighted=L==true if typeof(J)=="function"then j:SafeCallback(J,R,T.GrabberHighlighted)else local L=T.GrabberHighlighted and X(j.Scheme.OutlineColor)or j.Scheme.OutlineColor;(G:Create(R,j.TweenInfo,{BackgroundColor3=L})):Play()end end local function n()e()local R=p()local B=T.IsCompact if N.DividerLine then N.DividerLine.Position=UDim2.new(0,R,0,0)end if N.TabsFrame then N.TabsFrame.Size=UDim2.new(0,R,1,-70)end if N.ContainerFrame then N.ContainerFrame.Position=UDim2.fromOffset(R,49)N.ContainerFrame.Size=UDim2.new(1,-R,1,-70)end if N.SidebarGrabber then N.SidebarGrabber.Position=UDim2.fromOffset(R-N.SidebarGrabber.Size.X.Offset/2,49)end if N.TitleHolder then N.TitleHolder.Size=UDim2.new(0,math.max(T.CompactWidth,R),1,0)end if N.WindowIcon then if L.Icon then N.WindowIcon.Visible=true else N.WindowIcon.Visible=B or not N.WindowTitle end end if N.WindowTitle then N.WindowTitle.Visible=not B if not B then local B=math.max(0,R-(L.Icon and L.IconSize.X.Offset+12 or 12))local z=j:GetTextBounds(N.WindowTitle.Text,j.Scheme.Font,20,B)N.WindowTitle.Size=UDim2.new(0,z,1,0)else N.WindowTitle.Size=UDim2.new(0,0,1,0)end end if N.RightWrapper then local L=R+8 N.RightWrapper.Position=UDim2.new(0,L,.5,0)N.RightWrapper.Size=UDim2.new(1,(-L-8)-m,1,-16)end for L,R in ipairs(N.TabPadding)do R.PaddingLeft=UDim.new(0,B and 14 or 12)R.PaddingRight=UDim.new(0,B and 14 or 12)R.PaddingTop=UDim.new(0,B and 7 or 11)R.PaddingBottom=UDim.new(0,B and 7 or 11)end for L,R in ipairs(N.TabLabels)do R.Visible=not B end E(T.GrabberHighlighted)L.Compact=T.IsCompact for L,R in pairs(j.Tabs)do if R.RefreshSides then R:RefreshSides()end end end local function O(L)L=L or T.CurrentWidth local R=T.MinWidth*T.CollapseThreshold local B=T.IsCompact if L<=R then if not B then T.LastExpandedWidth=T.CurrentWidth end T.IsCompact=true else local R=L if B then R=math.max(L,T.MinWidth)end T.CurrentWidth=R T.IsCompact=false end local b=T.IsCompact and T.CompactWidth or T.CurrentWidth local c=(T.IsCompact and T.CompactWidth or T.MinWidth)+T.MinContentWidth local U=z local w=b+T.FixedContentWidth w=math.clamp(w,c,U)v.Size=UDim2.new(0,w,0,v.Size.Y.Offset)e()if not T.IsCompact then T.CurrentWidth=math.clamp(T.CurrentWidth,T.MinWidth,T.MaxWidth)T.LastExpandedWidth=T.CurrentWidth end n()end do j.KeybindFrame,j.KeybindContainer=j:AddDraggableMenu("Keybinds")j.KeybindFrame.AnchorPoint=Vector2.new(0,.5)j.KeybindFrame.Position=UDim2.new(0,6,.5,0)j.KeybindFrame.Visible=false j:UpdateDPI(j.KeybindFrame,{Position=false,Size=false})v=u("TextButton",{BackgroundColor3=function()return j:GetBetterColor(j.Scheme.BackgroundColor,-1)end;Name="Main";Text="";Position=L.Position;Size=L.Size,Visible=false,Parent=l,DPIExclude={Position=true}})u("UICorner",{CornerRadius=UDim.new(.03,L.CornerRadius-1),Parent=v})local R=u("Frame",{Name="Shadow",Parent=v,Position=UDim2.new(.5,0,.5,0),Size=UDim2.new(1,0,1,0);AnchorPoint=Vector2.new(.5,.5),BackgroundTransparency=1,BorderSizePixel=0;ZIndex=0})local B=u("ImageLabel",{Name="ShadowLabel",Parent=R;Position=UDim2.new(.5,0,.5,0);Size=UDim2.new(1.15,0,1.15,0);AnchorPoint=Vector2.new(.5,.5),BackgroundTransparency=1,Image="rbxassetid://119131500058545";ImageColor3=Color3.fromRGB(80,20,60),ImageTransparency=.35;SliceScale=1;TileSize=UDim2.new(1,0,1,0)})local z=p()N.DividerLine=j:MakeLine(v,{Position=UDim2.new(0,z,0,0),Size=UDim2.new(0,1,1,-21),ZIndex=2})local b={{Position=UDim2.fromOffset(0,48),Size=UDim2.new(1,0,0,1)},{AnchorPoint=Vector2.new(0,1);Position=UDim2.new(0,0,1,-20);Size=UDim2.new(1,0,0,1)}}for L,R in pairs(b)do j:MakeLine(v,R)end j:MakeOutline(v,L.CornerRadius,0)if L.BackgroundImage then u("ImageLabel",{Image=L.BackgroundImage,Position=UDim2.fromScale(0,0),Size=UDim2.fromScale(1,1);ScaleType=Enum.ScaleType.Stretch,ZIndex=999,BackgroundTransparency=1,ImageTransparency=.75,Parent=v})end if L.Center then v.Position=UDim2.new(.5,-v.Size.X.Offset/2,.5,-v.Size.Y.Offset/2)end local c=u("Frame",{BackgroundTransparency=1,Size=UDim2.new(1,0,0,48);Parent=v})j:MakeDraggable(v,c,false,true)local G=u("Frame",{BackgroundTransparency=1,Size=UDim2.new(0,math.max(T.CompactWidth,z),1,0);Parent=c})u("UIListLayout",{FillDirection=Enum.FillDirection.Horizontal;HorizontalAlignment=Enum.HorizontalAlignment.Center;VerticalAlignment=Enum.VerticalAlignment.Center;Padding=UDim.new(0,6);Parent=G})N.TitleHolder=G local x="76824839217865"if L.Icon then x=u("ImageButton",{Image=((tonumber(L.Icon)and{string.format("rbxassetid://%d",L.Icon)}or{L.Icon}))[1];Size=L.IconSize,BackgroundTransparency=1;Parent=G})local R=u("UIGradient",{Color=ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.fromRGB(255,162,40));ColorSequenceKeypoint.new(.35,Color3.fromRGB(175,55,255)),ColorSequenceKeypoint.new(.7,Color3.fromRGB(115,0,255));ColorSequenceKeypoint.new(1,Color3.fromRGB(255,90,30))});Rotation=25,Parent=x})local B={Color3.fromRGB(255,162,40);Color3.fromRGB(175,55,255),Color3.fromRGB(115,0,255);Color3.fromRGB(255,90,30)}local z={0,.35;.7,1}local b=#z local function c(L)local c={}for R=1,b,1 do local b=((z)[R]+L)%1 table.insert(c,ColorSequenceKeypoint.new(b,(B)[R]))end table.sort(c,function(L,R)return L.Time<R.Time end)if(c)[1].Time>0 then table.insert(c,1,ColorSequenceKeypoint.new(0,(c)[1].Value))end if(c)[#c].Time<1 then table.insert(c,ColorSequenceKeypoint.new(1,(c)[#c].Value))end R.Color=ColorSequence.new(c)end c(0)R.Transparency=NumberSequence.new(0)local v=7 local w=18 local o=tick()task.spawn(function()U.Heartbeat:Connect(function(L)local B=(tick()-o)%v local z=B/v c(z)R.Rotation=(R.Rotation+w*L)%360 end)end)else x=u("TextButton",{Text=L.Title:sub(1,1);TextScaled=true,Size=L.IconSize;BackgroundTransparency=1,Parent=G})end x.Visible=L.Icon~=nil or T.IsCompact N.WindowIcon=x local d=u("TextButton",{BackgroundTransparency=1,Text="Vellure",TextSize=20,Visible=not T.IsCompact;Parent=G})if not T.IsCompact then local R=math.max(0,z-(L.Icon and L.IconSize.X.Offset+12 or 12))local B=j:GetTextBounds(d.Text,j.Scheme.Font,20,R)d.Size=UDim2.new(0,B,1,0)else d.Size=UDim2.new(0,0,1,0)end N.WindowTitle=d local J=u("Frame",{BackgroundTransparency=1;AnchorPoint=Vector2.new(0,.5),Position=UDim2.new(0,z+8,.5,0);Size=UDim2.new(1,-((z+16)+m),1,-16);Parent=c})N.RightWrapper=J u("UIListLayout",{FillDirection=Enum.FillDirection.Horizontal;HorizontalAlignment=Enum.HorizontalAlignment.Right,VerticalAlignment=Enum.VerticalAlignment.Center,Padding=UDim.new(0,8);Parent=J})K=u("Frame",{Size=UDim2.fromScale(L.DisableSearch and 1 or.5,1),Visible=false,BackgroundTransparency=1,Parent=J})u("UIFlexItem",{FlexMode=Enum.UIFlexMode.Grow,Parent=K})u("UIListLayout",{FillDirection=Enum.FillDirection.Vertical;HorizontalAlignment=Enum.HorizontalAlignment.Left;VerticalAlignment=Enum.VerticalAlignment.Center,Parent=K})u("UIPadding",{PaddingBottom=UDim.new(0,8);PaddingLeft=UDim.new(0,2),PaddingRight=UDim.new(0,8),PaddingTop=UDim.new(0,8),Parent=K})i=u("TextLabel",{BackgroundTransparency=1;Size=UDim2.fromScale(1,0),AutomaticSize=Enum.AutomaticSize.Y;Text="",TextSize=14;TextXAlignment=Enum.TextXAlignment.Left;Parent=K})s=u("TextLabel",{BackgroundTransparency=1,Size=UDim2.fromScale(1,0);AutomaticSize=Enum.AutomaticSize.Y;Text="",TextWrapped=true;TextSize=14;TextXAlignment=Enum.TextXAlignment.Left;TextTransparency=.5;Parent=K})w=u("TextBox",{BackgroundColor3="MainColor";PlaceholderText="Search";Size=L.DisableSearch and UDim2.fromScale(0,1)or UDim2.fromScale(.5,1);TextScaled=true,Visible=not(L.DisableSearch or false);Parent=J})u("UIFlexItem",{FlexMode=Enum.UIFlexMode.Shrink,Parent=w})u("UICorner",{CornerRadius=UDim.new(.03,L.CornerRadius),Parent=w})u("UIPadding",{PaddingBottom=UDim.new(0,8);PaddingLeft=UDim.new(0,8),PaddingRight=UDim.new(0,8);PaddingTop=UDim.new(0,8);Parent=w})u("UIStroke",{Color="OutlineColor";Parent=w})local y=j:GetIcon("search")if y then u("ImageLabel",{Image=y.Url;ImageColor3="FontColor";ImageRectOffset=y.ImageRectOffset,ImageRectSize=y.ImageRectSize,ImageTransparency=.5;Size=UDim2.fromScale(1,1);SizeConstraint=Enum.SizeConstraint.RelativeYY,Parent=w})end if il then u("ImageLabel",{AnchorPoint=Vector2.new(1,.5);Image=il.Url;ImageColor3="OutlineColor",ImageRectOffset=il.ImageRectOffset;ImageRectSize=il.ImageRectSize,Position=UDim2.new(1,-10,.5,0),Size=UDim2.fromOffset(28,28),SizeConstraint=Enum.SizeConstraint.RelativeYY,Parent=c})end local P=u("Frame",{AnchorPoint=Vector2.new(0,1),BackgroundColor3=function()return j:GetBetterColor(j.Scheme.BackgroundColor,4)end,BackgroundTransparency=1,Position=UDim2.fromScale(0,1),Size=UDim2.new(1,0,0,20),Parent=v})u("UICorner",{CornerRadius=UDim.new(.03,L.CornerRadius-1);Parent=P})u("TextLabel",{BackgroundTransparency=1,Size=UDim2.fromScale(1,1),Text=L.Footer;TextSize=14;TextTransparency=.5,Parent=P})if L.Resizable then h=u("TextButton",{AnchorPoint=Vector2.new(1,0),BackgroundTransparency=1;Position=UDim2.new(1,-3,0,0),Size=UDim2.fromScale(1,1),SizeConstraint=Enum.SizeConstraint.RelativeYY,Text="";Parent=P})j:MakeResizable(v,h,function()e()n()for L,R in pairs(j.Tabs)do R:Resize(true)end end)end u("ImageLabel",{Image=ol and ol.Url or"",ImageColor3="FontColor";ImageRectOffset=ol and ol.ImageRectOffset or Vector2.zero;ImageRectSize=ol and ol.ImageRectSize or Vector2.zero;ImageTransparency=.5;Position=UDim2.fromOffset(2,2);Size=UDim2.new(1,-4,1,-4);Parent=h})j:GiveSignal((v:GetPropertyChangedSignal("AbsoluteSize")):Connect(function()e()n()end))H=u("ScrollingFrame",{AutomaticCanvasSize=Enum.AutomaticSize.Y;BackgroundColor3="BackgroundColor",CanvasSize=UDim2.fromScale(0,0);Position=UDim2.fromOffset(0,49);ScrollBarThickness=0;Size=UDim2.new(0,z,1,-70),Parent=v})u("UIListLayout",{Parent=H})N.TabsFrame=H g=u("Frame",{AnchorPoint=Vector2.new(0,0);BackgroundColor3=function()return j:GetBetterColor(j.Scheme.BackgroundColor,1)end,Name="Container",Position=UDim2.fromOffset(z,49);Size=UDim2.new(1,-z,1,-70),Parent=v})u("UIPadding",{PaddingBottom=UDim.new(0,0),PaddingLeft=UDim.new(0,6),PaddingRight=UDim.new(0,6);PaddingTop=UDim.new(0,0);Parent=g})N.ContainerFrame=g if L.EnableSidebarResize then local L=u("TextButton",{AutoButtonColor=false,BackgroundTransparency=1;Text="";Size=UDim2.new(0,12,1,-70);Position=UDim2.fromOffset(z-6,49);ZIndex=5;Parent=v})N.SidebarGrabber=L L.MouseEnter:Connect(function()if j.Toggled then E(true)end end)L.MouseLeave:Connect(function()if not M.Active then E(false)end end)j:GiveSignal(L.InputBegan:Connect(function(R)if not j.Toggled then return end if R.UserInputType~=Enum.UserInputType.MouseButton1 and R.UserInputType~=Enum.UserInputType.Touch then return end M.Active=true M.StartWidth=p()M.StartX=R.Position.X M.TouchId=R.UserInputType==Enum.UserInputType.Touch and R or nil E(true)local B B=j:GiveSignal(R.Changed:Connect(function()if R.UserInputState==Enum.UserInputState.End then M.Active=false M.TouchId=nil local R=j:MouseIsOverFrame(L,Vector2.new(a.X,a.Y))E(R and j.Toggled)if B then B:Disconnect()end end end))end))j:GiveSignal(o.InputChanged:Connect(function(L)if not M.Active then return end if not j.Toggled then M.Active=false M.TouchId=nil E(false)return end if L.UserInputType==Enum.UserInputType.MouseMovement or L==M.TouchId then local R=L.Position.X-M.StartX O(M.StartWidth+R)end end))j:GiveSignal(o.InputEnded:Connect(function(R)if not M.Active then return end if R.UserInputType==Enum.UserInputType.MouseButton1 or R.UserInputType==Enum.UserInputType.Touch or R==M.TouchId then M.Active=false M.TouchId=nil local R=j:MouseIsOverFrame(L,Vector2.new(a.X,a.Y))E(R and j.Toggled)end end))E(false)end task.defer(function()e()n()end)end x={}function x.GetSidebarWidth(L)return p()end function x.IsSidebarCompacted(L)return T.IsCompact end function x.SetSidebarWidth(R,L)O(L)end function x.SetCompact(R,L)assert(typeof(L)=="boolean","State must be a boolean")local B=T.MinWidth*T.CollapseThreshold if L then O(B*.5)else O(T.LastExpandedWidth or T.CurrentWidth or T.MinWidth)end end function x.ApplyLayout(L)n()end function x.AddTab(R,...)local B=nil local z=nil local b=nil if select("#",...)==1 and typeof(...)=="table"then local L=select(1,...)B=L.Name or"Tab"z=L.Icon b=L.Description else B=select(1,...)z=select(2,...)b=select(3,...)end local v local U local o local h local x local a local d local J local y local P local k z=j:GetCustomIcon(z)do v=u("TextButton",{BackgroundColor3="MainColor",BackgroundTransparency=1,Size=UDim2.new(1,0,0,40);Text="",Parent=H})local L=u("UIPadding",{PaddingBottom=UDim.new(0,T.IsCompact and 7 or 11);PaddingLeft=UDim.new(0,T.IsCompact and 14 or 12);PaddingRight=UDim.new(0,T.IsCompact and 14 or 12);PaddingTop=UDim.new(0,T.IsCompact and 7 or 11),Parent=v})table.insert(N.TabPadding,L)U=u("TextLabel",{BackgroundTransparency=1;Position=UDim2.fromOffset(30,0);Size=UDim2.new(1,-30,1,0),Text=B,TextSize=16,TextTransparency=.5,TextXAlignment=Enum.TextXAlignment.Left;Visible=not T.IsCompact;Parent=v})table.insert(N.TabLabels,U)if z then o=u("ImageLabel",{Image=z.Url,ImageColor3=z.Custom and"White"or"AccentColor",ImageRectOffset=z.ImageRectOffset,ImageRectSize=z.ImageRectSize,ImageTransparency=.5,Size=UDim2.fromScale(1,1);SizeConstraint=Enum.SizeConstraint.RelativeYY,Parent=v})end h=u("Frame",{BackgroundTransparency=1;Size=UDim2.fromScale(1,1),Visible=false,Parent=g})x=u("ScrollingFrame",{AutomaticCanvasSize=Enum.AutomaticSize.Y;BackgroundTransparency=1;CanvasSize=UDim2.fromScale(0,0),ScrollBarThickness=0;Parent=h})u("UIListLayout",{Padding=UDim.new(0,6);Parent=x})do u("Frame",{BackgroundTransparency=1;LayoutOrder=-1,Parent=x})u("Frame",{BackgroundTransparency=1;LayoutOrder=1;Parent=x})x.Size=UDim2.new(0,math.floor(h.AbsoluteSize.X/2)-3,1,0)j:UpdateDPI(x,{Size=x.Size})end a=u("ScrollingFrame",{AnchorPoint=Vector2.new(1,0);AutomaticCanvasSize=Enum.AutomaticSize.Y;BackgroundTransparency=1;CanvasSize=UDim2.fromScale(0,0);Position=UDim2.fromScale(1,0);ScrollBarThickness=0;Parent=h})u("UIListLayout",{Padding=UDim.new(0,6);Parent=a})do u("Frame",{BackgroundTransparency=1;LayoutOrder=-1,Parent=a})u("Frame",{BackgroundTransparency=1;LayoutOrder=1,Parent=a})a.Size=UDim2.new(0,math.floor(h.AbsoluteSize.X/2)-3,1,0)j:UpdateDPI(a,{Size=a.Size})end d=u("Frame",{AutomaticSize=Enum.AutomaticSize.Y,BackgroundColor3=Color3.fromRGB(127,0,0);BorderColor3=Color3.fromRGB(255,50,50),BorderMode=Enum.BorderMode.Inset;BorderSizePixel=1,Position=UDim2.fromOffset(0,6),Size=UDim2.fromScale(1,0),Visible=false,Parent=h})J=u("ScrollingFrame",{BackgroundTransparency=1,BorderSizePixel=0;AnchorPoint=Vector2.new(.5,.5);Position=UDim2.new(.5,0,.5,-3),Size=UDim2.new(1,0,1,-3);CanvasSize=UDim2.new(0,0,0,0);ScrollBarThickness=3;Parent=d})u("UIPadding",{PaddingBottom=UDim.new(0,4);PaddingLeft=UDim.new(0,6);PaddingRight=UDim.new(0,6);PaddingTop=UDim.new(0,4);Parent=J})y=u("TextLabel",{BackgroundTransparency=1,Size=UDim2.new(1,-4,0,14),Text="";TextColor3=Color3.fromRGB(255,50,50);TextSize=14,TextXAlignment=Enum.TextXAlignment.Left;Parent=J})k=u("UIStroke",{ApplyStrokeMode=Enum.ApplyStrokeMode.Contextual,Color=Color3.fromRGB(169,0,0);LineJoinMode=Enum.LineJoinMode.Miter;Parent=y})P=u("TextLabel",{BackgroundTransparency=1;Position=UDim2.fromOffset(0,16),Size=UDim2.new(1,-4,0,0);Text="",TextSize=14,TextWrapped=true;Parent=J,TextXAlignment=Enum.TextXAlignment.Left,TextYAlignment=Enum.TextYAlignment.Top})u("UIStroke",{ApplyStrokeMode=Enum.ApplyStrokeMode.Contextual,Color="Dark";LineJoinMode=Enum.LineJoinMode.Miter;Parent=P})end local m={Groupboxes={};Tabboxes={},DependencyGroupboxes={},Sides={x;a},WarningBox={IsNormal=false,LockSize=false,Visible=false,Title="WARNING";Text=""}}function m.UpdateWarningBox(R,L)if typeof(L.IsNormal)=="boolean"then m.WarningBox.IsNormal=L.IsNormal end if typeof(L.LockSize)=="boolean"then m.WarningBox.LockSize=L.LockSize end if typeof(L.Visible)=="boolean"then m.WarningBox.Visible=L.Visible end if typeof(L.Title)=="string"then m.WarningBox.Title=L.Title end if typeof(L.Text)=="string"then m.WarningBox.Text=L.Text end d.Visible=m.WarningBox.Visible y.Text=m.WarningBox.Title P.Text=m.WarningBox.Text m:Resize(true)d.BackgroundColor3=m.WarningBox.IsNormal==true and j.Scheme.BackgroundColor or Color3.fromRGB(127,0,0)d.BorderColor3=m.WarningBox.IsNormal==true and j.Scheme.OutlineColor or Color3.fromRGB(255,50,50)y.TextColor3=m.WarningBox.IsNormal==true and j.Scheme.FontColor or Color3.fromRGB(255,50,50)k.Color=m.WarningBox.IsNormal==true and j.Scheme.OutlineColor or Color3.fromRGB(169,0,0)if not(j.Registry)[d]then j:AddToRegistry(d,{})end if not(j.Registry)[y]then j:AddToRegistry(y,{})end if not(j.Registry)[k]then j:AddToRegistry(k,{})end;(j.Registry)[d].BackgroundColor3=function()return m.WarningBox.IsNormal==true and j.Scheme.BackgroundColor or Color3.fromRGB(127,0,0)end;(j.Registry)[d].BorderColor3=function()return m.WarningBox.IsNormal==true and j.Scheme.OutlineColor or Color3.fromRGB(255,50,50)end;(j.Registry)[y].TextColor3=function()return m.WarningBox.IsNormal==true and j.Scheme.FontColor or Color3.fromRGB(255,50,50)end;(j.Registry)[k].Color=function()return m.WarningBox.IsNormal==true and j.Scheme.OutlineColor or Color3.fromRGB(169,0,0)end end function m.RefreshSides(L)local R=d.Visible and d.AbsoluteSize.Y+6 or 0 for L,B in pairs(m.Sides)do B.Position=UDim2.new(B.Position.X.Scale,0,0,R)B.Size=UDim2.new(0,math.floor(h.AbsoluteSize.X/2)-3,1,-R)j:UpdateDPI(B,{Position=B.Position,Size=B.Size})end end function m.Resize(R,L)if L then local L=math.floor(h.AbsoluteSize.Y/3.25)local R,B=j:GetTextBounds(P.Text,j.Scheme.Font,P.TextSize,P.AbsoluteSize.X)local z=24+B if m.WarningBox.LockSize==true and z>=L then J.CanvasSize=UDim2.fromOffset(0,z)z=L else J.CanvasSize=UDim2.fromOffset(0,0)end P.Size=UDim2.new(1,-4,0,B)j:UpdateDPI(P,{Size=P.Size})d.Size=UDim2.new(1,0,0,z)j:UpdateDPI(d,{Size=d.Size})end m:RefreshSides()end function m.AddGroupbox(B,R)local z=u("Frame",{AutomaticSize=Enum.AutomaticSize.Y,BackgroundTransparency=1,Size=UDim2.fromScale(1,0);Parent=R.Side==1 and x or a})u("UIListLayout",{Padding=UDim.new(0,6),Parent=z})local b=j:MakeOutline(z,L.CornerRadius)b.Size=UDim2.fromScale(1,0)j:UpdateDPI(b,{Size=false})local c local v local U local w do c=u("Frame",{BackgroundColor3="BackgroundColor",Position=UDim2.fromOffset(2,2),Size=UDim2.new(1,-4,1,-4);Parent=b})u("UICorner",{CornerRadius=UDim.new(.03,L.CornerRadius-1),Parent=c})j:MakeLine(c,{Position=UDim2.fromOffset(0,34);Size=UDim2.new(1,0,0,1)})local B=j:GetCustomIcon(R.IconName)if B then u("ImageLabel",{Image=B.Url;ImageColor3=B.Custom and"White"or"AccentColor";ImageRectOffset=B.ImageRectOffset,ImageRectSize=B.ImageRectSize,Position=UDim2.fromOffset(6,6),Size=UDim2.fromOffset(22,22);Parent=c})end v=u("TextLabel",{BackgroundTransparency=1;Position=UDim2.fromOffset(B and 24 or 0,0);Size=UDim2.new(1,0,0,34);Text=R.Name;TextSize=15,TextXAlignment=Enum.TextXAlignment.Left,Parent=c})u("UIPadding",{PaddingLeft=UDim.new(0,12),PaddingRight=UDim.new(0,12);Parent=v})U=u("Frame",{BackgroundTransparency=1,Position=UDim2.fromOffset(0,35);Size=UDim2.new(1,0,1,-35),Parent=c})w=u("UIListLayout",{Padding=UDim.new(0,8),Parent=U})u("UIPadding",{PaddingBottom=UDim.new(0,7),PaddingLeft=UDim.new(0,7),PaddingRight=UDim.new(0,7),PaddingTop=UDim.new(0,7);Parent=U})end local o={BoxHolder=z;Holder=b;Container=U,Tab=m;DependencyBoxes={};Elements={}}function o.Resize(L)b.Size=UDim2.new(1,0,0,w.AbsoluteContentSize.Y+53*j.DPIScale)end setmetatable(o,sl)o:Resize();(m.Groupboxes)[R.Name]=o return o end function m.AddLeftGroupbox(B,L,R)return m:AddGroupbox({Side=1;Name=L,IconName=R})end function m.AddRightGroupbox(B,L,R)return m:AddGroupbox({Side=2;Name=L,IconName=R})end function m.AddTabbox(B,R)local z=u("Frame",{AutomaticSize=Enum.AutomaticSize.Y;BackgroundTransparency=1;Size=UDim2.fromScale(1,0);Parent=R.Side==1 and x or a})u("UIListLayout",{Padding=UDim.new(0,6),Parent=z})local b=j:MakeOutline(z,L.CornerRadius)b.Size=UDim2.fromScale(1,0)j:UpdateDPI(b,{Size=false})local c local v do c=u("Frame",{BackgroundColor3="BackgroundColor";Position=UDim2.fromOffset(2,2),Size=UDim2.new(1,-4,1,-4);Parent=b})u("UICorner",{CornerRadius=UDim.new(.03,L.CornerRadius-1);Parent=c})v=u("Frame",{BackgroundTransparency=1;Size=UDim2.new(1,0,0,34),Parent=c})u("UIListLayout",{FillDirection=Enum.FillDirection.Horizontal,HorizontalFlex=Enum.UIFlexAlignment.Fill;Parent=v})end local U={ActiveTab=nil;BoxHolder=z,Holder=b;Tabs={}}function U.AddTab(R,L)local B=u("TextButton",{BackgroundColor3="MainColor",BackgroundTransparency=0,Size=UDim2.fromOffset(0,34),Text=L,TextSize=15;TextTransparency=.5;Parent=v})local z=j:MakeLine(B,{AnchorPoint=Vector2.new(0,1),Position=UDim2.new(0,0,1,1),Size=UDim2.new(1,0,0,1)})local w=u("Frame",{BackgroundTransparency=1;Position=UDim2.fromOffset(0,35),Size=UDim2.new(1,0,1,-35),Visible=false;Parent=c})local o=u("UIListLayout",{Padding=UDim.new(0,8),Parent=w})u("UIPadding",{PaddingBottom=UDim.new(0,7);PaddingLeft=UDim.new(0,7);PaddingRight=UDim.new(0,7),PaddingTop=UDim.new(0,7);Parent=w})local K={ButtonHolder=B,Container=w;Tab=m;Elements={};DependencyBoxes={}}function K.Show(L)if U.ActiveTab then U.ActiveTab:Hide()end B.BackgroundTransparency=1 B.TextTransparency=0 z.Visible=false w.Visible=true U.ActiveTab=K K:Resize()end function K.Hide(L)B.BackgroundTransparency=0 B.TextTransparency=.5 z.Visible=true w.Visible=false U.ActiveTab=nil end function K.Resize(L)if U.ActiveTab~=K then return end b.Size=UDim2.new(1,0,0,o.AbsoluteContentSize.Y+53*j.DPIScale)end if not U.ActiveTab then K:Show()end B.MouseButton1Click:Connect(K.Show)setmetatable(K,sl);(U.Tabs)[L]=K return K end if R.Name then(m.Tabboxes)[R.Name]=U else table.insert(m.Tabboxes,U)end return U end function m.AddLeftTabbox(R,L)return m:AddTabbox({Side=1,Name=L})end function m.AddRightTabbox(R,L)return m:AddTabbox({Side=2,Name=L})end function m.Hover(R,L)if j.ActiveTab==m then return end;(G:Create(U,j.TweenInfo,{TextTransparency=L and.25 or.5})):Play()if o then(G:Create(o,j.TweenInfo,{ImageTransparency=L and.25 or.5})):Play()end end function m.Show(L)if j.ActiveTab then j.ActiveTab:Hide()end;(G:Create(v,j.TweenInfo,{BackgroundTransparency=0})):Play();(G:Create(U,j.TweenInfo,{TextTransparency=0})):Play()if o then(G:Create(o,j.TweenInfo,{ImageTransparency=0})):Play()end if b then K.Visible=true if c then w.Size=UDim2.fromScale(.5,1)end i.Text=B s.Text=b end h.Visible=true m:RefreshSides()j.ActiveTab=m if j.Searching then j:UpdateSearch(j.SearchText)end end function m.Hide(L)(G:Create(v,j.TweenInfo,{BackgroundTransparency=1})):Play();(G:Create(U,j.TweenInfo,{TextTransparency=.5})):Play()if o then(G:Create(o,j.TweenInfo,{ImageTransparency=.5})):Play()end h.Visible=false K.Visible=false j.ActiveTab=nil end if not j.ActiveTab then m:Show()end v.MouseEnter:Connect(function()m:Hover(true)end)v.MouseLeave:Connect(function()m:Hover(false)end)v.MouseButton1Click:Connect(m.Show);(j.Tabs)[B]=m return m end function x.AddKeyTab(R,L)local B local z local b local c do B=u("TextButton",{BackgroundColor3="MainColor",BackgroundTransparency=1;Size=UDim2.new(1,0,0,40),Text="";Parent=H})local R=u("UIPadding",{PaddingBottom=UDim.new(0,T.IsCompact and 7 or 11),PaddingLeft=UDim.new(0,T.IsCompact and 14 or 12),PaddingRight=UDim.new(0,T.IsCompact and 14 or 12),PaddingTop=UDim.new(0,T.IsCompact and 7 or 11);Parent=B})table.insert(N.TabPadding,R)z=u("TextLabel",{BackgroundTransparency=1,Position=UDim2.fromOffset(30,0),Size=UDim2.new(1,-30,1,0),Text=L;TextSize=16;TextTransparency=.5;TextXAlignment=Enum.TextXAlignment.Left;Visible=not T.IsCompact;Parent=B})table.insert(N.TabLabels,z)if Kl then b=u("ImageLabel",{Image=Kl.Url;ImageColor3="AccentColor",ImageRectOffset=Kl.ImageRectOffset,ImageRectSize=Kl.ImageRectSize;ImageTransparency=.5,Size=UDim2.fromScale(1,1),SizeConstraint=Enum.SizeConstraint.RelativeYY,Parent=B})end c=u("ScrollingFrame",{AutomaticCanvasSize=Enum.AutomaticSize.Y,BackgroundTransparency=1,CanvasSize=UDim2.fromScale(0,0),ScrollBarThickness=0,Size=UDim2.fromScale(1,1);Visible=false,Parent=g})u("UIListLayout",{HorizontalAlignment=Enum.HorizontalAlignment.Center,Padding=UDim.new(0,8);VerticalAlignment=Enum.VerticalAlignment.Center,Parent=c})u("UIPadding",{PaddingLeft=UDim.new(0,1),PaddingRight=UDim.new(0,1);Parent=c})end local v={Elements={},IsKeyTab=true}function v.AddKeyBox(L,...)local R={}local B=select(1,...)if typeof(B)=="function"then R.Callback=B else R.ExpectedKey=B R.Callback=select(2,...)end local z=u("Frame",{BackgroundTransparency=1,Size=UDim2.new(.75,0,0,21),Parent=c})local b=u("TextBox",{BackgroundColor3="MainColor";BorderColor3="OutlineColor";BorderSizePixel=1,PlaceholderText="Key",Size=UDim2.new(1,-71,1,0),TextSize=14;TextXAlignment=Enum.TextXAlignment.Left;Parent=z})u("UIPadding",{PaddingLeft=UDim.new(0,8),PaddingRight=UDim.new(0,8);Parent=b})local v=u("TextButton",{AnchorPoint=Vector2.new(1,0);BackgroundColor3="MainColor";BorderColor3="OutlineColor",BorderSizePixel=1,Position=UDim2.fromScale(1,0),Size=UDim2.new(0,63,1,0),Text="Execute",TextSize=14;Parent=z})v.MouseButton1Click:Connect(function()if R.ExpectedKey and b.Text~=R.ExpectedKey then R.Callback(false,b.Text)return end R.Callback(true,b.Text)end)end function v.RefreshSides(L) end function v.Resize(L) end function v.Hover(R,L)if j.ActiveTab==v then return end;(G:Create(z,j.TweenInfo,{TextTransparency=L and.25 or.5})):Play()if b then(G:Create(b,j.TweenInfo,{ImageTransparency=L and.25 or.5})):Play()end end function v.Show(L)if j.ActiveTab then j.ActiveTab:Hide()end;(G:Create(B,j.TweenInfo,{BackgroundTransparency=0})):Play();(G:Create(z,j.TweenInfo,{TextTransparency=0})):Play()if b then(G:Create(b,j.TweenInfo,{ImageTransparency=0})):Play()end c.Visible=true j.ActiveTab=v end function v.Hide(L)(G:Create(B,j.TweenInfo,{BackgroundTransparency=1})):Play();(G:Create(z,j.TweenInfo,{TextTransparency=.5})):Play()if b then(G:Create(b,j.TweenInfo,{ImageTransparency=.5})):Play()end c.Visible=false j.ActiveTab=nil end if not j.ActiveTab then v:Show()end B.MouseEnter:Connect(function()v:Hover(true)end)B.MouseLeave:Connect(function()v:Hover(false)end)B.MouseButton1Click:Connect(v.Show)v.Container=c setmetatable(v,sl);(j.Tabs)[L]=v return v end function j.Toggle(B,R)if typeof(R)=="boolean"then j.Toggled=R else j.Toggled=not j.Toggled end v.Visible=j.Toggled if L.UnlockMouseWhileOpen then Ll.Modal=j.Toggled end if j.Toggled and not j.IsMobile then local L=o.MouseIconEnabled pcall(function()U:UnbindFromRenderStep("ShowCursor")end)U:BindToRenderStep("ShowCursor",Enum.RenderPriority.Last.Value,function()o.MouseIconEnabled=not j.ShowCustomCursor Rl.Position=UDim2.fromOffset(a.X,a.Y)Rl.Visible=j.ShowCustomCursor if not(j.Toggled and(l and l.Parent))then o.MouseIconEnabled=L Rl.Visible=false U:UnbindFromRenderStep("ShowCursor")end end)elseif not j.Toggled then E(false)cl.Visible=false for L,R in pairs(j.Options)do if R.Type=="ColorPicker"then R.ColorMenu:Close()R.ContextMenu:Close()elseif R.Type=="Dropdown"or R.Type=="KeyPicker"then R.Menu:Close()end end end end if L.AutoShow then task.spawn(j.Toggle)end if j.IsMobile then local R=j:AddDraggableButton("Toggle",function()j:Toggle()end)local B=j:AddDraggableButton("Lock",function(L)j.CantDragForced=not j.CantDragForced L:SetText(j.CantDragForced and"Unlock"or"Lock")end)if L.MobileButtonsSide=="Right"then R.Button.Position=UDim2.new(1,-6,0,6)R.Button.AnchorPoint=Vector2.new(1,0)B.Button.Position=UDim2.new(1,-6,0,46)B.Button.AnchorPoint=Vector2.new(1,0)else B.Button.Position=UDim2.fromOffset(6,46)end end;(w:GetPropertyChangedSignal("Text")):Connect(function()j:UpdateSearch(w.Text)end)j:GiveSignal(o.InputBegan:Connect(function(L)if o:GetFocusedTextBox()then return end if typeof(j.ToggleKeybind)=="table"and(j.ToggleKeybind.Type=="KeyPicker"and L.KeyCode.Name==j.ToggleKeybind.Value)or L.KeyCode==j.ToggleKeybind then j.Toggle()end end))j:GiveSignal(o.WindowFocused:Connect(function()j.IsRobloxFocused=true end))j:GiveSignal(o.WindowFocusReleased:Connect(function()j.IsRobloxFocused=false end))return x end local function hl()local L,R=S(),S(true)for B,z in pairs(P)do if z.Type=="Dropdown"and z.SpecialType=="Player"then z:SetValues(z.ExcludeLocalPlayer and R or L)end end end local function Hl()local L=I()for R,B in pairs(P)do if B.Type=="Dropdown"and B.SpecialType=="Team"then B:SetValues(L)end end end j:GiveSignal(v.PlayerAdded:Connect(hl))j:GiveSignal(v.PlayerRemoving:Connect(hl))j:GiveSignal(i.ChildAdded:Connect(Hl))j:GiveSignal(i.ChildRemoved:Connect(Hl))j.SaveManager=d;(s()).Library=j return j
